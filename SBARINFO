//////////////////////////////////////////
// HXRTC HUD PLATINUM                   //
//////////////////////////////////////////

// HUD BASIC CONFIGURATION

Base Doom;
Height 0;
InterpolateHealth TRUE, 1024;
InterpolateArmor TRUE, 1024;
MonospaceFonts TRUE, "0";
Resolution 320, 240;

StatusBar Fullscreen, FullscreenOffsets
{


/***************************************
*
* TOP LEFT PANELS
*
***************************************/


// LEVEL STATS (TIME, KILLS, ITEMS & SECRETS)
	InInventory "HXCUS_KISToken"
	{
		InInventory "HXCUS_PTToken"
		{
			DrawImage "HXPTKIS", 2, 2;

			DrawString CONFONT, white, time, 9, 6;

			DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, kills, 49, 20;
			DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, items, 49, 26;
			DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, secrets, 49, 32;

			DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, monsters, 74, 20;
			DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, totalitems, 74, 26;
			DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, totalsecrets, 74, 32;
		}
		else
		{
			DrawImage "HXKIS", 2, 2;

			DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, kills, 49, 7;
			DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, items, 49, 13;
			DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, secrets, 49, 19;

			DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, monsters, 74, 7;
			DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, totalitems, 74, 13;
			DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, totalsecrets, 74, 19;
		}
	}
	else InInventory "HXCUS_PTToken"
	{
		DrawImage "HXPT", 2, 2;

		DrawString CONFONT, white, time, 9, 6;
	}


/***************************************
*
* TOP RIGHT PANELS
*
***************************************/


// POWERUP PANELS
	InInventory "HXCUS_PowerupBoxToken", 2
	{
		// Background panels + inactive icons
		DrawImage "HXINVUNO", -98, 2;
		DrawImage "HXBLURNO", -74, 2;
		DrawImage "HXRADSNO", -50, 2;
		DrawImage "HXLGHTNO", -26, 2;		
		// Active icon + border
		InInventory "PowerInvulnerable" { DrawBar "HXINVUOK", "HXINVOFF", poweruptime invulnerabilitysphere, vertical, interpolate(64), -98, 2; }
		InInventory "PowerInvisibility" { DrawBar "HXBLUROK", "HXINVOFF", poweruptime blursphere, vertical, interpolate(64), -74, 2; }
		InInventory "PowerIronfeet" { DrawBar "HXRADSOK", "HXINVOFF", poweruptime radsuit, vertical, interpolate(64), -50, 2; }
		InInventory "PowerLightamp" { DrawBar "HXLGHTOK", "HXINVOFF", poweruptime infrared, vertical, interpolate(64), -26, 2; }
	}
	else InInventory "HXCUS_PowerupBoxToken", 1
	{
		InInventory "PowerInvulnerable"
		{
			DrawImage "HXINVUNO", -98, 2;
			DrawBar "HXINVUOK", "HXINVOFF", poweruptime invulnerabilitysphere, vertical, interpolate(64), -98, 2;
		}
		InInventory "PowerInvisibility"
		{
			DrawImage "HXBLURNO", -74, 2;
			DrawBar "HXBLUROK", "HXINVOFF", poweruptime blursphere, vertical, interpolate(64), -74, 2;
		}
		InInventory "PowerIronfeet"
		{
			DrawImage "HXRADSNO", -50, 2;
			DrawBar "HXRADSOK", "HXINVOFF", poweruptime radsuit, vertical, interpolate(64), -50, 2;
		}
		InInventory "PowerLightamp"
		{
			DrawImage "HXLGHTNO", -26, 2;
			DrawBar "HXLGHTOK", "HXINVOFF", poweruptime infrared, vertical, interpolate(64), -26, 2;
		}
	}


// POWERUP TIME INDICATORS
	InInventory "HXCUS_PowerupTimerToken", 2
	{
		// Background panels
		DrawImage "HXBUFFT", -98, 25;
		DrawImage "HXBUFFT", -74, 25;
		DrawImage "HXBUFFT", -50, 25;
		DrawImage "HXBUFFT", -26, 25;
		// Active timers
		InInventory "PowerInvulnerable"
		{
			DrawImage "HXINVUT", -98, 25;	// Active timer border
			DrawImage "HXSML058", -95, 29;	// Active colon character
			DrawNumber 3, HXINDEXFONTS, untranslated, poweruptime invulnerabilitysphere, -77, 29;	// Time remaining
		}
		InInventory "PowerInvisibility"
		{
			DrawImage "HXBLURT", -74, 25;
			DrawImage "HXSML058", -71, 29;
			DrawNumber 3, HXINDEXFONTS, untranslated, poweruptime blursphere, -53, 29;
		}
		InInventory "PowerIronfeet"
		{
			DrawImage "HXRADST", -50, 25;
			DrawImage "HXSML058", -47, 29;
			DrawNumber 3, HXINDEXFONTS, untranslated, poweruptime radsuit, -29, 29;
		}
		InInventory "PowerLightamp"
		{
			DrawImage "HXLGHTT", -26, 25;
			DrawImage "HXSML058", -23, 29;
			DrawNumber 3, HXINDEXFONTS, untranslated, poweruptime infrared, -5, 29;
		}
	}
	else InInventory "HXCUS_PowerupTimerToken", 1
	{
		InInventory "PowerInvulnerable"
		{
			DrawImage "HXBUFFT", -98, 25;	// Background panel
			DrawImage "HXINVUT", -98, 25;	// Active timer border
			DrawImage "HXSML058", -95, 29;	// Active colon character
			DrawNumber 3, HXINDEXFONTS, untranslated, poweruptime invulnerabilitysphere, -77, 29;	// Time remaining
		}
		InInventory "PowerInvisibility"
		{
			DrawImage "HXBUFFT", -74, 25;
			DrawImage "HXBLURT", -74, 25;
			DrawImage "HXSML058", -71, 29;
			DrawNumber 3, HXINDEXFONTS, untranslated, poweruptime blursphere, -53, 29;
		}
		InInventory "PowerIronfeet"
		{
			DrawImage "HXBUFFT", -50, 25;
			DrawImage "HXRADST", -50, 25;
			DrawImage "HXSML058", -47, 29;
			DrawNumber 3, HXINDEXFONTS, untranslated, poweruptime radsuit, -29, 29;
		}
		InInventory "PowerLightamp"
		{
			DrawImage "HXBUFFT", -26, 25;
			DrawImage "HXLGHTT", -26, 25;
			DrawImage "HXSML058", -23, 29;
			DrawNumber 3, HXINDEXFONTS, untranslated, poweruptime infrared, -5, 29;
		}
	}



/***************************************
*
* BOTTOM LEFT PANELS
*
***************************************/


// DOOMGUY'S MUGSHOT
	DrawImage "HXMGSHT", 2, -71;

	// Mugshot reactive border - Invulnerability
	InInventory "PowerInvulnerable" { DrawImage "HXMGBFY", 2, -71; }
	else { DrawImage "HXMGBFG", 2, -71; }
	// Mugshot reactive corners - Berserk
	InInventory "PowerStrength" { DrawImage "HXMGCGR", 2, -71; }
	else { DrawImage "HXMGCGW", 2, -71; }

	// Air Supply and Rage Meter (HXRTC Gold default)
	IfWaterLevel 3 { DrawBar "HXARBROK", "HXARRGNO", airtime, vertical, interpolate(64), 6, -67; }
	InInventory "HXRTCPlayerRagePoints", 1 { DrawBar "HXRGBROK", "HXARRGNO", HXRTCPlayerRagePoints, vertical, interpolate(64), 41, -67; }

	// SmoothDoom 2.0 WIP death mugshot
	InInventory "PerkFist", 1 { DrawMugShot "STF", 5, xdeathface, 8, -65; }
	// Vanilla mugshot
	else { DrawMugShot "STF", 5, 8, -65; }


// INVENTORY ARTIFACTS
	InInventory "HXCUS_ArtifactToken"
	{
		DrawImage "HXINVSEL", 2, -106;
		DrawSelectedInventory alwaysshowcounter, centerbottom, HXINDEXFONTS, 25, -75, 44, -81, untranslated;
	}


// ITEM PANELS (BERSERK, ARMOR SAVE, ARMOR TYPE)
	InInventory "PowerStrength"
	{
		DrawImage "HXARMTYP", 72, -49;
		DrawImage "HXBERSRK", 72, -49;
	}

	InInventory "HXCUS_ArmorSaveToken"
	{
		DrawImage "HXARMSV", 48, -62;
		DrawNumber 3, HXGENERALFONTS, untranslated, savepercent, interpolate(128), whennotzero, 64, -58, 0;
		DrawSwitchableImage BasicArmor > 0, "HXSML010", "HXSML037", 65, -58;
	}

	DrawImage "HXARMTYP", 48, -49;
	DrawImage armoricon, 60, -38, center, 16, 15;


// HEALTH, ARMOR
	DrawImage "HXHPTOP", 2, -26;
	DrawImage "HXHPBOTS", 2, -14;
	
	// Health, Overhealth
	DrawString HXGENERALFONTM, untranslated, "HEALTH", 44, -20, 0;
	DrawBar "HXHABROK", "HXHABRBG", health (100), horizontal, interpolate(64), 46, -20;
	InInventory "HXSYS_HealthOverMaxToken", 1 { DrawBar "HXHEBRHI", "HXHABRNO", HXSYS_HealthOverMaxToken, horizontal, interpolate(64), 46, -20; }
	DrawNumber 4, CONFONT, yellow, health, interpolate(128), 122, -22, 0, red, 24, green, 51;

	// Armor, Overarmor
	DrawString HXGENERALFONTM, untranslated, "ARMOR", 43, -13, 1;
	DrawBar "HXHABROK", "HXHABRBG", armor (100), horizontal, interpolate(64), 46, -13;
	InInventory "HXSYS_ArmorOverMaxToken", 1 { DrawBar "HXHEBRHI", "HXHABRNO", HXSYS_ArmorOverMaxToken, horizontal, interpolate(64), 46, -13; }
	DrawNumber 4, CONFONT, yellow, armor, interpolate(128), 122, -15, 0, red, 24, green, 51;



/***************************************
*
* BOTTOM RIGHT PANELS
*
***************************************/


// AMMO AND WEAPONS
	/*	Brutal Doom Lite 
	*
	*	SEKRIT will reorganize HUD appropriately
	*/
	InInventory "BdMeleeAttacks", 1
	{
		InInventory not "FlakCannon"
		{
		// AMMO TALLIES PANEL - Brutal Doom Lite (No Sekrit)
			DrawImage "HXAMMTOP", -78, -41;
			DrawImage "HXAMMROW", -78, -31;
			DrawImage "HXAMMROW", -78, -25;
			DrawImage "HXAMMROW", -78, -19;
			DrawImage "HXAMMBOT", -78, -13;

			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CLIP", -73, -36, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SHEL", -73, -30, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"ROCK", -73, -24, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CELL", -73, -18, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCGold,			"GREN", -73, -12, 0, alignment(left);

			DrawBar "HXAMMON", "HXAMMOFF", ammo RifleAmmo,		horizontal, interpolate(64), -56, -36;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,			horizontal, interpolate(64), -56, -30;
			DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,		horizontal, interpolate(64), -56, -24;
			DrawBar "HXAMMON", "HXAMMOFF", ammo PlasmaAmmo,		horizontal, interpolate(64), -56, -18;
			DrawBar "HXAMMON", "HXAMMOFF", ammo GrenadeAmmo,	horizontal, interpolate(64), -56, -12;

			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo RifleAmmo,		-6, -36;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Shell,			-6, -30;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo RocketAmmo,	-6, -24;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo PlasmaAmmo,	-6, -18;
			DrawNumber 4, HXINDEXFONTS, HXRTCGold,		ammo GrenadeAmmo,	-6, -12;

			// Ammo Tally highlight equipped by type
			UsesAmmo
			{
				WeaponAmmo RifleAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -36, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RifleAmmo, -6, -36;
				}
				WeaponAmmo Shell
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -30, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell, -6, -30;
				}
				WeaponAmmo RocketAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -24, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -24;
				}
				WeaponAmmo PlasmaAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "CELL", -73, -18, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo PlasmaAmmo, -6, -18;
				}
				// CURRENT AMMO PANEL
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -128, -28;
				DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -82, -29;
			}
			else
			{
				// Ammoless
				DrawImage "HXNOAVAI", -134, -33;
			}
		// ARMS BAR - Brutal Doom Lite (No Sekrit)
			InInventory "HXCUS_ArmsBarToken", 1
			{
				DrawImage "HXARMS", -90, -67;

				DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -59, -63;
				DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -51, -63;
				DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -43, -63;
				DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -35, -63;
				DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -27, -63;
				DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -19, -63;
				DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -11, -63;
			}
		// KEYS BAR - Brutal Doom Lite (No Sekrit)
			DrawImage "HXKEYS", -90, -54;

			InInventory "SmoothBlueCard", 1 	{ DrawImage "HXKEYS0", -58, -51; }
			InInventory "SmoothYellowCard", 1	{ DrawImage "HXKEYS1", -49, -51; }
			InInventory "SmoothRedCard", 1 		{ DrawImage "HXKEYS2", -40, -51; }
			InInventory "SmoothSkullBlu", 1		{ DrawImage "HXKEYS3", -31, -51; }
			InInventory "SmoothSkullYel", 1		{ DrawImage "HXKEYS4", -22, -51; }
			InInventory "SmoothSkullRed", 1		{ DrawImage "HXKEYS5", -13, -51; }
		}
		else
		{
		// AMMO TALLIES PANEL - Brutal Doom Lite (Sekrit!)
			DrawImage "HXAMMTOP", -78, -47;
			DrawImage "HXAMMROW", -78, -37;
			DrawImage "HXAMMROW", -78, -31;
			DrawImage "HXAMMROW", -78, -25;
			DrawImage "HXAMMROW", -78, -19;
			DrawImage "HXAMMBOT", -78, -13;

			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CLIP", -73, -42, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SHEL", -73, -36, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"ROCK", -73, -30, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CELL", -73, -24, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"FLAK", -73, -18, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCGold,			"GREN", -73, -12, 0, alignment(left);

			DrawBar "HXAMMON", "HXAMMOFF", ammo RifleAmmo,		horizontal, interpolate(64), -56, -42;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,			horizontal, interpolate(64), -56, -36;
			DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,		horizontal, interpolate(64), -56, -30;
			DrawBar "HXAMMON", "HXAMMOFF", ammo PlasmaAmmo,		horizontal, interpolate(64), -56, -24;
			DrawBar "HXAMMON", "HXAMMOFF", ammo FlakAmmo,		horizontal, interpolate(64), -56, -18;
			DrawBar "HXAMMON", "HXAMMOFF", ammo GrenadeAmmo,	horizontal, interpolate(64), -56, -12;

			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo RifleAmmo,		-6, -42;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Shell,			-6, -36;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo RocketAmmo,	-6, -30;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo PlasmaAmmo,	-6, -24;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo FlakAmmo,		-6, -18;
			DrawNumber 4, HXINDEXFONTS, HXRTCGold,		ammo GrenadeAmmo,	-6, -12;

			// Ammo Tally highlight equipped by type
			UsesAmmo
			{
				WeaponAmmo RifleAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -42, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RifleAmmo, -6, -42;
				}
				WeaponAmmo Shell
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -36, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell,  -6, -36;
				}
				WeaponAmmo RocketAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -30, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -30;
				}
				WeaponAmmo PlasmaAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "CELL", -73, -24, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo PlasmaAmmo, -6, -24;
				}
				WeaponAmmo FlakAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "FLAK", -73, -18, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo FlakAmmo, -6, -18;
				}
				// CURRENT AMMO PANEL
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -128, -28;
				DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -82, -29;
			}
			else
			{
				// Ammoless
				DrawImage "HXNOAVAI", -134, -33;
			}
		// ARMS BAR - Brutal Doom Lite (Sekrit!)
			InInventory "HXCUS_ArmsBarToken", 1
			{
				DrawImage "HXARMS", -90, -73;

				DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -59, -69;
				DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -51, -69;
				DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -43, -69;
				DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -35, -69;
				DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -27, -69;
				DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -19, -69;
				DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -11, -69;
			}
		// KEYS BAR - Brutal Doom Lite (Sekrit!)
			DrawImage "HXKEYS", -90, -60;

			InInventory "SmoothBlueCard", 1 	{ DrawImage "HXKEYS0", -58, -57; }
			InInventory "SmoothYellowCard", 1	{ DrawImage "HXKEYS1", -49, -57; }
			InInventory "SmoothRedCard", 1 		{ DrawImage "HXKEYS2", -40, -57; }
			InInventory "SmoothSkullBlu", 1		{ DrawImage "HXKEYS3", -31, -57; }
			InInventory "SmoothSkullYel", 1		{ DrawImage "HXKEYS4", -22, -57; }
			InInventory "SmoothSkullRed", 1		{ DrawImage "HXKEYS5", -13, -57; }
		}
	}
	/*	Vanilla
	*
	*	Anything that doesn't change the default ammos should "Just Work"
	*/
	else
	{
	// AMMO TALLIES PANEL - Vanilla
		DrawImage "HXAMMTOP", -78, -35;
		DrawImage "HXAMMROW", -78, -25;
		DrawImage "HXAMMROW", -78, -19;
		DrawImage "HXAMMBOT", -78, -13;

		DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CLIP", -73, -30, 0, alignment(left);
		DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "SHEL", -73, -24, 0, alignment(left);
		DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "ROCK", -73, -18, 0, alignment(left);
		DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CELL", -73, -12, 0, alignment(left);

		DrawBar "HXAMMON", "HXAMMOFF", ammo Clip,		horizontal, interpolate(64), -56, -30;
		DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,		horizontal, interpolate(64), -56, -24;
		DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,	horizontal, interpolate(64), -56, -18;
		DrawBar "HXAMMON", "HXAMMOFF", ammo Cell,		horizontal, interpolate(64), -56, -12;

		DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Clip,		-6, -30;
		DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Shell,		-6, -24;
		DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo RocketAmmo,	-6, -18;
		DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Cell,		-6, -12;

		// Ammo Tally highlight equipped by type
		UsesAmmo
		{
			WeaponAmmo Clip
			{
				DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -30, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip, -6, -30;
			}
			WeaponAmmo Shell
			{
				DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -24, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell,  -6, -24;
			}
			WeaponAmmo RocketAmmo
			{
				DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -18, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -18;
			}
			WeaponAmmo Cell
			{
				DrawString HXGENERALFONTS, untranslated, "CELL", -73, -12, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS, untranslated, ammo Cell, -6, -12;
			}
			// CURRENT AMMO PANEL
			DrawImage "HXAMMO", -134, -33;
			DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -128, -28;
			DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -82, -29;
		}
		else
		{
			// Ammoless
			DrawImage "HXNOAVAI", -134, -33;
		}
	// ARMS BAR - Vanilla
		InInventory "HXCUS_ArmsBarToken", 1
		{
			DrawImage "HXARMS", -90, -61;

			DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -59, -57;
			DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -51, -57;
			DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -43, -57;
			DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -35, -57;
			DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -27, -57;
			DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -19, -57;
			DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -11, -57;
		}
	// KEYS BAR - Vanilla
		DrawImage "HXKEYS", -90, -48;

		InInventory "BlueCard", 1 		{ DrawImage "HXKEYS0", -58, -45; }
		InInventory "YellowCard", 1		{ DrawImage "HXKEYS1", -49, -45; }
		InInventory "RedCard", 1 		{ DrawImage "HXKEYS2", -40, -45; }
		InInventory "BlueSkull", 1		{ DrawImage "HXKEYS3", -31, -45; }
		InInventory "YellowSkull", 1	{ DrawImage "HXKEYS4", -22, -45; }
		InInventory "RedSkull", 1		{ DrawImage "HXKEYS5", -13, -45; }
	}


// CURRENT WEAPON ICON PANEL
	InInventory "HXCUS_WeaponIconToken", 1
	{
		DrawImage "HXWEAPON", -134, -53;

		/*	PerK's Smoother Weapon Animations Enhanced 3.2.1
		*
		*	ACTOR HX_PerkSmooth_glovedfist
		*	ACTOR HX_PerkSmooth_blackgloves: only display if "HX_PerkSmooth_glovedfist" is also found
		*/
		InInventory "ZPerkFist", 1
		{
			IsSelected "ZPerkFist"
			{
				InInventory "HX_PerkSmooth_glovedfist", 1
				{
					InInventory "HX_PerkSmooth_blackgloves", 1 { DrawImage "BKFSE0", -112, -43, center, 36, 12; }
					else { DrawImage "PKFSE0", -112, -43, center, 36, 12; }
				}
				else { DrawImage "PKF2E0", -112, -43, center, 36, 12; }
			}
			else
			{	// Everything not a fist, at the moment
				DrawImage weaponicon, -112, -43, center, 36, 12, alticonfirst;
			}
		}

		/*	SmoothDoom 2.0 WIP
		*
		*	ACTOR HX_SmoothDoom2_blackgloves
		*	ACTOR HX_SmoothDoom2_doom64
		*/
		else InInventory "PerkFist", 1
		{
			IsSelected "PerkFist"
			{
				InInventory "HX_SmoothDoom2_doom64" { DrawImage "PUNFE0", -112, -43, center, 36, 12; }
				else { DrawImage "PKFSE0", -112, -43, center, 36, 12; }
			}
			else IsSelected "Z86Chainsaw"
			{
				InInventory "HX_SmoothDoom2_doom64" { DrawImage "SW64G0", -112, -43, center, 36, 12; }
				else { DrawImage "CSAWA0", -112, -43, center, 36, 12; }
			}
			else IsSelected "PerkShotgun"
			{
				InInventory "HX_SmoothDoom2_doom64" { DrawImage "64SGB0", -112, -43, center, 36, 12; }
				else { DrawImage "SHOTA0", -112, -43, center, 36, 12; }
			}
			else IsSelected "PerkSuperShotgun"
			{
				InInventory "HX_SmoothDoom2_doom64" { DrawImage "64S2A0", -112, -43, center, 36, 12; }
				else { DrawImage "SGN2A0", -112, -43, center, 36, 12; }
			}
			else IsSelected "Z86Chaingun"
			{
				InInventory "HX_SmoothDoom2_doom64" { DrawImage "64CGB0", -112, -43, center, 36, 12; }
				else { DrawImage "MGUNA0", -112, -43, center, 36, 12; }
			}
			else IsSelected "PerkRocketLauncher"
			{
				InInventory "HX_SmoothDoom2_doom64" { DrawImage "64LAA0", -112, -43, center, 36, 12; }
				else { DrawImage "LAUNA0", -112, -43, center, 36, 12; }
			}
			else IsSelected "BloxPlasmaRifle"
			{
				InInventory "HX_SmoothDoom2_doom64" { DrawImage "PL64A0", -112, -43, center, 36, 12; }
				else { DrawImage "PLRLA0", -112, -43, center, 36, 12; }
			}
			else IsSelected "Z86BFG9000"
			{
				InInventory "HX_SmoothDoom2_doom64" { DrawImage "BFUGA0", -112, -43, center, 36, 12; }
				else { DrawImage "BFG9A0", -112, -43, center, 36, 12; }
			}
			else
			{	// PerkPistol, Rifle
				DrawImage weaponicon, -112, -43, center, 36, 12, alticonfirst;
			}
		}
		else 
		{
			DrawImage weaponicon, -112, -43, center, 36, 12, alticonfirst, alternateonfail
			{
				DrawString HXGENERALFONTS, untranslated, weapontag, -131, -50, 0, alignment(left), linebreaks(38);
			}
		}
	}


// DEV STUFF DON'T LOOK AT THIS IT'S SPOOKY
	InInventory "HXSYS_DebugTagToken", 1
	{
		// Bruh, what's your class?
		DrawString HXGENERALFONTM, HXRTCGold, playerclass, 2, 44, 0, alignment(left), drawshadow(1,1);
		// What's that badass boomstick you got?
		DrawString HXGENERALFONTM, HXRTCGold, weapontag, 2, 52, 0, alignment(left), drawshadow(1,1);
		// How bout dat ammo, yo?!
		DrawString HXGENERALFONTM, HXRTCGold, ammo1tag, 2, 60, 0, alignment(left), drawshadow(1,1);
		DrawString HXGENERALFONTM, HXRTCGold, ammo2tag, 2, 68, 0, alignment(left), drawshadow(1,1);
	}


}



/***************************************
*
* INVENTORY BAR
*
***************************************/


StatusBar InventoryFullscreen, FullscreenOffsets
{
	DrawInventoryBar Doom, alwaysshowcounter, 5, HXINDEXFONTS, -76 + center, -32, -50 + center, -12, untranslated;
}



/***************************************
*
* HUD & INVENTORY BAR DISABLED FOR NORMAL AND AUTOMAP SCREEN MODES
*
***************************************/


StatusBar Normal {}

StatusBar Automap {}

StatusBar Inventory {}