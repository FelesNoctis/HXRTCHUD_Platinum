#library "HXMLED"
#include "zcommon.acs"
#import "HXAMODCM.acs"

str led9mmAmmo = "9mmAmmo";
str hxled9mmammo = "HX_LedsGenWep9mmAmmo";
str ledberserk = "DimStrength";
str ledradsuit = "DimIronFeet";

script "HXS_Leds35ticHandler" enter
{
	// Wait 35 tics (1sec) before engaging, to make sure the token has been given
	delay(35);

	if (CheckInventory(hxmod_ledgwmtoken))
	{
		while (true)
		{
		// Key Management Tokens
			// Blue Keys
			HXS_ItemSync(vanillabluecard, hxgen_bluecard);
			HXS_ItemSync(vanillablueskull, hxgen_blueskull);
			// Red Keys
			HXS_ItemSync(vanillaredcard, hxgen_redcard);
			HXS_ItemSync(vanillaredskull, hxgen_redskull);
			// Yellow Keys
			HXS_ItemSync(vanillayellowcard, hxgen_yellowcard);
			HXS_ItemSync(vanillayellowskull, hxgen_yellowskull);

		// Powerup Management Tokens
			// Berserk
			HXS_ItemSync(ledberserk, hxgen_berserk);

	// Timer
			// Wait 35 tics (~1sec) before repeating, since we want this to be a clock
			delay(35);
		}
	}
}

script "HXS_Leds7ticHandler" enter
{
	// Wait 35 tics (1sec) before engaging, to make sure the token has been given
	delay(35);

	if (CheckInventory(hxmod_ledgwmtoken))
	{
		while (true)
		{
		// Powerup Management Tokens
			// Infrared
			HXS_PowerupTimer(vanillainfrared, hxgen_infrared);
			// Invisibility
			HXS_PowerupTimer(vanillainvisibility, hxgen_invisibility);
			// Invulnerability
			HXS_PowerupTimer(vanillainvulnerability, hxgen_invulnerability);
			// Radsuit
			HXS_PowerupTimer(ledradsuit, hxgen_radsuit);

			// Numeric lead character bypass for SBARINFO
			HXS_ItemSync(led9mmAmmo, hxled9mmammo);

		// Timer
			// Wait 7 tics (1/5sec) before repeating, since we want this to be reasonably responsive
			delay(7);
		}
	}
}