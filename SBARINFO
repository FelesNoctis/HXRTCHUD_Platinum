//////////////////////////////////////////
// HXRTC HUD PLATINUM                   //
//////////////////////////////////////////

// HUD BASIC CONFIGURATION

Base Doom;
Height 0;
InterpolateHealth TRUE, 1024;
InterpolateArmor TRUE, 1024;
MonospaceFonts TRUE, "0";
Resolution 320, 240;

StatusBar Fullscreen, FullscreenOffsets
{


/***************************************
*
* TOP LEFT PANELS
*
***************************************/


// LEVEL STATS (TIME, KILLS, ITEMS & SECRETS)
	InInventory not "HXSYS_NormalHUDKillerToken", 1
	{
		InInventory "HXCUS_KISToken"
		{
			InInventory "HXCUS_PTToken"
			{
				/* DrawImage "HXPTKIS", 2, 2; */
				DrawImage "HXPT", 2, 2;
				DrawString CONFONT, white, time, 9, 6;

				InInventory not "HXCUS_KISExtendedToken"
				{
					DrawImage "HXKIS", 2, 19;
					DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, kills, 49, 24;
					DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, items, 49, 30;
					DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, secrets, 49, 36;
					DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, monsters, 74, 24;
					DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, totalitems, 74, 30;
					DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, totalsecrets, 74, 36;
				}
				else
				{
					DrawImage "HXKISE", 2, 19;
					DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, kills, 44, 24;
					DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, items, 44, 30;
					DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, secrets, 44, 36;
					DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, monsters, 74, 24;
					DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, totalitems, 74, 30;
					DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, totalsecrets, 74, 36;
				}
			}
			else
			{
				InInventory not "HXCUS_KISExtendedToken"
				{
					DrawImage "HXKIS", 2, 2;
					DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, kills, 49, 7;
					DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, items, 49, 13;
					DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, secrets, 49, 19;
					DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, monsters, 74, 7;
					DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, totalitems, 74, 13;
					DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, totalsecrets, 74, 19;
				}
				else
				{
					DrawImage "HXKISE", 2, 2;
					DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, kills, 44, 7;
					DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, items, 44, 13;
					DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, secrets, 44, 19;
					DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, monsters, 74, 7;
					DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, totalitems, 74, 13;
					DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, totalsecrets, 74, 19;
				}
			}
		}
		else InInventory "HXCUS_PTToken"
		{
			DrawImage "HXPT", 2, 2;
			DrawString CONFONT, white, time, 9, 6;
		}
	}


/***************************************
*
* TOP RIGHT PANELS
*
***************************************/


// POWERUP PANELS
	InInventory not "HXSYS_NormalHUDKillerToken", 1
	{
	/*	Doom 4 Vanilla */
		InInventory "HXMOD_Doom4Vanilla", 1
		{
			InInventory "HXCUS_PowerupBoxToken", 2	// Always
			{
				// Background panels + inactive icons
				DrawImage "HX64IVNO", -50, 2;
				DrawImage "HX64RDNO", -26, 2;
				// Active icon + border
				InInventory "HX_InvulnerabilityPowerUpToken" { DrawBar "HX64IVOK", "HXINVOFF", HX_InvulnerabilityPowerUpToken, vertical, interpolate(64), -50, 2; }
				InInventory "HX_RadSuitPowerUpToken" { DrawBar "HX64RDOK", "HXINVOFF", HX_RadSuitPowerUpToken, vertical, interpolate(64), -26, 2; }		
			}
			else InInventory "HXCUS_PowerupBoxToken", 1	// Active only
			{
				InInventory "HX_InvulnerabilityPowerUpToken"
				{
					DrawImage "HX64IVNO", -50, 2;
					DrawBar "HX64IVOK", "HXINVOFF", HX_InvulnerabilityPowerUpToken, vertical, interpolate(64), -50, 2;
				}
				InInventory "HX_RadSuitPowerUpToken"
				{
					DrawImage "HX64RDNO", -26, 2;
					DrawBar "HX64RDOK", "HXINVOFF", HX_RadSuitPowerUpToken, vertical, interpolate(64), -26, 2;
				}
			}
		}
	/*	Lt. Typhon */
		else InInventory "HXMOD_BadAssBitch", 1
		{
			InInventory "HXCUS_PowerupBoxToken", 2	// Always
			{
				// Background panels + inactive icons
				DrawImage "HXTYBANO", -50, 2;
				DrawImage "HXINVUNO", -26, 2;
				// Active icon + border
				InInventory "HX_LtTyphonBurningAngelToken"
				{
					InInventory not "HXCUS_LowMotionToken", 1
						{ DrawBar "HXTYBAF0", "HXINVOFF", HX_LtTyphonBurningAngelToken, vertical, interpolate(64), -50, 2; }
					else
						{ DrawBar "HXTYBAOK", "HXINVOFF", HX_LtTyphonBurningAngelToken, vertical, interpolate(64), -50, 2; }
				}		
				InInventory "HX_InvulnerabilityPowerUpToken" { DrawBar "HXINVUOK", "HXINVOFF", HX_InvulnerabilityPowerUpToken, vertical, interpolate(64), -26, 2; }
			}
			else InInventory "HXCUS_PowerupBoxToken", 1	// Active only
			{
				InInventory "HX_LtTyphonBurningAngelToken"
				{
					DrawImage "HXTYBANO", -26, 2;
					InInventory not "HXCUS_LowMotionToken", 1
						{ DrawBar "HXTYBAF0", "HXINVOFF", HX_LtTyphonBurningAngelToken, vertical, interpolate(64), -50, 2; }
					else
						{ DrawBar "HXTYBAOK", "HXINVOFF", HX_LtTyphonBurningAngelToken, vertical, interpolate(64), -50, 2; }
				}
				InInventory "HX_InvulnerabilityPowerUpToken"
				{
					DrawImage "HXINVUNO", -50, 2;
					DrawBar "HXINVUOK", "HXINVOFF", HX_InvulnerabilityPowerUpToken, vertical, interpolate(64), -26, 2;
				}
			}
		}
	/*	Standard, not Doom 64 */
		else InInventory not "HXMOD_Doom64Art", 1
		{
			InInventory "HXCUS_PowerupBoxToken", 2	// Always
			{
				// Background panels + inactive icons
				DrawImage "HXINVUNO", -98, 2;
				DrawImage "HXBLURNO", -74, 2;
				DrawImage "HXRADSNO", -50, 2;
				DrawImage "HXLGHTNO", -26, 2;
				// Active icon + border
				InInventory "HX_InvulnerabilityPowerUpToken" { DrawBar "HXINVUOK", "HXINVOFF", HX_InvulnerabilityPowerUpToken, vertical, interpolate(64), -98, 2; }
				InInventory "HX_InvisibilityPowerUpToken" { DrawBar "HXBLUROK", "HXINVOFF", HX_InvisibilityPowerUpToken, vertical, interpolate(64), -74, 2; }
				InInventory "HX_RadSuitPowerUpToken" { DrawBar "HXRADSOK", "HXINVOFF", HX_RadSuitPowerUpToken, vertical, interpolate(64), -50, 2; }		
				InInventory "HX_InfraredPowerUpToken" { DrawBar "HXLGHTOK", "HXINVOFF", HX_InfraredPowerUpToken, vertical, interpolate(64), -26, 2; }
			}
			else InInventory "HXCUS_PowerupBoxToken", 1	// Active only
			{
				InInventory "HX_InvulnerabilityPowerUpToken"
				{
					DrawImage "HXINVUNO", -98, 2;
					DrawBar "HXINVUOK", "HXINVOFF", HX_InvulnerabilityPowerUpToken, vertical, interpolate(64), -98, 2;
				}
				InInventory "HX_InvisibilityPowerUpToken"
				{
					DrawImage "HXBLURNO", -74, 2;
					DrawBar "HXBLUROK", "HXINVOFF", HX_InvisibilityPowerUpToken, vertical, interpolate(64), -74, 2;
				}
				InInventory "HX_RadSuitPowerUpToken"
				{
					DrawImage "HXRADSNO", -50, 2;
					DrawBar "HXRADSOK", "HXINVOFF", HX_RadSuitPowerUpToken, vertical, interpolate(64), -50, 2;
				}
				InInventory "HX_InfraredPowerUpToken"
				{
					DrawImage "HXLGHTNO", -26, 2;
					DrawBar "HXLGHTOK", "HXINVOFF", HX_InfraredPowerUpToken, vertical, interpolate(64), -26, 2;
				}
			}
		}
	/*	Standard, Doom 64 */
		else InInventory "HXMOD_Doom64Art", 1
		{
			InInventory "HXCUS_PowerupBoxToken", 2	// Always
			{
				// Background panels + inactive icons
				DrawImage "HX64IVNO", -98, 2;
				DrawImage "HX64BLNO", -74, 2;
				DrawImage "HX64RDNO", -50, 2;
				DrawImage "HX64LTNO", -26, 2;
				// Active icon + border
				InInventory "HX_InvulnerabilityPowerUpToken" { DrawBar "HX64IVOK", "HXINVOFF", HX_InvulnerabilityPowerUpToken, vertical, interpolate(64), -98, 2; }
				InInventory "HX_InvisibilityPowerUpToken" { DrawBar "HX64BLOK", "HXINVOFF", HX_InvisibilityPowerUpToken, vertical, interpolate(64), -74, 2; }
				InInventory "HX_RadSuitPowerUpToken" { DrawBar "HX64RDOK", "HXINVOFF", HX_RadSuitPowerUpToken, vertical, interpolate(64), -50, 2; }		
				InInventory "HX_InfraredPowerUpToken" { DrawBar "HX64LTOK", "HXINVOFF", HX_InfraredPowerUpToken, vertical, interpolate(64), -26, 2; }
			}
			else InInventory "HXCUS_PowerupBoxToken", 1	// Active only
			{
				InInventory "HX_InvulnerabilityPowerUpToken"
				{
					DrawImage "HX64IVNO", -98, 2;
					DrawBar "HX64IVOK", "HXINVOFF", HX_InvulnerabilityPowerUpToken, vertical, interpolate(64), -98, 2;
				}
				InInventory "HX_InvisibilityPowerUpToken"
				{
					DrawImage "HX64BLNO", -74, 2;
					DrawBar "HX64BLOK", "HXINVOFF", HX_InvisibilityPowerUpToken, vertical, interpolate(64), -74, 2;
				}
				InInventory "HX_RadSuitPowerUpToken"
				{
					DrawImage "HX64RDNO", -50, 2;
					DrawBar "HX64RDOK", "HXINVOFF", HX_RadSuitPowerUpToken, vertical, interpolate(64), -50, 2;
				}
				InInventory "HX_InfraredPowerUpToken"
				{
					DrawImage "HX64LTNO", -26, 2;
					DrawBar "HX64LTOK", "HXINVOFF", HX_InfraredPowerUpToken, vertical, interpolate(64), -26, 2;
				}
			}
		}
	/*	Brutal Doom Platinum additions */
		InInventory "HXMOD_BrutalDoomPlatinum", 1
		{
			InInventory "HXCUS_PowerupBoxToken", 2	// Always
			{
				// Background panels + inactive icons
				DrawImage "HXBDSHNO", -146, 2;
				DrawImage "HXQUADNO", -122, 2;
				// Active icon + border
				InInventory "HX_HastePowerUpToken" { DrawBar "HXBDSHOK", "HXINVOFF", HX_HastePowerUpToken, vertical, interpolate(64), -146, 2; }
				InInventory "HX_QuadDamagePowerUpToken" { DrawBar "HXQUADOK", "HXINVOFF", HX_QuadDamagePowerUpToken, vertical, interpolate(64), -122, 2; }
			}
			else InInventory "HXCUS_PowerupBoxToken", 1	// Active only
			{
				InInventory "HX_HastePowerUpToken"
				{
					DrawImage "HXBDSHNO", -146, 2;	// Background panel + inactive icon
					DrawBar "HXBDSHOK", "HXINVOFF", HX_HastePowerUpToken, vertical, interpolate(64), -146, 2;	// Active icon + border
				}
				InInventory "HX_QuadDamagePowerUpToken"
				{
					DrawImage "HXQUADNO", -122, 2;	// Background panel + inactive icon
					DrawBar "HXQUADOK", "HXINVOFF", HX_QuadDamagePowerUpToken, vertical, interpolate(64), -122, 2;	// Active icon + border
				}
			}
		}

// POWERUP TIME INDICATORS
	/*	Doom 4 Vanilla */
		InInventory "HXMOD_Doom4Vanilla", 1
		{
			InInventory "HXCUS_PowerupTimerToken", 2	// Always
			{
				// Background panels
				DrawImage "HXBUFFT", -50, 25;
				DrawImage "HXBUFFT", -26, 25;
				// Active timers
				InInventory "HX_InvulnerabilityPowerUpToken"
				{
					DrawImage "HX64IVT", -50, 25;
					DrawImage "HXSML058", -47, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InvulnerabilityPowerUpToken, -29, 29;
				}
				InInventory "HX_RadSuitPowerUpToken"
				{
					DrawImage "HX64RDT", -26, 25;
					DrawImage "HXSML058", -23, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_RadSuitPowerUpToken, -5, 29;
				}
			}
			else InInventory "HXCUS_PowerupTimerToken", 1	// Active Only
			{
				InInventory "HX_InvulnerabilityPowerUpToken"
				{
					DrawImage "HXBUFFT", -50, 25;
					DrawImage "HX64IVT", -50, 25;
					DrawImage "HXSML058", -47, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InvulnerabilityPowerUpToken, -29, 29;
				}
				InInventory "HX_RadSuitPowerUpToken"
				{
					DrawImage "HXBUFFT", -26, 25;
					DrawImage "HX64RDT", -26, 25;
					DrawImage "HXSML058", -23, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_RadSuitPowerUpToken, -5, 29;
				}
			}
		}
	/*	Lt. Typhon */
		InInventory "HXMOD_BadAssBitch", 1
		{
			InInventory "HXCUS_PowerupTimerToken", 2	// Always
			{
				// Background panels
				DrawImage "HXBUFFT", -50, 25;
				DrawImage "HXBUFFT", -26, 25;
				// Active timers
				InInventory "HX_LtTyphonBurningAngelToken"
				{
					DrawImage "HXTYBAT", -50, 25;
					DrawImage "HXSML058", -47, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_LtTyphonBurningAngelToken, -29, 29;
				}
				InInventory "HX_InvulnerabilityPowerUpToken"
				{
					DrawImage "HXINVUT", -26, 25;
					DrawImage "HXSML058", -23, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InvulnerabilityPowerUpToken, -5, 29;
				}
			}
			else InInventory "HXCUS_PowerupTimerToken", 1	// Active Only
			{
				InInventory "HX_LtTyphonBurningAngelToken"
				{
					
					DrawImage "HXBUFFT", -50, 25;
					DrawImage "HXTYBAT", -50, 25;
					DrawImage "HXSML058", -47, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_LtTyphonBurningAngelToken, -29, 29;
				}
				InInventory "HX_InvulnerabilityPowerUpToken"
				{
					DrawImage "HXBUFFT", -26, 25;
					DrawImage "HXINVUT", -26, 25;
					DrawImage "HXSML058", -23, 29; 
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InvulnerabilityPowerUpToken, -5, 29;
				}
			}
		}
	/*	Standard, not Doom 64 */
		else InInventory not "HXMOD_Doom64Art", 1
		{
			InInventory "HXCUS_PowerupTimerToken", 2	// Always
			{
				// Background panels
				DrawImage "HXBUFFT", -98, 25;
				DrawImage "HXBUFFT", -74, 25;
				DrawImage "HXBUFFT", -50, 25;
				DrawImage "HXBUFFT", -26, 25;
				// Active timers
				InInventory "HX_InvulnerabilityPowerUpToken"
				{
					DrawImage "HXINVUT", -98, 25;
					DrawImage "HXSML058", -95, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InvulnerabilityPowerUpToken, -77, 29;
				}
				InInventory "HX_InvisibilityPowerUpToken"
				{
					DrawImage "HXBLURT", -74, 25;
					DrawImage "HXSML058", -71, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InvisibilityPowerUpToken, -53, 29;
				}
				InInventory "HX_RadSuitPowerUpToken"
				{
					DrawImage "HXRADST", -50, 25;
					DrawImage "HXSML058", -47, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_RadSuitPowerUpToken, -29, 29;
				}
				InInventory "HX_InfraredPowerUpToken"
				{
					DrawImage "HXLGHTT", -26, 25;
					DrawImage "HXSML058", -23, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InfraredPowerUpToken, -5, 29;
				}
			}
			else InInventory "HXCUS_PowerupTimerToken", 1	// Active Only
			{
				InInventory "HX_InvulnerabilityPowerUpToken"
				{
					DrawImage "HXBUFFT", -98, 25;
					DrawImage "HXINVUT", -98, 25;
					DrawImage "HXSML058", -95, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InvulnerabilityPowerUpToken, -77, 29;
				}
				InInventory "HX_InvisibilityPowerUpToken"
				{
					DrawImage "HXBUFFT", -74, 25;
					DrawImage "HXBLURT", -74, 25;
					DrawImage "HXSML058", -71, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InvisibilityPowerUpToken, -53, 29;
				}
				InInventory "HX_RadSuitPowerUpToken"
				{
					DrawImage "HXBUFFT", -50, 25;
					DrawImage "HXRADST", -50, 25;
					DrawImage "HXSML058", -47, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_RadSuitPowerUpToken, -29, 29;
				}
				InInventory "HX_InfraredPowerUpToken"
				{
					DrawImage "HXBUFFT", -26, 25;
					DrawImage "HXLGHTT", -26, 25;
					DrawImage "HXSML058", -23, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InfraredPowerUpToken, -5, 29;
				}
			}
		}
	/*	Standard, Doom 64 */
		else InInventory "HXMOD_Doom64Art", 1
		{
			InInventory "HXCUS_PowerupTimerToken", 2	// Always
			{
				// Background panels
				DrawImage "HXBUFFT", -98, 25;
				DrawImage "HXBUFFT", -74, 25;
				DrawImage "HXBUFFT", -50, 25;
				DrawImage "HXBUFFT", -26, 25;
				// Active timers
				InInventory "HX_InvulnerabilityPowerUpToken"
				{
					DrawImage "HX64IVT", -98, 25;
					DrawImage "HXSML058", -95, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InvulnerabilityPowerUpToken, -77, 29;
				}
				InInventory "HX_InvisibilityPowerUpToken"
				{
					DrawImage "HX64BLT", -74, 25;
					DrawImage "HXSML058", -71, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InvisibilityPowerUpToken, -53, 29;
				}
				InInventory "HX_RadSuitPowerUpToken"
				{
					DrawImage "HX64RDT", -50, 25;
					DrawImage "HXSML058", -47, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_RadSuitPowerUpToken, -29, 29;
				}
				InInventory "HX_InfraredPowerUpToken"
				{
					DrawImage "HX64LTT", -26, 25;
					DrawImage "HXSML058", -23, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InfraredPowerUpToken, -5, 29;
				}
			}
			else InInventory "HXCUS_PowerupTimerToken", 1	// Active Only
			{
				InInventory "HX_InvulnerabilityPowerUpToken"
				{
					DrawImage "HXBUFFT", -98, 25;
					DrawImage "HX64IVT", -98, 25;
					DrawImage "HXSML058", -95, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InvulnerabilityPowerUpToken, -77, 29;
				}
				InInventory "HX_InvisibilityPowerUpToken"
				{
					DrawImage "HXBUFFT", -74, 25;
					DrawImage "HX64BLT", -74, 25;
					DrawImage "HXSML058", -71, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InvisibilityPowerUpToken, -53, 29;
				}
				InInventory "HX_RadSuitPowerUpToken"
				{
					DrawImage "HXBUFFT", -50, 25;
					DrawImage "HX64RDT", -50, 25;
					DrawImage "HXSML058", -47, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_RadSuitPowerUpToken, -29, 29;
				}
				InInventory "HX_InfraredPowerUpToken"
				{
					DrawImage "HXBUFFT", -26, 25;
					DrawImage "HX64LTT", -26, 25;
					DrawImage "HXSML058", -23, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_InfraredPowerUpToken, -5, 29;
				}
			}
		}
	/*	Brutal Doom Platinum additions */
		InInventory "HXMOD_BrutalDoomPlatinum", 1
		{
			InInventory "HXCUS_PowerupTimerToken", 2	// Always
			{
				// Background panels
				DrawImage "HXBUFFT", -146, 25;
				DrawImage "HXBUFFT", -122, 25;
				// Active timers
				InInventory "HX_HastePowerUpToken"
				{
					DrawImage "HXBDSHT", -146, 25;	// Active timer border
					DrawImage "HXSML058", -143, 29;	// Active colon character
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_HastePowerUpToken, -125, 29;	// Time remaining
				}
				InInventory "HX_QuadDamagePowerUpToken"
				{
					DrawImage "HXQUADT", -122, 25;	// Active timer border
					DrawImage "HXSML058", -119, 29;	// Active colon character
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_QuadDamagePowerUpToken, -101, 29;	// Time remaining
				}
			}
			else InInventory "HXCUS_PowerupTimerToken", 1	// Active Only
			{
				InInventory "HX_HastePowerUpToken"
				{
					DrawImage "HXBUFFT", -146, 25;	// Background panel
					DrawImage "HXBDSHT", -146, 25;	// Active timer border
					DrawImage "HXSML058", -143, 29;	// Active colon character
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_HastePowerUpToken, -125, 29;	// Time remaining
				}
				InInventory "HX_QuadDamagePowerUpToken"
				{
					DrawImage "HXBUFFT", -122, 25;	// Background panel
					DrawImage "HXQUADT", -122, 25;	// Active timer border
					DrawImage "HXSML058", -119, 29;	// Active colon character
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_QuadDamagePowerUpToken, -101, 29;	// Time remaining
				}
			}
		}
	}



/***************************************
*
* BOTTOM LEFT PANELS
*
***************************************/

	InInventory not "HXSYS_VehicleHUDToken", 1 || "HXSYS_NormalHUDKillerToken", 1
	{
	// DOOMGUY'S MUGSHOT
		InInventory "HXMOD_BadAssBitch", 1
		{
			DrawImage "HXMGSHT", 2, -78;

			// Mugshot reactive border - Invulnerability
			InInventory "HX_InvulnerabilityPowerUpToken" { DrawImage "HXMGBFY", 2, -78; }
			else { DrawImage "HXMGBFG", 2, -78; }
			// Mugshot reactive corners - Berserk
			InInventory "HX_BerserkPowerUpToken" { DrawImage "HXMGCGR", 2, -78; }
			else { DrawImage "HXMGCGW", 2, -78; }

			// Air Supply and Rage Meter (HXRTC Gold default)
			InInventory "HXCUS_AirMeterToken", 1 { DrawBar "HXARBROK", "HXARRGNO", airtime, vertical, interpolate(64), 6, -74; }
			InInventory "HXRTCPlayerRagePoints", 1 { DrawBar "HXRGBROK", "HXARRGNO", HXRTCPlayerRagePoints, vertical, interpolate(64), 41, -74; }

			DrawMugShot "STF", 5, 8, -72;
		}
		else
		{
			DrawImage "HXMGSHT", 2, -71;

			// Mugshot reactive border - Invulnerability
			InInventory "HX_InvulnerabilityPowerUpToken" { DrawImage "HXMGBFY", 2, -71; }
			else { DrawImage "HXMGBFG", 2, -71; }
			// Mugshot reactive corners - Berserk
			InInventory "HX_BerserkPowerUpToken" { DrawImage "HXMGCGR", 2, -71; }
			else { DrawImage "HXMGCGW", 2, -71; }

			// Air Supply
			InInventory "HXCUS_AirMeterToken", 1 { DrawBar "HXARBROK", "HXARRGNO", airtime, vertical, interpolate(64), 6, -67; }
			// Rage Meter (HXRTC Gold default)
			InInventory "HXMOD_Faspons", 1
			{
				InInventory not "FearMe", 1 { DrawBar "HXRGBRIN", "HXARRGNO", Adrenaline, vertical, interpolate(64), 41, -67; }
				else { DrawBar "HXRGBROK", "HXARRGNO", Adrenaline, vertical, interpolate(64), 41, -67; }
			}
			InInventory "HXRTCPlayerRagePoints", 1 { DrawBar "HXRGBROK", "HXARRGNO", HXRTCPlayerRagePoints, vertical, interpolate(64), 41, -67; }

			// Brutal Doom-related mugshots
			InInventory "HXMOD_BrutalDoomPlatinum", 1 { DrawMugShot "STF", 5, 8, -65; }
			else InInventory "HXMOD_BrutalDoom", 1
			{
				InInventory GenderFemale, 1 { DrawMugShot "GAL", 5, 8, -65; }
				else InInventory GenderMale, 1 { DrawMugShot "STM", 5, 8, -65; }
			}
			// Doom CE D64
			else InInventory "HXMOD_DoomCE_D64", 1 { DrawMugShot "STF", 5, 7, -65; }
			// Doom CE PSX
			else InInventory "HXMOD_DoomCE_PSX", 1 { DrawMugShot "STF", 5, xdeathface, 8, -65; }
			// SmoothDoom 2.0 WIP death mugshot
			else InInventory "HXMOD_SmoothDoom2", 1 { DrawMugShot "STF", 5, xdeathface, 8, -65; }
			// Vanilla mugshot
			else { DrawMugShot "STF", 5, 8, -65; }
		}


	// INVENTORY ARTIFACTS
		InInventory "HXCUS_ArtifactToken"
		{
			InInventory "HXMOD_BadAssBitch", 1
			{
				DrawImage "HXINVSEL", 2, -113;
				DrawSelectedInventory alwaysshowcounter, centerbottom, HXINDEXFONTS, 25, -82, 44, -88, untranslated;
			}
			else
			{
				DrawImage "HXINVSEL", 2, -106;
				DrawSelectedInventory alwaysshowcounter, centerbottom, HXINDEXFONTS, 25, -75, 44, -81, untranslated;
			}
		}


	// ITEM PANELS (BERSERK, ARMOR SAVE, ARMOR TYPE)
		InInventory "HX_BerserkPowerUpToken", 1
		{
			InInventory "HXMOD_BadAssBitch", 1
			{
				DrawImage "HXARMTYP", 72, -56;
				DrawImage "HXARMTFG", 72, -56;
			}
			else
			{
				DrawImage "HXARMTYP", 72, -49;
				DrawImage "HXARMTFG", 72, -49;
			}
			
			InInventory "HXMOD_Doom64Art", 1 { DrawImage "HX64BRSK", 72, -49; }
			else InInventory "HXMOD_BadAssBitch", 1
			{
				InInventory not "HXCUS_LowMotionToken", 1 { DrawImage "HXTYBR0", 72, -56; }
				else { DrawImage "HXTYBROK", 72, -56; }
			}
			else InInventory "HXMOD_NazisV2", 1 { DrawImage "HXNZBRSK", 72, -49; }
			else InInventory "NoFatality", 1 { DrawImage "HXHEALTH", 72, -49; }
			else { DrawImage "HXBERSRK", 72, -49; }
		}

		// ARMOR SAVE PERCENTAGE FRAME
		InInventory "HXCUS_ArmorSaveToken", 1
		{
			InInventory "HXMOD_BadAssBitch", 1
			{
				DrawImage "HXARMSVG", 48, -69;
				DrawImage "HXARMSV", 48, -69;
				DrawNumber 3, HXGENERALFONTS, untranslated, savepercent, interpolate(128), whennotzero, 64, -65, 0;
				DrawSwitchableImage BasicArmor > 0, "HXSML010", "HXSML037", 65, -65;
			}
			else
			{
				// Brutal Doom Platinum - Demon Protection Sigil
				InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
					{ DrawSwitchableImage BasicArmor > 0, "HXARMSVG", "HXARMSVC", 48, -62; }
				// Standard
				else { DrawImage "HXARMSVG", 48, -62; }

				DrawImage "HXARMSV", 48, -62;
				DrawNumber 3, HXGENERALFONTS, untranslated, savepercent, interpolate(128), whennotzero, 64, -58, 0;
				DrawSwitchableImage BasicArmor > 0, "HXSML010", "HXSML037", 65, -58;
			}
		}

		// ARMOR FRAME
		InInventory "HXMOD_BadAssBitch", 1 { DrawImage "HXARMTYP", 48, -56; }
		else { DrawImage "HXARMTYP", 48, -49; }
		// Brutal Doom Platinum - Demon Protection Sigil
		InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
		{
			DrawSwitchableImage BasicArmor > 0, "HXARMTFG", "HXARMTFC", 48, -49;
			DrawSwitchableImage BasicArmor > 0, "HXARMTNO", "HXBDSIGP", 48, -49;
		}
		// Lt. Typhon
		else InInventory "HXMOD_BadAssBitch", 1
		{
			DrawImage "HXARMTFG", 48, -56;
			DrawImage armoricon, 60, -45, center, 16, 15;
		}
		// Standard
		else
		{
			DrawImage "HXARMTFG", 48, -49;
			DrawImage armoricon, 60, -38, center, 16, 15;
		}


	// HEALTH, ARMOR
		InInventory "HXMOD_BadAssBitch", 1
		{
			DrawImage "HXHPTOP", 2, -33;
			DrawImage "HXHPROWS", 2, -21;
			DrawImage "HXHPBOTL", 2, -14;

			// Health, Overhealth
			DrawString HXGENERALFONTM, untranslated, "HEALTH", 44, -27, 0;
			DrawBar "HXHABROK", "HXHABRBG", health (100), horizontal, interpolate(64), 46, -27;
			InInventory "HXSYS_HealthOverMaxToken", 1 { DrawBar "HXHEBRHI", "HXHABRNO", HXSYS_HealthOverMaxToken, horizontal, interpolate(64), 46, -27; }
			DrawNumber 4, CONFONT, yellow, health, interpolate(128), 122, -29, 0, red, 24, green, 51;

			// Armor, Overarmor
			DrawString HXGENERALFONTM, untranslated, "ARMOR", 43, -20, 1;
			DrawBar "HXHABROK", "HXHABRBG", armor (100), horizontal, interpolate(64), 46, -20;
			InInventory "HXSYS_ArmorOverMaxToken", 1 { DrawBar "HXHEBRHI", "HXHABRNO", HXSYS_ArmorOverMaxToken, horizontal, interpolate(64), 46, -20; }
			DrawNumber 4, CONFONT, yellow, armor, interpolate(128), 122, -22, 0, red, 24, green, 51;

			// Bio Energy
			DrawString HXGENERALFONTM, untranslated, "ENERGY", 44, -13, 0;
			DrawBar "HXSPBROK", "HXSPBRBG", ammo BioAmmo, horizontal, interpolate(64), 46, -13;
			DrawNumber 4, CONFONT, yellow, ammo BioAmmo, interpolate(128), 122, -15, 0, red, 24, green, 51;
		}
		else
		{
			DrawImage "HXHPTOP", 2, -26;
			DrawImage "HXHPBOTS", 2, -14;

			// Health, Overhealth
			DrawString HXGENERALFONTM, untranslated, "HEALTH", 44, -20, 0;
			DrawBar "HXHABROK", "HXHABRBG", health (100), horizontal, interpolate(64), 46, -20;
			InInventory "HXSYS_HealthOverMaxToken", 1 { DrawBar "HXHEBRHI", "HXHABRNO", HXSYS_HealthOverMaxToken, horizontal, interpolate(64), 46, -20; }
			DrawNumber 4, CONFONT, yellow, health, interpolate(128), 122, -22, 0, red, 24, green, 51;

			// Armor, Overarmor
			DrawString HXGENERALFONTM, untranslated, "ARMOR", 43, -13, 1;
			DrawBar "HXHABROK", "HXHABRBG", armor (100), horizontal, interpolate(64), 46, -13;
			InInventory "HXSYS_ArmorOverMaxToken", 1 { DrawBar "HXHEBRHI", "HXHABRNO", HXSYS_ArmorOverMaxToken, horizontal, interpolate(64), 46, -13; }
			DrawNumber 4, CONFONT, yellow, armor, interpolate(128), 122, -15, 0, red, 24, green, 51;
		}
	// ARTIFACT PIECES PANEL
		// Brutal Doom 64
		InInventory "HXMOD_BrutalDoom64", 1
		{
			/* InInventory "Unmaker", 1 || "UnmakerTACTICAL", 1
			{ */
				DrawImage "HXARTI3S", 127, -33;
				DrawSwitchableImage "WeaponPower" >= 1, "HX64UA1N", "HX64UA1", 131, -29;
				DrawSwitchableImage "WeaponPower" >= 2, "HX64UA2N", "HX64UA2", 131, -21;
				DrawSwitchableImage "WeaponPower" >= 3, "HX64UA3N", "HX64UA3", 131, -13;
			/* } */
		}
		// Doom CE: Doom64
		InInventory "HXMOD_DoomCE_D64", 1
		{
			DrawImage "HXARTI3S", 127, -33;
			DrawSwitchableImage "UnmakerUpgrade1Icon", "HX64UA1N", "HX64UA1", 131, -29;
			DrawSwitchableImage "UnmakerUpgrade2Icon", "HX64UA2N", "HX64UA2", 131, -21;
			DrawSwitchableImage "UnmakerUpgrade3Icon", "HX64UA3N", "HX64UA3", 131, -13;
		}
		// Lt. Typhon
		InInventory "HXMOD_BadAssBitch", 1
		{
			DrawImage "HXARTI3S", 127, -33;
			DrawSwitchableImage "Bioshockobtained", "HXTYBSNO", "HXTYBSOK", 131, -29;
			DrawSwitchableImage "Siriusobtained", "HXTYSRNO", "HXTYSROK", 131, -21;
			DrawSwitchableImage "Kiblastobtained", "HXTYKINO", "HXTYKIOK", 131, -13;
		}
	}



/***************************************
*
* BOTTOM RIGHT PANELS
*
***************************************/

	InInventory not "HXSYS_VehicleHUDToken", 1 || "HXSYS_NormalHUDKillerToken", 1
	{
	// AMMO AND WEAPONS
		/*	Beautiful Doom 7.1.6
		*
		*/
		InInventory "HXMOD_BeautifulDoom", 1
		{
		// AMMO TALLIES PANEL - Beautiful Doom
			DrawImage "HXAMMTOP", -78, -35;
			DrawImage "HXAMMROW", -78, -25;
			DrawImage "HXAMMROW", -78, -19;
			DrawImage "HXAMMBOT", -78, -13;

			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CLIP", -73, -30, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "SHEL", -73, -24, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "ROCK", -73, -18, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CELL", -73, -12, 0, alignment(left);

			DrawBar "HXAMMON", "HXAMMOFF", ammo Clip,		horizontal, interpolate(64), -56, -30;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,		horizontal, interpolate(64), -56, -24;
			DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,	horizontal, interpolate(64), -56, -18;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Cell,		horizontal, interpolate(64), -56, -12;

			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Clip,		-6, -30;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Shell,		-6, -24;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo RocketAmmo,	-6, -18;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Cell,		-6, -12;

			// Ammo Tally highlight and Current Ammo equipped by type
			UsesAmmo
			{
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
				DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

				WeaponAmmo Clip
				{
					DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -30, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip, -6, -30;

					InInventory "HX_BeautifulDoom_weapontype", 2
					{
						IsSelected "BD_Pistol"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 4; }
						else IsSelected "BD_Chaingun"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
					else InInventory not "HX_BeautifulDoom_weapontype", 2
					{ 
						IsSelected "BD_Pistol"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 20; }
						else IsSelected "BD_Chaingun"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 50; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
				}
				WeaponAmmo Shell
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -24, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell,  -6, -24;

					// Mode 0 & 1 use the same thresholds
					InInventory "HX_BeautifulDoom_weapontype", 2
					{
						IsSelected "BD_Shotgun"				{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
						else IsSelected "BD_SuperShotgun"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 1; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
					else InInventory not "HX_BeautifulDoom_weapontype", 2
					{
						IsSelected "BD_Shotgun", "BD_SuperShotgun" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
				}
				WeaponAmmo RocketAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -18, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -18;

					// Mode 0 & 1 use the same thresholds
					InInventory "HX_BeautifulDoom_weapontype", 2
					{
						IsSelected "BD_RocketLauncher"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
					else InInventory not "HX_BeautifulDoom_weapontype", 2
					{
						IsSelected "BD_RocketLauncher"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 5; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
				}
				WeaponAmmo Cell
				{
					DrawString HXGENERALFONTS, untranslated, "CELL", -73, -12, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Cell, -6, -12;
					
					// Mode 1 & 2 use the same thresholds
					InInventory "HX_BeautifulDoom_weapontype", 1
					{
						IsSelected "BD_PlasmaRifle"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 60; }
						else IsSelected "BD_BFG9000"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 80; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
					else InInventory not "HX_BeautifulDoom_weapontype"
					{ 
						IsSelected "BD_PlasmaRifle", "BD_BFG9000" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 80; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
				}
			}
			else
			{
				// Ammoless
				DrawImage "HXNOAVAI", -134, -33;
			}

		// ARMS & KEYS BARS - Beautiful Doom
			// Keys
			InInventory "HXCUS_ArmsBarToken", 1
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -79;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -59, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -61;
					drawkeybar 6, horizontal, reverse, auto, -12, -58, 0, 6, auto;
				}
			}
			else 
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -66;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -46, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -48;
					drawkeybar 6, horizontal, reverse, auto, -12, -45, 0, 6, auto;
				}
			}
			
			// Arms
			InInventory "HXCUS_ArmsBarToken", 1
			{
				DrawImage "HXARMS", -90, -48;

				DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -44;
				DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -44;
				DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -44;
				DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -44;
				DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -44;
				DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -44;
				DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -44;
				DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -44;
				DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -44;
				DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -44;
			}
		}
		/*	Brutal Doom Lite 
		*
		*	SEKRIT will reorganize HUD appropriately
		*/
		else InInventory "HXMOD_BDLite", 1
		{
			InInventory not "FlakCannon"
			{
		// AMMO TALLIES PANEL - Brutal Doom Lite (No Sekrit)
				DrawImage "HXAMMTOP", -78, -41;
				DrawImage "HXAMMROW", -78, -31;
				DrawImage "HXAMMROW", -78, -25;
				DrawImage "HXAMMROW", -78, -19;
				DrawImage "HXAMMBOT", -78, -13;

				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CLIP", -73, -36, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SHEL", -73, -30, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"ROCK", -73, -24, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CELL", -73, -18, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCGold,			"GREN", -73, -12, 0, alignment(left);

				DrawBar "HXAMMON", "HXAMMOFF", ammo RifleAmmo,		horizontal, interpolate(64), -56, -36;
				DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,			horizontal, interpolate(64), -56, -30;
				DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,		horizontal, interpolate(64), -56, -24;
				DrawBar "HXAMMON", "HXAMMOFF", ammo PlasmaAmmo,		horizontal, interpolate(64), -56, -18;
				DrawBar "HXAMMON", "HXAMMOFF", ammo GrenadeAmmo,	horizontal, interpolate(64), -56, -12;

				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo RifleAmmo,		-6, -36;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Shell,			-6, -30;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo RocketAmmo,	-6, -24;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo PlasmaAmmo,	-6, -18;
				DrawNumber 4, HXINDEXFONTS, HXRTCGold,		ammo GrenadeAmmo,	-6, -12;

				// Ammo Tally highlight and Current Ammo equipped by type
				UsesAmmo
				{
					DrawImage "HXAMMO", -134, -33;
					DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
					DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
					
					WeaponAmmo RifleAmmo
					{
						DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -36, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo RifleAmmo, -6, -36;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10;
					}
					WeaponAmmo Shell
					{
						DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -30, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell, -6, -30;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
					}
					WeaponAmmo RocketAmmo
					{
						DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -24, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -24;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
					}
					WeaponAmmo PlasmaAmmo
					{
						DrawString HXGENERALFONTS, untranslated, "CELL", -73, -18, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo PlasmaAmmo, -6, -18;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 15;
					}
				}
				else
				{
					// Ammoless
					DrawImage "HXNOAVAI", -134, -33;
				}
		// ARMS & KEYS BARS - Brutal Doom Lite (No Sekrit)
				// Keys
				InInventory "HXCUS_ArmsBarToken", 1
				{
					InInventory "HXCUS_KeysExtendedToken", 1
					{
						DrawImage "HXKEYSE", -90, -85;
						drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -65, 0, 8, 8;
					}
					else
					{
						DrawImage "HXKEYS", -90, -67;
						drawkeybar 6, horizontal, reverse, auto, -12, -64, 0, 6, auto;
					}
				}
				else 
				{
					InInventory "HXCUS_KeysExtendedToken", 1
					{
						DrawImage "HXKEYSE", -90, -72;
						drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -52, 0, 8, 8;
					}
					else
					{
						DrawImage "HXKEYS", -90, -54;
						drawkeybar 6, horizontal, reverse, auto, -12, -51, 0, 6, auto;
					}
				}

				// Arms
				InInventory "HXCUS_ArmsBarToken", 1
				{
					DrawImage "HXARMS", -90, -54;

					DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -50;
					DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -50;
					DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -50;
					DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -50;
					DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -50;
					DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -50;
					DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -50;
					DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -50;
					DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -50;
					DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -50;
				}
			}
			else
			{
		// AMMO TALLIES PANEL - Brutal Doom Lite (Sekrit!)
				DrawImage "HXAMMTOP", -78, -47;
				DrawImage "HXAMMROW", -78, -37;
				DrawImage "HXAMMROW", -78, -31;
				DrawImage "HXAMMROW", -78, -25;
				DrawImage "HXAMMROW", -78, -19;
				DrawImage "HXAMMBOT", -78, -13;

				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CLIP", -73, -42, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SHEL", -73, -36, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"ROCK", -73, -30, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CELL", -73, -24, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"FLAK", -73, -18, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCGold,			"GREN", -73, -12, 0, alignment(left);

				DrawBar "HXAMMON", "HXAMMOFF", ammo RifleAmmo,		horizontal, interpolate(64), -56, -42;
				DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,			horizontal, interpolate(64), -56, -36;
				DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,		horizontal, interpolate(64), -56, -30;
				DrawBar "HXAMMON", "HXAMMOFF", ammo PlasmaAmmo,		horizontal, interpolate(64), -56, -24;
				DrawBar "HXAMMON", "HXAMMOFF", ammo FlakAmmo,		horizontal, interpolate(64), -56, -18;
				DrawBar "HXAMMON", "HXAMMOFF", ammo GrenadeAmmo,	horizontal, interpolate(64), -56, -12;

				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo RifleAmmo,		-6, -42;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Shell,			-6, -36;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo RocketAmmo,	-6, -30;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo PlasmaAmmo,	-6, -24;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo FlakAmmo,		-6, -18;
				DrawNumber 4, HXINDEXFONTS, HXRTCGold,		ammo GrenadeAmmo,	-6, -12;

				// Ammo Tally highlight and Current Ammo equipped by type
				UsesAmmo
				{
					DrawImage "HXAMMO", -134, -33;
					DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
					DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

					WeaponAmmo RifleAmmo
					{
						DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -42, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo RifleAmmo, -6, -42;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10;
					}
					WeaponAmmo Shell
					{
						DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -36, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell,  -6, -36;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
					}
					WeaponAmmo RocketAmmo
					{
						DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -30, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -30;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
					}
					WeaponAmmo PlasmaAmmo
					{
						DrawString HXGENERALFONTS, untranslated, "CELL", -73, -24, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo PlasmaAmmo, -6, -24;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 15;
					}
					WeaponAmmo FlakAmmo
					{
						DrawString HXGENERALFONTS, untranslated, "FLAK", -73, -18, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo FlakAmmo, -6, -18;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
					}
				}
				else
				{
					// Ammoless
					DrawImage "HXNOAVAI", -134, -33;
				}
		// ARMS & KEYS BARS - Brutal Doom Lite (Sekrit!)
				// Keys
				InInventory "HXCUS_ArmsBarToken", 1
				{
					InInventory "HXCUS_KeysExtendedToken", 1
					{
						DrawImage "HXKEYSE", -90, -91;
						drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -71, 0, 8, 8;
					}
					else
					{
						DrawImage "HXKEYS", -90, -73;
						drawkeybar 6, horizontal, reverse, auto, -12, -70, 0, 6, auto;
					}
				}
				else 
				{
					InInventory "HXCUS_KeysExtendedToken", 1
					{
						DrawImage "HXKEYSE", -90, -78;
						drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -58, 0, 8, 8;
					}
					else
					{
						DrawImage "HXKEYS", -90, -60;
						drawkeybar 6, horizontal, reverse, auto, -12, -57, 0, 6, auto;
					}
				}

				// Arms
				InInventory "HXCUS_ArmsBarToken", 1
				{
					DrawImage "HXARMS", -90, -60;

					DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -56;
					DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -56;
					DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -56;
					DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -56;
					DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -56;
					DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -56;
					DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -56;
					DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -56;
					DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -56;
					DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -56;
				}
			}
		}
		/*	Brutal Doom Platinum
		*
		*	The mod that inspired the overhaul of one of my favorite HUDs in the first place  ~Felis
		*/
		else InInventory "HXMOD_BrutalDoomPlatinum", 1
		{
		// AMMO TALLIES PANEL - Brutal Doom Platinum
			DrawImage "HXAMMTOP", -78, -53;
			DrawImage "HXAMMROW", -78, -43;
			DrawImage "HXAMMROW", -78, -37;
			DrawImage "HXAMMROW", -78, -31;
			DrawImage "HXAMMROW", -78, -25;
			DrawImage "HXAMMROW", -78, -19;
			DrawImage "HXAMMBOT", -78, -13;

			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"PIST", -73, -48, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SHEL", -73, -42, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CLIP", -73, -36, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"ROCK", -73, -30, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CELL", -73, -24, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SOUL", -73, -18, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"FLAM", -73, -12, 0, alignment(left);

			DrawBar "HXAMMON", "HXAMMOFF", ammo Clip1,			horizontal, interpolate(64), -56, -48;
			DrawBar "HXAMMON", "HXAMMOFF", ammo AmmoShell,		horizontal, interpolate(64), -56, -42;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Clip2,			horizontal, interpolate(64), -56, -36;
			DrawBar "HXAMMON", "HXAMMOFF", ammo AmmoRocket,		horizontal, interpolate(64), -56, -30;
			DrawBar "HXAMMON", "HXAMMOFF", ammo AmmoCell,		horizontal, interpolate(64), -56, -24;
			DrawBar "HXAMMON", "HXAMMOFF", ammo SoulAmmo,		horizontal, interpolate(64), -56, -18;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Gas,			horizontal, interpolate(64), -56, -12;

			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Clip1,			-6, -48;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo AmmoShell,		-6, -42;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Clip2,			-6, -36;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo AmmoRocket,	-6, -30;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo AmmoCell,		-6, -24;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo SoulAmmo,		-6, -18;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Gas,			-6, -12;

			// Ammo Tally highlight and Current Ammo equipped by type
			UsesAmmo
			{
				WeaponAmmo Clip1
				{
					DrawString HXGENERALFONTS, untranslated, "PIST", -73, -48, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip1, -6, -48;

					DrawImage "HXAMMO", -134, -33;
					DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29;
					DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

					IsSelected "DoxsRevolver"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
					else IsSelected "DualRevolver"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 4; }
					else IsSelected "BrutalPistol"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 4; }
					else IsSelected "DualPistols"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 8; }
					else IsSelected "BrutalSMG"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
					else IsSelected "DualSMG"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 20; }
					else IsSelected "MP40"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 8; }
					else IsSelected "DualMP40"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 16; }
					else 							{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo AmmoShell
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -42, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo AmmoShell, -6, -42;

					DrawImage "HXAMMO", -134, -33;
					DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29;
					DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

					IsSelected "AssaultShotgun"
					{
						InInventory not "HX_BrutalDoomPlat_plasmashells"
												{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 4; }
						else					{ DrawNumber 4, HXSTATUSFONT, HXRTCBDPPlasma, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 4;
													DrawString HXGENERALFONTM, HXRTCBDPPlasma, "AMMO", -90, -12, 0; }
					}
					else IsSelected "Shot_Gun"
					{
						InInventory not "HX_BrutalDoomPlat_glassslugs"
												{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
						else					{ DrawNumber 4, HXSTATUSFONT, HXRTCBDPGlass, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2;
													DrawString HXGENERALFONTM, HXRTCBDPGlass, "AMMO", -90, -12, 0; }
					}
					else IsSelected "SSG"
					{
						InInventory not "UsingDragonBreath"
												{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 1; }
						else					{ DrawNumber 4, HXSTATUSFONT, HXRTCBDPDragon, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 1;
													DrawString HXGENERALFONTM, HXRTCBDPDragon, "AMMO", -90, -12, 0; }
					}
					else						{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo Clip2
				{
					DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -36, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip2, -6, -36;

					IsSelected not "Machinegun", "MiniGun"
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
					}
					else { DrawImage "HXAMMODU", -134, -33; }

					IsSelected "Machinegun"
					{						// Left Ammo
												DrawBar "HXAMDLOK", "HXAMDUNO", ammo1, vertical, interpolate(64), -130, -28;
												DrawNumber 3, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -98, -29, 0, HXRTCRed, 50;
											// Right Ammo
												InInventory "FiredMGGrenade" { DrawNumber 1, HXSTATUSFONT, HXRTCRed, 0, interpolate(128), -84, -29; }
												else InInventory not "AmmoRocket", 1 { DrawNumber 1, HXSTATUSFONT, HXRTCRed, 0, interpolate(128), -84, -29; }
												else
												{
													DrawImage "HXAMDROK", -87, -28;
													DrawNumber 1, HXSTATUSFONT, untranslated, 1, interpolate(128), -84, -29;
												}

					}
					else IsSelected "Rifle"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
					else IsSelected "DualRifles"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 20; }
					else IsSelected "MiniGun"
					{						// Left Ammo
												DrawBar "HXAMDLOK", "HXAMDUNO", ammo1, vertical, interpolate(64), -130, -28;
												DrawNumber 3, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -98, -29, 0, HXRTCRed, 50;
											// Right Ammo
												DrawBar "HXAMDROK", "HXAMDUNO", ammo2, vertical, interpolate(64), -87, -28;
												DrawNumber 1, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 0;
					}
					else IsSelected "Nailgun"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 8; }
					else IsSelected not "Machinegun", "MiniGun" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo AmmoRocket
				{	
					DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -30, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo AmmoRocket, -6, -30;

					IsSelected not "Machinegun"
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
					}

					IsSelected "Rocket_Launcher"
					{
						InInventory not "HX_BrutalDoomPlat_laserguiderockets"
												{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
						else					{ DrawNumber 4, HXSTATUSFONT, HXRTCDarkRed, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2;
													DrawString HXGENERALFONTM, HXRTCDarkRed, "AMMO", -90, -12, 0; }
					}
					else IsSelected "GrenadeLauncher"
					{
						InInventory not "HX_BrutalDoomPlat_stickygrenades"
												{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 0; }
						else					{ DrawNumber 4, HXSTATUSFONT, HXRTCBDPStickyGrenades, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 0;
													DrawString HXGENERALFONTM, HXRTCBDPStickyGrenades, "AMMO", -90, -12, 0; }
					}
					else IsSelected not "Machinegun" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo AmmoCell
				{
					DrawString HXGENERALFONTS, untranslated, "CELL", -73, -24, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo AmmoCell, -6, -24;

					IsSelected not "BFG10k"
					{
						DrawImage "HXAMMO", -134, -33;
						IsSelected not "BIG_FUCKING_GUN" { DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29; }
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
					}
					else { DrawImage "HXAMMODU", -134, -33; }

					IsSelected "Plasma_Gun"
					{
						InInventory not "HX_BrutalDoomPlat_needlegun"
												{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 15; }
						else					{ DrawNumber 4, HXSTATUSFONT, HXRTCBDPNeedler, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 15;
													DrawString HXGENERALFONTM, HXRTCBDPNeedler, "AMMO", -90, -12, 0; }
					}
					else IsSelected "DualPlasmaRifles"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 30; }
					else IsSelected "RailGun"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 20; }
					else IsSelected "Freezer"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 15; }
					else IsSelected "BIG_FUCKING_GUN"
					{
													DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
													DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 100;
					}
					else IsSelected "BFG10k"
					{							// Left Ammo
													DrawBar "HXAMDLOK", "HXAMDUNO", ammo1, vertical, interpolate(64), -130, -28;
													DrawNumber 3, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -98, -29, 0, HXRTCRed, 100;
												// Right Ammo
													DrawBar "HXAMDROK", "HXAMDUNO", ammo2, vertical, interpolate(64), -87, -28;
													DrawNumber 1, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 0;
					}
					else						{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo SoulAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "SOUL", -73, -18, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo SoulAmmo, -6, -18;

					IsSelected not "HellishMissileLauncher"
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 66;
					}
				}
				WeaponAmmo Gas
				{
					DrawString HXGENERALFONTS, untranslated, "FLAM", -73, -12, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Gas, -6, -12;

					IsSelected not "HellishMissileLauncher"
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 50;
					}
				}
				WeaponAmmo GrenadeAmmo
				{
					DrawImage "HXAMMO", -134, -33;
					DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
					DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

					InInventory "HX_BrutalDoomPlat_grenadetype", 3
					{
						DrawNumber 4, HXSTATUSFONT, HXRTCBDPPlasma, ammo GrenadeAmmo, interpolate(128), -84, -29, 0, HXRTCRed, 2;
						DrawString HXGENERALFONTM, HXRTCBDPPlasma, "AMMO", -90, -12, 0;
					}
					else InInventory "HX_BrutalDoomPlat_grenadetype", 2
					{
						DrawNumber 4, HXSTATUSFONT, HXRTCYellow, ammo GrenadeAmmo, interpolate(128), -84, -29, 0, HXRTCRed, 2;
						DrawString HXGENERALFONTM, HXRTCYellow, "AMMO", -90, -12, 0;
					}
					else InInventory "HX_BrutalDoomPlat_grenadetype", 1
					{
						DrawNumber 4, HXSTATUSFONT, HXRTCBDPStickyGrenades, ammo GrenadeAmmo, interpolate(128), -84, -29, 0, HXRTCRed, 2;
						DrawString HXGENERALFONTM, HXRTCBDPStickyGrenades, "AMMO", -90, -12, 0;
					}
					else InInventory not "HX_BrutalDoomPlat_grenadetype"
					{
						DrawNumber 4, HXSTATUSFONT, HXRTCGold, ammo GrenadeAmmo, interpolate(128), -84, -29, 0, HXRTCRed, 2;
						DrawString HXGENERALFONTM, HXRTCGold, "AMMO", -90, -12, 0;
					}
				}
				WeaponAmmo MeatAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "PIST", -73, -48, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip1, -6, -48;

					DrawImage "HXAMMEAT", -144, -33;

					// Left Ammo
						DrawBar "HXAMDLOK", "HXAMDUNO", HX_BrutalDoom_meatammo, vertical, interpolate(64), -140, -28;
						DrawNumber 3, HXSTATUSFONT, HXRTCRed, HX_BrutalDoom_meatammo, interpolate(128), -108, -29, 0, HXRTCDarkRed, 25, HXRTCLightRed, 75;
					// Right Ammo
						DrawBar "HXAMDROK", "HXAMDUNO", ammo1, vertical, interpolate(64), -87, -28;
						DrawNumber 2, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 4;
						DrawString HXGENERALFONTS, untranslated, "PST", -89, -12, 0; 
				}
				IsSelected "NukeLauncher"
				{
					DrawImage "HXAMMO", -134, -33;
					DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
					DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 0;
				}
				IsSelected "HellishMissileLauncher"
				{
					DrawImage "HXAMMODW", -154, -33;
					// Left Ammo
						DrawBar "HXAMDLOK", "HXAMDUNO", ammo1, vertical, interpolate(64), -150, -28;
						DrawNumber 3, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -118, -29, 0, HXRTCRed, 66;
					// Right Ammo
						DrawBar "HXAMDROK", "HXAMDUNO", ammo2, vertical, interpolate(64), -87, -28;
						DrawNumber 3, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 66;
				}
				IsSelected "CyberdemonsMissileLauncher", "MastermindChaingun"
				{
					DrawImage "HXAMMO", -134, -33;
					DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
					DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10;
				}
			}
			else
			{
				// Ammoless
				DrawImage "HXNOAVAI", -134, -33;
				IsSelected "DSweap" { DrawString HXSTATUSFONT, HXRTCDarkRed, "6UT5", -84, -29, 0; }
				InInventory "FistsSelected", 1 && "PowerStrength", 1
				{
					InInventory not "NoFatality" { DrawString HXSTATUSFONT, HXRTCDarkRed, "TEAr", -84, -29, 0; }
				}
			}
		// GRENADE PANEL - Brutal Doom Platinum
			DrawImage "HXGREN", -78, -73;

			// Void Grenades
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,					"VOID",	-10, -62, 0;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo AmmoVoidGrenade,		-5,  -62, 0;
			// Pipebombs
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,					"PIPE",	-33, -62, 0;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo AmmoPipeBomb,			-28, -62, 0;
			// Freeze Grenades
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,					"FREZ",	-10, -69, 0;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo AmmoIceGrenade,			-5,  -69, 0;
			// Cluster Grenades
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,					"CLST",	-33, -69, 0;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo AmmoFragGrenade,		-28, -69, 0;

			InInventory "HX_BrutalDoomPlat_grenadetype", 3
			{
				DrawImage "BDPGRNV", -63, -63, center, 22, 12;
				DrawString HXGENERALFONTS, HXRTCBDPPlasma,					"VOID", -10, -62, 0;
				DrawNumber 4, HXINDEXFONTS, HXRTCBDPPlasma, ammo AmmoVoidGrenade,	-5,  -62, 0;
			}
			else InInventory "HX_BrutalDoomPlat_grenadetype", 2
			{
				DrawImage "BDPGRNP", -63, -63, center, 22, 12;
				DrawString HXGENERALFONTS, HXRTCYellow,						"PIPE", -33, -62, 0;
				DrawNumber 4, HXINDEXFONTS, HXRTCYellow, ammo AmmoPipeBomb,			-28, -62, 0;
			}
			else InInventory "HX_BrutalDoomPlat_grenadetype", 1
			{
				DrawImage "BDPGRNF", -63, -63, center, 22, 12;
				DrawString HXGENERALFONTS, HXRTCBDPStickyGrenades,			"FREZ", -10, -69, 0;
				DrawNumber 4, HXINDEXFONTS, HXRTCBDPStickyGrenades, ammo AmmoIceGrenade, -5, -69, 0;
			}
			else InInventory not "HX_BrutalDoomPlat_grenadetype"
			{
				DrawImage "BDPGRNC", -63, -63, center, 22, 12;
				DrawString HXGENERALFONTS, HXRTCGold,						"CLST", -33, -69, 0;
				DrawNumber 4, HXINDEXFONTS, HXRTCGold, ammo AmmoFragGrenade,		-28, -69, 0;
			}

		// NUKE PANEL - Brutal Doom Platinum
			InInventory "HXCUS_WeaponIconToken", 1
			{
				DrawImage "HXBDNKNO", -98, -73;
				InInventory "Nuke", 1 { DrawImage "HXBDNKOK", -98, -73; }
			}
			else
			{
				DrawImage "HXBDNKNO", -98, -53;
				InInventory "Nuke", 1 { DrawImage "HXBDNKOK", -98, -53; }
			}

		// ARMS & KEYS BARS - Brutal Doom Platinum
			// Keys
			InInventory "HXCUS_ArmsBarToken", 1
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -117;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -97, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -99;
					drawkeybar 6, horizontal, reverse, auto, -12, -96, 0, 6, auto;
				}
			}
			else 
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -104;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -84, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -86;
					drawkeybar 6, horizontal, reverse, auto, -12, -83, 0, 6, auto;
				}
			}

			// Arms
			InInventory "HXCUS_ArmsBarToken", 1
			{
				DrawImage "HXARMS", -90, -86;

				DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -82;
				DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -82;
				DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -82;
				DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -82;
				DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -82;
				DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -82;
				DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -82;
				DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -82;
				DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -82;
				DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -82;
			}
		}
		/*	Brutal Doom v21/CE
		*
		*	Respects standard and purist modes
		*/
		else InInventory "HXMOD_BrutalDoom", 1
		{
			InInventory not "IsPlayingAsPurist", 1
			{
		// NUKE PANEL - Brutal Doom v21/CE
				InInventory "NukeLauncher", 1
				{
					InInventory "HXCUS_WeaponIconToken", 1
					{
						DrawImage "HXBDNKNO", -98, -73;
						InInventory "Nuke", 1 { DrawImage "HXBDNKOK", -98, -73; }
					}
					else
					{
						DrawImage "HXBDNKNO", -98, -53;
						InInventory "Nuke", 1 { DrawImage "HXBDNKOK", -98, -53; }
					}
				}
		// AMMO TALLIES PANEL - Brutal Doom
				// Brutal Doom CE
				InInventory AmmoMagnum || AmmoSlug
				{	DrawImage "HXAMMTOP", -78, -89;
					DrawImage "HXAMMROW", -78, -79;
					DrawImage "HXAMMROW", -78, -73;
					DrawImage "HXAMMROW", -78, -67;
					DrawImage "HXAMMROW", -78, -61; }
				// Brutal Doom v21
				else InInventory not AmmoMagnum || AmmoSlug
				{	DrawImage "HXAMMTOP", -78, -77;
					DrawImage "HXAMMROW", -78, -67;
					DrawImage "HXAMMROW", -78, -61; }
				// Shared Information
				DrawImage "HXAMMROW", -78, -55;
				DrawImage "HXAMMROW", -78, -49;
				DrawImage "HXAMMROW", -78, -43;
				DrawImage "HXAMMROW", -78, -37;
				DrawImage "HXAMMROW", -78, -31;
				DrawImage "HXAMMROW", -78, -25;
				DrawImage "HXAMMROW", -78, -19;
				DrawImage "HXAMMBOT", -78, -13;

				// Brutal Doom CE
				InInventory AmmoMagnum || AmmoSlug
				{	DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"PIST", -73, -84, 0, alignment(left);
					DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CLIP", -73, -78, 0, alignment(left);
					DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"MGNM", -73, -72, 0, alignment(left);
					DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"MP40", -73, -66, 0, alignment(left);
					DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SLUG", -73, -60, 0, alignment(left); }
				// Brutal Doom v21
				else InInventory not AmmoMagnum || AmmoSlug
				{	DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"PIST", -73, -72, 0, alignment(left);
					DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CLIP", -73, -66, 0, alignment(left);
					DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"MP40", -73, -60, 0, alignment(left); }
				// Shared Information
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SHEL", -73, -54, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"MG42", -73, -48, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"ROCK", -73, -42, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CELL", -73, -36, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SOUL", -73, -30, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"HELL", -73, -24, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"FLAM", -73, -18, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCGold,			"GREN", -73, -12, 0, alignment(left);

				// Brutal Doom CE
				InInventory AmmoMagnum || AmmoSlug
				{	DrawBar "HXAMMON", "HXAMMOFF", ammo Clip1,				horizontal, interpolate(64), -56, -84;
					DrawBar "HXAMMON", "HXAMMOFF", ammo Clip2,				horizontal, interpolate(64), -56, -78;
					DrawBar "HXAMMON", "HXAMMOFF", ammo AmmoMagnum,			horizontal, interpolate(64), -56, -72;
					DrawBar "HXAMMON", "HXAMMOFF", ammo Mauser9mm,			horizontal, interpolate(64), -56, -66;
					DrawBar "HXAMMON", "HXAMMOFF", ammo AmmoSlug,			horizontal, interpolate(64), -56, -60; }
				// Brutal Doom v21
				else InInventory not AmmoMagnum || AmmoSlug
				{	DrawBar "HXAMMON", "HXAMMOFF", ammo Clip1,				horizontal, interpolate(64), -56, -72;
					DrawBar "HXAMMON", "HXAMMOFF", ammo Clip2,				horizontal, interpolate(64), -56, -66;
					DrawBar "HXAMMON", "HXAMMOFF", ammo Mauser9mm,			horizontal, interpolate(64), -56, -60; }
				// Shared Information
				DrawBar "HXAMMON", "HXAMMOFF", ammo AmmoShell,			horizontal, interpolate(64), -56, -54;
				DrawBar "HXAMMON", "HXAMMOFF", ammo BuzzsawAmmo,		horizontal, interpolate(64), -56, -48;
				DrawBar "HXAMMON", "HXAMMOFF", ammo AmmoRocket,			horizontal, interpolate(64), -56, -42;
				DrawBar "HXAMMON", "HXAMMOFF", ammo AmmoCell,			horizontal, interpolate(64), -56, -36;
				DrawBar "HXAMMON", "HXAMMOFF", ammo SoulAmmo,			horizontal, interpolate(64), -56, -30;
				DrawBar "HXAMMON", "HXAMMOFF", ammo MiniHellRocketAmmo,	horizontal, interpolate(64), -56, -24;
				DrawBar "HXAMMON", "HXAMMOFF", ammo Gas,				horizontal, interpolate(64), -56, -18;
				DrawBar "HXAMMON", "HXAMMOFF", ammo GrenadeAmmo,		horizontal, interpolate(64), -56, -12;

				// Brutal Doom CE
				InInventory AmmoMagnum || AmmoSlug
				{	DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Clip1,					-6, -84;
					DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Clip2,					-6, -78;
					DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo AmmoMagnum,			-6, -72;
					DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Mauser9mm,				-6, -66;
					DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo AmmoSlug,				-6, -60; }
				// Brutal Doom v21
				else InInventory not AmmoMagnum || AmmoSlug
				{	DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Clip1,					-6, -72;
					DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Clip2,					-6, -66;
					DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Mauser9mm,				-6, -60; }
				// Shared Information
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo AmmoShell,				-6, -54;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo BuzzsawAmmo,			-6, -48;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo AmmoRocket,			-6, -42;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo AmmoCell,				-6, -36;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo SoulAmmo,				-6, -30;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo MiniHellRocketAmmo,	-6, -24;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Gas,					-6, -18;
				DrawNumber 4, HXINDEXFONTS, HXRTCGold,		ammo GrenadeAmmo,			-6, -12;

				// Ammo Tally highlight and Current Ammo equipped by type
				UsesAmmo
				{
					// Brutal Doom CE
					InInventory AmmoMagnum || AmmoSlug
					{
						WeaponAmmo Clip1
						{
							DrawString HXGENERALFONTS, untranslated, "PIST", -73, -84, 0, alignment(left);
							DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip1, -6, -84;
						}
						WeaponAmmo Clip2
						{
							DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -78, 0, alignment(left);
							DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip2, -6, -78;
						}
						WeaponAmmo AmmoMagnum
						{
							DrawString HXGENERALFONTS, untranslated, "MGNM", -73, -72, 0, alignment(left);
							DrawNumber 4, HXINDEXFONTS, untranslated, ammo AmmoMagnum, -6, -72;
						}
						WeaponAmmo Mauser9mm
						{
							DrawString HXGENERALFONTS, untranslated, "MP40", -73, -66, 0, alignment(left);
							DrawNumber 4, HXINDEXFONTS, untranslated, ammo Mauser9mm, -6, -66;
						}
						WeaponAmmo AmmoSlug
						{
							DrawString HXGENERALFONTS, untranslated, "SLUG", -73, -60, 0, alignment(left);
							DrawNumber 4, HXINDEXFONTS, untranslated, ammo AmmoSlug, -6, -60;
						}
					}
					// Brutal Doom v21
					else InInventory not AmmoMagnum || AmmoSlug
					{
						WeaponAmmo Clip1
						{
							DrawString HXGENERALFONTS, untranslated, "PIST", -73, -72, 0, alignment(left);
							DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip1, -6, -72;
						}
						WeaponAmmo Clip2
						{
							DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -66, 0, alignment(left);
							DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip2, -6, -66;
						}
						WeaponAmmo Mauser9mm
						{
							DrawString HXGENERALFONTS, untranslated, "MP40", -73, -60, 0, alignment(left);
							DrawNumber 4, HXINDEXFONTS, untranslated, ammo Mauser9mm, -6, -60;
						}
					}
					// Shared Information
					WeaponAmmo Clip1
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

						IsSelected "BrutalPistol"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 4; }
						else IsSelected "DualPistols"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 8; }
						else IsSelected "BrutalSMG"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
						else IsSelected "DualSMG"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 20; }
						else 							{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
					}
					WeaponAmmo Clip2
					{
						IsSelected not "Machinegun"
						{
							DrawImage "HXAMMO", -134, -33;
							IsSelected not "MiniGun"	{ DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29; }
							else						{ DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29; }
							DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
						}

						IsSelected "Revolver2"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
						else IsSelected "Rifle"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
						else IsSelected "DualRifles"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 20; }
						else IsSelected "MiniGun"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 50; }
						else 							{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
					}
					WeaponAmmo AmmoMagnum
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

						DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2;
					}
					WeaponAmmo Mauser9mm
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

						IsSelected "MP40"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 8; }
						else IsSelected "DualMP40"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 16; }
						else 						{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
					}
					WeaponAmmo AmmoSlug
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

						IsSelected "Shot_Gun"				{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
						else IsSelected "SSG"				{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 1; }
						else IsSelected "AssaultShotgun"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 4; }
						else 								{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }

					}
					WeaponAmmo AmmoShell
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

						DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -54, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo AmmoShell, -6, -54;

						IsSelected "Revolver2"				{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
						else IsSelected "Shot_Gun"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
						else IsSelected "SSG"				{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 1; }
						else IsSelected "AssaultShotgun"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 4; }
						else 								{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
					}
					WeaponAmmo BuzzsawAmmo
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

						DrawString HXGENERALFONTS, untranslated, "MG42", -73, -48, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo BuzzsawAmmo, -6, -48;

						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 50;
					}
					WeaponAmmo AmmoRocket
					{
						IsSelected not "Machinegun"
						{
							DrawImage "HXAMMO", -134, -33;
							DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29;
							DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
						}

						DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -42, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo AmmoRocket, -6, -42;

						IsSelected "GrenadeLauncher"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 0; }
						else IsSelected "Rocket_Launcher"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
						else 								{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
					}
					WeaponAmmo AmmoCell
					{
						DrawImage "HXAMMO", -134, -33;
						IsSelected not "BFG10k", "BIG_FUCKING_GUN"	{ DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29; }
						else 										{ DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29; }
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

						DrawString HXGENERALFONTS, untranslated, "CELL", -73, -36, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo AmmoCell, -6, -36;

						IsSelected "Plasma_Gun"				{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 20; }
						else IsSelected "DualPlasmaRifles"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 30; }
						else IsSelected "RailGun"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 20; }
						else IsSelected "BFG10k"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 100; }
						else IsSelected "BIG_FUCKING_GUN"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 100; }
						else 								{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
					}
					WeaponAmmo SoulAmmo
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

						DrawString HXGENERALFONTS, untranslated, "SOUL", -73, -30, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo SoulAmmo, -6, -30;

						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 66;
					}
					WeaponAmmo MiniHellRocketAmmo
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

						DrawString HXGENERALFONTS, untranslated, "HELL", -73, -24, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo MiniHellRocketAmmo, -6, -24;

						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 20;
					}
					WeaponAmmo Gas
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

						DrawString HXGENERALFONTS, untranslated, "FLAM", -73, -18, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Gas, -6, -18;

						IsSelected "Chain_saw"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 100; }
						else IsSelected "FlameCannon"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 100; }
						else IsSelected "Flamethrower2"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 100; }
						else 							{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
					}
					WeaponAmmo GrenadeAmmo
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
					}
					WeaponAmmo Nuke
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 1;
					}
					WeaponAmmo MeatAmmo
					{
						DrawString HXGENERALFONTS, untranslated, "PIST", -73, -48, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip1, -6, -48;

						DrawImage "HXAMMEAT", -144, -33;

						// Left Ammo
							DrawBar "HXAMDLOK", "HXAMDUNO", HX_BrutalDoom_meatammo, vertical, interpolate(64), -140, -28;
							DrawNumber 3, HXSTATUSFONT, HXRTCRed, HX_BrutalDoom_meatammo, interpolate(128), -108, -29, 0, HXRTCDarkRed, 25, HXRTCLightRed, 75;
						// Right Ammo
							DrawBar "HXAMDROK", "HXAMDUNO", ammo1, vertical, interpolate(64), -87, -28;
							DrawNumber 2, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 4;
							DrawString HXGENERALFONTS, untranslated, "PST", -89, -12, 0; 
					}
					IsSelected "Machinegun"
					{
						DrawImage "HXAMMODU", -134, -33;
						// Left Ammo
						DrawBar "HXAMDLOK", "HXAMDUNO", ammo1, vertical, interpolate(64), -130, -28;
						DrawNumber 3, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -98, -29, 0, HXRTCRed, 50;
						// Right Ammo
						InInventory "FiredMGGrenade"			{ DrawNumber 1, HXSTATUSFONT, HXRTCRed, 0, interpolate(128), -84, -29; }
						else InInventory not "AmmoRocket", 1	{ DrawNumber 1, HXSTATUSFONT, HXRTCRed, 0, interpolate(128), -84, -29; }
						else
						{
							DrawImage "HXAMDROK", -87, -28;
							DrawNumber 1, HXSTATUSFONT, untranslated, 1, interpolate(128), -84, -29;
						}
					}
				}
				else
				{
					// Ammoless
					DrawImage "HXNOAVAI", -134, -33;
					IsSelected "DSweap" { DrawString HXSTATUSFONT, HXRTCDarkRed, "6UT5", -84, -29, 0; }
					InInventory "FistsSelected", 1 && "PowerStrength", 1
					{
						InInventory not "NoFatality" { DrawString HXSTATUSFONT, HXRTCDarkRed, "TEAr", -84, -29, 0; }
					}
				}
		// ARMS & KEYS BARS - Brutal Doom
				// Keys
				InInventory "HXCUS_ArmsBarToken", 1
				{
					InInventory  AmmoMagnum || AmmoSlug
					{
						InInventory "HXCUS_KeysExtendedToken", 1
						{
							DrawImage "HXKEYSE", -90, -133;
							drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -113, 0, 8, 8;
						}
						else
						{
							DrawImage "HXKEYS", -90, -115;
							drawkeybar 6, horizontal, reverse, auto, -12, -112, 0, 6, auto;
						}
					}
					else InInventory not  AmmoMagnum || AmmoSlug
					{
						InInventory "HXCUS_KeysExtendedToken", 1
						{
							DrawImage "HXKEYSE", -90, -121;
							drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -101, 0, 8, 8;
						}
						else
						{
							DrawImage "HXKEYS", -90, -103;
							drawkeybar 6, horizontal, reverse, auto, -12, -100, 0, 6, auto;
						}
					}
				}
				else 
				{
					InInventory AmmoMagnum || AmmoSlug
					{
						InInventory "HXCUS_KeysExtendedToken", 1
						{
							DrawImage "HXKEYSE", -90, -120;
							drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -100, 0, 8, 8;
						}
						else
						{
							DrawImage "HXKEYS", -90, -102;
							drawkeybar 6, horizontal, reverse, auto, -12, -99, 0, 6, auto;
						}
					}
					else InInventory not AmmoMagnum || AmmoSlug
					{
						InInventory "HXCUS_KeysExtendedToken", 1
						{
							DrawImage "HXKEYSE", -90, -108;
							drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -88, 0, 8, 8;
						}
						else
						{
							DrawImage "HXKEYS", -90, -90;
							drawkeybar 6, horizontal, reverse, auto, -12, -87, 0, 6, auto;
						}
					}
				}
				// Arms
				InInventory "HXCUS_ArmsBarToken", 1
				{
					InInventory AmmoMagnum || AmmoSlug
					{
						DrawImage "HXARMS", -90, -102;
						DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -98;
						DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -98;
						DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -98;
						DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -98;
						DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -98;
						DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -98;
						DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -98;
						DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -98;
						DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -98;
						DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -98;
					}
					else InInventory not AmmoMagnum || AmmoSlug
					{
						DrawImage "HXARMS", -90, -90;
						DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -86;
						DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -86;
						DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -86;
						DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -86;
						DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -86;
						DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -86;
						DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -86;
						DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -86;
						DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -86;
						DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -86;
					}
				}
			}
			else
			{
		// NUKE PANEL - Brutal Doom Purist
				InInventory "NukeLauncher", 1
				{
					InInventory "HXCUS_WeaponIconToken", 1
					{
						DrawImage "HXBDNKNO", -110, -73;
						InInventory "Nuke", 1 { DrawImage "HXBDNKOK", -110, -73; }
					}
					else
					{
						DrawImage "HXBDNKNO", -98, -53;
						InInventory "Nuke", 1 { DrawImage "HXBDNKOK", -98, -53; }
					}
				}
		// AMMO TALLIES PANEL - Brutal Doom Purist
				// Clip and Mauser
				InInventory ClassicUnmaker || ClassicMP40
				{ 	DrawImage "HXAMMTOP", -78, -59;
					DrawImage "HXAMMROW", -78, -49; }
				else InInventory not ClassicUnmaker || ClassicMP40
				{	DrawImage "HXAMMTOP", -78, -53; }
				DrawImage "HXAMMROW", -78, -43;
				DrawImage "HXAMMROW", -78, -37;
				DrawImage "HXAMMROW", -78, -31;
				DrawImage "HXAMMROW", -78, -25;
				DrawImage "HXAMMROW", -78, -19;
				DrawImage "HXAMMBOT", -78, -13;

				// Clip and Mauser
				InInventory ClassicUnmaker || ClassicMP40
				{ 	DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CLIP", -73, -54, 0, alignment(left);
					DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "MP40", -73, -48, 0, alignment(left); }
				else InInventory not ClassicUnmaker || ClassicMP40
				{	DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CLIP", -73, -48, 0, alignment(left); }
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SHEL", -73, -42, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"MG42", -73, -36, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"ROCK", -73, -30, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CELL", -73, -24, 0, alignment(left);
				// Flamethrower or Soul ammo:
				InInventory ClassicUnmaker || ClassicMP40
				{									DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "SOUL", -73, -18, 0, alignment(left); }
				else InInventory not ClassicUnmaker || ClassicMP40
				{	InInventory not Flamethrower2	{ DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "????", -73, -18, 0, alignment(left); }
					else							{ DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "FLAM", -73, -18, 0, alignment(left); } }
				DrawString HXGENERALFONTS, HXRTCGold,			"GREN", -73, -12, 0, alignment(left);

				// Clip and Mauser
				InInventory ClassicUnmaker || ClassicMP40
				{ 	DrawBar "HXAMMON", "HXAMMOFF", ammo Clip2,		horizontal, interpolate(64), -56, -54;
					DrawBar "HXAMMON", "HXAMMOFF", ammo Mauser9mm,	horizontal, interpolate(64), -56, -48; }
				else InInventory not ClassicUnmaker || ClassicMP40
				{	DrawBar "HXAMMON", "HXAMMOFF", ammo Clip2,		horizontal, interpolate(64), -56, -48; }
				DrawBar "HXAMMON", "HXAMMOFF", ammo AmmoShell,		horizontal, interpolate(64), -56, -42;
				DrawBar "HXAMMON", "HXAMMOFF", ammo BuzzsawAmmo,	horizontal, interpolate(64), -56, -36;
				DrawBar "HXAMMON", "HXAMMOFF", ammo AmmoRocket,		horizontal, interpolate(64), -56, -30;
				DrawBar "HXAMMON", "HXAMMOFF", ammo AmmoCell,		horizontal, interpolate(64), -56, -24;
				// Flamethrower or Soul ammo here
				InInventory ClassicUnmaker || ClassicMP40
				{									DrawBar "HXAMMON", "HXAMMOFF", ammo SoulAmmo, horizontal, interpolate(64), -56, -18; }
				else InInventory not ClassicUnmaker || ClassicMP40
				{	InInventory not Flamethrower2	{ DrawImage "HXAMMOFF", -56, -18; }
					else							{ DrawBar "HXAMMON", "HXAMMOFF", ammo Gas, horizontal, interpolate(64), -56, -18; } }
				DrawBar "HXAMMON", "HXAMMOFF", ammo GrenadeAmmo,	horizontal, interpolate(64), -56, -12;

				// Clip and Mauser
				InInventory ClassicUnmaker || ClassicMP40
				{ 	DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Clip2,		-6, -54;
					DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Mauser9mm,	-6, -48; }
				else InInventory not ClassicUnmaker || ClassicMP40
				{	DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Clip2,		-6, -48; }
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo AmmoShell,		-6, -42;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo BuzzsawAmmo,	-6, -36;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo AmmoRocket,	-6, -30;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo AmmoCell,		-6, -24;
				// Flamethrower or Soul ammo
				InInventory ClassicUnmaker || ClassicMP40
				{									DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo SoulAmmo, -6, -18; }
				else InInventory not ClassicUnmaker || ClassicMP40
				{	InInventory not Flamethrower2	{ DrawString HXGENERALFONTS, HXRTCDarkGrey, "?", -6, -18; }
					else							{ DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Gas, -6, -18; } }
				DrawNumber 4, HXINDEXFONTS, HXRTCGold,		ammo GrenadeAmmo,	-6, -12;

				// Ammo Tally highlight and Current Ammo equipped by type
				UsesAmmo
				{
					DrawImage "HXAMMO", -134, -33;
					DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
					IsSelected not "ClassicUnmaker" { DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0; }

					WeaponAmmo Clip2
					{
						InInventory ClassicUnmaker || ClassicMP40
						{
							DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -54, 0, alignment(left);
							DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip2, -6, -54;
						}
						else InInventory not ClassicUnmaker || ClassicMP40
						{
							DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -48, 0, alignment(left);
							DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip2, -6, -48;
						}
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
					}
					WeaponAmmo Mauser9mm
					{
						DrawString HXGENERALFONTS, untranslated, "MP40", -73, -48, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Mauser9mm, -6, -48;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
					}
					WeaponAmmo AmmoShell
					{
						DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -42, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo AmmoShell,  -6, -42;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
					}
					WeaponAmmo BuzzsawAmmo
					{
						DrawString HXGENERALFONTS, untranslated, "MG42", -73, -36, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo BuzzsawAmmo,  -6, -36;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
					}
					WeaponAmmo AmmoRocket
					{
						DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -30, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo AmmoRocket, -6, -30;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
					}
					WeaponAmmo AmmoCell
					{
						DrawString HXGENERALFONTS, untranslated, "CELL", -73, -24, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo AmmoCell, -6, -24;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
					}
					InInventory ClassicUnmaker || ClassicMP40
					{
						WeaponAmmo SoulAmmo
						{
							DrawString HXGENERALFONTS, untranslated, "SOUL", -73, -18, 0, alignment(left);
							DrawNumber 4, HXINDEXFONTS, untranslated, ammo SoulAmmo, -6, -18;

							DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
							DrawImage "HXBDCEU0", -118, -12;
							InInventory "UnmakerUpgrade1Icon", 1 { DrawImage "HXBDCEU1", -118, -12; }
							InInventory "UnmakerUpgrade2Icon", 1 { DrawImage "HXBDCEU2", -106, -12; }
							InInventory "UnmakerUpgrade3Icon", 1 { DrawImage "HXBDCEU3", -94, -12; }
						}
					}
					else InInventory not ClassicUnmaker || ClassicMP40
					{
						WeaponAmmo Gas
						{
							DrawString HXGENERALFONTS, untranslated, "FLAM", -73, -18, 0, alignment(left);
							DrawNumber 4, HXINDEXFONTS, untranslated, ammo Gas, -6, -18;
							DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
						}
					}
					WeaponAmmo Nuke
					{
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
					}
				}
				else
				{
					// Ammoless
					DrawImage "HXNOAVAI", -134, -33;
				}
		// ARMS & KEYS BARS - Brutal Doom Purist
				// Keys
				InInventory "HXCUS_ArmsBarToken", 1
				{
					InInventory ClassicUnmaker || ClassicMP40
					{
						InInventory "HXCUS_KeysExtendedToken", 1
						{
							DrawImage "HXKEYSE", -90, -103;
							drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -83, 0, 8, 8;
						}
						else
						{
							DrawImage "HXKEYS", -90, -85;
							drawkeybar 6, horizontal, reverse, auto, -12, -82, 0, 6, auto;
						}
					}
					else InInventory not ClassicUnmaker || ClassicMP40
					{
						InInventory "HXCUS_KeysExtendedToken", 1
						{
							DrawImage "HXKEYSE", -90, -97;
							drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -77, 0, 8, 8;
						}
						else
						{
							DrawImage "HXKEYS", -90, -79;
							drawkeybar 6, horizontal, reverse, auto, -12, -76, 0, 6, auto;
						}
					}
				}
				else 
				{
					InInventory ClassicUnmaker || ClassicMP40
					{
						InInventory "HXCUS_KeysExtendedToken", 1
						{
							DrawImage "HXKEYSE", -90, -90;
							drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -70, 0, 8, 8;
						}
						else
						{
							DrawImage "HXKEYS", -90, -72;
							drawkeybar 6, horizontal, reverse, auto, -12, -69, 0, 6, auto;
						}
					}
					else InInventory not ClassicUnmaker || ClassicMP40
					{
						InInventory "HXCUS_KeysExtendedToken", 1
						{
							DrawImage "HXKEYSE", -90, -84;
							drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -64, 0, 8, 8;
						}
						else
						{
							DrawImage "HXKEYS", -90, -66;
							drawkeybar 6, horizontal, reverse, auto, -12, -63, 0, 6, auto;
						}
					}
				}

				// Arms
				InInventory "HXCUS_ArmsBarToken", 1
				{
					InInventory ClassicUnmaker || ClassicMP40
					{
						DrawImage "HXARMS", -90, -72;
						DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -68;
						DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -68;
						DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -68;
						DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -68;
						DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -68;
						DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -68;
						DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -68;
						DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -68;
						DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -68;
						DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -68;
					}
					else InInventory not ClassicUnmaker || ClassicMP40
					{
						DrawImage "HXARMS", -90, -66;
						DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -62;
						DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -62;
						DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -62;
						DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -62;
						DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -62;
						DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -62;
						DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -62;
						DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -62;
						DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -62;
						DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -62;
					}
				}
			}
		}
		/*	Brutal Doom 64 v2/2.5
		*
		*	Respects standard and tactical/modern modes
		*/
		else InInventory "HXMOD_BrutalDoom64", 1
		{
			InInventory "IsTacticalClass", 1 || "IsModern", 1
			{
		// DEMON ESSENCE PANEL - Brutal Doom 64 (Tactical/Modern)
				InInventory "HX_BD64_demonessencefound", 1
				{
					InInventory "HXCUS_WeaponIconToken", 1
					{
						DrawBar "HXBD64DY", "HXBD64DN", ammo DemonEssence, vertical, interpolate(64), -110, -73;
						InInventory "DemonEssence", 25 { DrawImage "HXBD64DF", -110, -73; }
					}
					else
					{
						DrawBar "HXBD64DY", "HXBD64DN", ammo DemonEssence, vertical, interpolate(64), -110, -53;
						InInventory "DemonEssence", 25 { DrawImage "HXBD64DF", -110, -53; }
					}
				}
		// AMMO TALLIES PANEL - Brutal Doom 64 (Tactical/Modern)
				DrawImage "HXAMMTOP", -78, -47;
				DrawImage "HXAMMROW", -78, -37;
				DrawImage "HXAMMROW", -78, -31;
				DrawImage "HXAMMROW", -78, -25;
				DrawImage "HXAMMROW", -78, -19;
				DrawImage "HXAMMBOT", -78, -13;

				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CLIP", -73, -42, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SHEL", -73, -36, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"ROCK", -73, -30, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CELL", -73, -24, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SOUL", -73, -18, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"FLAM", -73, -12, 0, alignment(left);

				DrawBar "HXAMMON", "HXAMMOFF", ammo Clip,		horizontal, interpolate(64), -56, -42;
				DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,		horizontal, interpolate(64), -56, -36;
				DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,	horizontal, interpolate(64), -56, -30;
				DrawBar "HXAMMON", "HXAMMOFF", ammo Cell,		horizontal, interpolate(64), -56, -24;
				DrawBar "HXAMMON", "HXAMMOFF", ammo SoulAmmo,	horizontal, interpolate(64), -56, -18;
				DrawBar "HXAMMON", "HXAMMOFF", ammo SawGas,		horizontal, interpolate(64), -56, -12;

				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Clip,			-6, -42;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Shell,			-6, -36;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo RocketAmmo,	-6, -30;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Cell,			-6, -24;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo SoulAmmo,		-6, -18;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo SawGas,		-6, -12;

				// Ammo Tally highlight and Current Ammo equipped by type
				UsesAmmo
				{
					DrawImage "HXAMMO", -134, -33;
					IsSelected not "UnmakerTACTICAL" { DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0; }

					WeaponAmmo Clip
					{
						DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -42, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip, -6, -42;

						IsSelected "64ChaingunTACTICAL"		{ DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29; }
						else { DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29; }

						IsSelected "64ChaingunTACTICAL"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 50; }
						else IsSelected "64PistolTactical"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 3; }
						else IsSelected "64RifleTactical"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
					WeaponAmmo Shell
					{
						DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -36, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell,  -6, -36;

						DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29;

						IsSelected "64SuperShotgunTACTICAL"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 1; }
						else IsSelected "64ShotgunTACTICAL"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
					WeaponAmmo RocketAmmo
					{
						DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -30, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -30;

						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;

						IsSelected "64RocketLauncherTactical"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
					WeaponAmmo Cell
					{
						DrawString HXGENERALFONTS, untranslated, "CELL", -73, -24, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Cell, -6, -24;

						IsSelected "64PlasmaRifleTACTICAL"	{ DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -130, -29; }
						else { DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29; }

						IsSelected "64PlasmaRifleTACTICAL"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
						else IsSelected "64BFG9000"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 120; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
					WeaponAmmo SoulAmmo
					{
						DrawString HXGENERALFONTS, untranslated, "SOUL", -73, -18, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo SoulAmmo, -6, -18;

						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;

						IsSelected "UnmakerTACTICAL"
						{
							DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10;

							DrawImage "HXBDCEU0", -118, -12;
							InInventory "WeaponPower", 1 { DrawImage "HXBDCEU1", -118, -12; }
							InInventory "WeaponPower", 2 { DrawImage "HXBDCEU2", -106, -12; }
							InInventory "WeaponPower", 3 { DrawImage "HXBDCEU3", -94, -12; }
						}
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
					WeaponAmmo SawGas
					{
						DrawString HXGENERALFONTS, untranslated, "FLAM", -73, -12, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo SawGas, -6, -12;

						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;

						IsSelected "64ChainsawTACTICAL"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 50; }
						else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
					}
				}
				else
				{
					// Ammoless
					DrawImage "HXNOAVAI", -134, -33;
				}
		// ARMS & KEYS BARS - Brutal Doom 64 (Tactical/Modern)
				// Keys
				InInventory "HXCUS_ArmsBarToken", 1
				{
					InInventory "HXCUS_KeysExtendedToken", 1
					{
						DrawImage "HXKEYSE", -90, -91;
						drawkeybar 14, horizontal, reverse, reverserows, 11, -14, -71, 0, 7, 13;
					}
					else
					{
						DrawImage "HXKEYS", -90, -73;
						drawkeybar 6, horizontal, reverse, 11, -13, -70, 0, 6, auto;
					}
				}
				else 
				{
					InInventory "HXCUS_KeysExtendedToken", 1
					{
						DrawImage "HXKEYSE", -90, -78;
						drawkeybar 14, horizontal, reverse, reverserows, 11, -14, -58, 0, 7, 13;
					}
					else
					{
						DrawImage "HXKEYS", -90, -60;
						drawkeybar 6, horizontal, reverse, 11, -13, -57, 0, 6, auto;
					}
				}

				// Arms
				InInventory "HXCUS_ArmsBarToken", 1
				{
					DrawImage "HXARMS", -90, -60;

					DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -56;
					DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -56;
					DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -56;
					DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -56;
					DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -56;
					DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -56;
					DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -56;
					DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -56;
					DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -56;
					DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -56;
				}
			}
			else
			{
		// AMMO TALLIES PANEL - Brutal Doom 64 (Classic)
				DrawImage "HXAMMTOP", -78, -35;
				DrawImage "HXAMMROW", -78, -25;
				DrawImage "HXAMMROW", -78, -19;
				DrawImage "HXAMMBOT", -78, -13;

				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CLIP", -73, -30, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "SHEL", -73, -24, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "ROCK", -73, -18, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CELL", -73, -12, 0, alignment(left);

				DrawBar "HXAMMON", "HXAMMOFF", ammo Clip,		horizontal, interpolate(64), -56, -30;
				DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,		horizontal, interpolate(64), -56, -24;
				DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,	horizontal, interpolate(64), -56, -18;
				DrawBar "HXAMMON", "HXAMMOFF", ammo Cell,		horizontal, interpolate(64), -56, -12;

				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Clip,		-6, -30;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Shell,		-6, -24;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo RocketAmmo,	-6, -18;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Cell,		-6, -12;

				// Ammo Tally highlight and Current Ammo equipped by type
				UsesAmmo
				{
					DrawImage "HXAMMO", -134, -33;
					DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
					IsSelected not "Unmaker" { DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0; }

					WeaponAmmo Clip
					{
						DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -30, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip, -6, -30;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
					}
					WeaponAmmo Shell
					{
						DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -24, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell,  -6, -24;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
					}
					WeaponAmmo RocketAmmo
					{
						DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -18, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -18;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;
					}
					WeaponAmmo Cell
					{
						DrawString HXGENERALFONTS, untranslated, "CELL", -73, -12, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Cell, -6, -12;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;

						IsSelected "Unmaker"
						{
							DrawImage "HXBDCEU0", -118, -12;
							InInventory "WeaponPower", 1 { DrawImage "HXBDCEU1", -118, -12; }
							InInventory "WeaponPower", 2 { DrawImage "HXBDCEU2", -106, -12; }
							InInventory "WeaponPower", 3 { DrawImage "HXBDCEU3", -94, -12; }
						}
					}
					WeaponAmmo SoulAmmo
					{
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0;

						IsSelected "Unmaker"
						{
							DrawImage "HXBDCEU0", -118, -12;
							InInventory "WeaponPower", 1 { DrawImage "HXBDCEU1", -118, -12; }
							InInventory "WeaponPower", 2 { DrawImage "HXBDCEU2", -106, -12; }
							InInventory "WeaponPower", 3 { DrawImage "HXBDCEU3", -94, -12; }
						}
					}
				}
				else
				{
					// Ammoless
					DrawImage "HXNOAVAI", -134, -33;
				}
		// ARMS & KEYS BARS - Brutal Doom 64 (Classic)
				// Keys
				InInventory "HXCUS_ArmsBarToken", 1
				{
					InInventory "HXCUS_KeysExtendedToken", 1
					{
						DrawImage "HXKEYSE", -90, -79;
						drawkeybar 14, horizontal, reverse, reverserows, 11, -14, -62, 0, 7, 13;
					}
					else
					{
						DrawImage "HXKEYS", -90, -61;
						drawkeybar 6, horizontal, reverse, 11, -13, -60, 0, 6, auto;
					}
				}
				else 
				{
					InInventory "HXCUS_KeysExtendedToken", 1
					{
						DrawImage "HXKEYSE", -90, -66;
						drawkeybar 14, horizontal, reverse, reverserows, 11, -14, -49, 0, 7, 13;
					}
					else
					{
						DrawImage "HXKEYS", -90, -48;
						drawkeybar 6, horizontal, reverse, 11, -13, -47, 0, 6, auto;
					}
				}
				
				// Arms
				InInventory "HXCUS_ArmsBarToken", 1
				{
					DrawImage "HXARMS", -90, -48;

					DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -44;
					DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -44;
					DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -44;
					DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -44;
					DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -44;
					DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -44;
					DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -44;
					DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -44;
					DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -44;
					DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -44;
				}
			}
		}
		/*	Doom CE: Doom64
		*
		*/
		else InInventory "HXMOD_DoomCE_D64", 1
		{
		// AMMO TALLIES PANEL - Doom CE: Doom64
			DrawImage "HXAMMTOP", -78, -35;
			DrawImage "HXAMMROW", -78, -25;
			DrawImage "HXAMMROW", -78, -19;
			DrawImage "HXAMMBOT", -78, -13;

			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CLIP", -73, -30, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "SHEL", -73, -24, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "ROCK", -73, -18, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CELL", -73, -12, 0, alignment(left);

			DrawBar "HXAMMON", "HXAMMOFF", ammo Clip,		horizontal, interpolate(64), -56, -30;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,		horizontal, interpolate(64), -56, -24;
			DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,	horizontal, interpolate(64), -56, -18;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Cell,		horizontal, interpolate(64), -56, -12;

			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Clip,		-6, -30;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Shell,		-6, -24;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo RocketAmmo,	-6, -18;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Cell,		-6, -12;

			// Ammo Tally highlight and Current Ammo equipped by type
			UsesAmmo
			{
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
				IsSelected not "D64LaserRifle" { DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0; }

				WeaponAmmo Clip
				{
					DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -30, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip, -6, -30;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10;
				}
				WeaponAmmo Shell
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -24, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell,  -6, -24;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 1;
				}
				WeaponAmmo RocketAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -18, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -18;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
				}
				WeaponAmmo Cell
				{
					DrawString HXGENERALFONTS, untranslated, "CELL", -73, -12, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Cell, -6, -12;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 15;

					IsSelected "D64LaserRifle"
					{
						DrawImage "HXBDCEU0", -118, -12;
						InInventory "UnmakerUpgrade1Icon", 1 { DrawImage "HXBDCEU1", -118, -12; }
						InInventory "UnmakerUpgrade2Icon", 1 { DrawImage "HXBDCEU2", -106, -12; }
						InInventory "UnmakerUpgrade3Icon", 1 { DrawImage "HXBDCEU3", -94, -12; }
					}
				}
			}
			else
			{
				// Ammoless
				DrawImage "HXNOAVAI", -134, -33;
			}
		// ARMS & KEYS BARS - Doom CE: Doom64
			// Keys
			InInventory "HXCUS_ArmsBarToken", 1
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -79;
					drawkeybar 14, horizontal, reverse, reverserows, auto, -14, -62, 0, 7, 13;
				}
				else
				{
					DrawImage "HXKEYS", -90, -61;
					drawkeybar 6, horizontal, reverse, auto, -13, -60, 0, 6, auto;
				}
			}
			else 
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -66;
					drawkeybar 14, horizontal, reverse, reverserows, auto, -14, -49, 0, 7, 13;
				}
				else
				{
					DrawImage "HXKEYS", -90, -48;
					drawkeybar 6, horizontal, reverse, auto, -13, -47, 0, 6, auto;
				}
			}
			
			// Arms
			InInventory "HXCUS_ArmsBarToken", 1
			{
				DrawImage "HXARMS", -90, -48;

				DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -44;
				DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -44;
				DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -44;
				DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -44;
				DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -44;
				DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -44;
				DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -44;
				DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -44;
				DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -44;
				DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -44;
			}
		}
		else InInventory "HXMOD_Doom4Vanilla", 1
		{
		// AMMO TALLIES PANEL - D4V
			DrawImage "HXAMMTOP", -78, -35;
			DrawImage "HXAMMROW", -78, -25;
			DrawImage "HXAMMROW", -78, -19;
			DrawImage "HXAMMBOT", -78, -13;

			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CLIP", -73, -30, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "SHEL", -73, -24, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "ROCK", -73, -18, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CELL", -73, -12, 0, alignment(left);

			DrawBar "HXAMMON", "HXAMMOFF", ammo Clip,		horizontal, interpolate(64), -56, -30;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,		horizontal, interpolate(64), -56, -24;
			DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,	horizontal, interpolate(64), -56, -18;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Cell,		horizontal, interpolate(64), -56, -12;

			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Clip,		-6, -30;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Shell,		-6, -24;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo RocketAmmo,	-6, -18;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Cell,		-6, -12;

			// Ammo Tally highlight and Current Ammo equipped by type
			UsesAmmo
			{
				IsSelected not "DH_Chainsaw"
				{
					DrawImage "HXAMMO", -134, -33;
					DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
					DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
				}
				else
				{
					InInventory not "HX_D4V_swtoggletoken", 1 { DrawImage "HXNOAVAI", -134, -33; }
					else
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
					}
				}

				WeaponAmmo Clip
				{
					IsSelected not "DH_Chainsaw"
					{
						DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -30, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip, -6, -30;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10;
					}
					else InInventory "HX_D4V_swtoggletoken", 1
					{
						DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -30, 0, alignment(left);
						DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip, -6, -30;
						DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10;
					}
				}
				WeaponAmmo Shell
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -24, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell,  -6, -24;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 1;
				}
				WeaponAmmo RocketAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -18, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -18;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
				}
				WeaponAmmo Cell
				{
					DrawString HXGENERALFONTS, untranslated, "CELL", -73, -12, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Cell, -6, -12;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 15;
				}
			}
			else
			{
				// Ammoless
				DrawImage "HXNOAVAI", -134, -33;
			}
		// ARMS & KEYS BARS - D4V
			// Keys
			InInventory "HXCUS_ArmsBarToken", 1
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -79;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -59, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -61;
					drawkeybar 6, horizontal, reverse, auto, -12, -58, 0, 6, auto;
				}
			}
			else 
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -66;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -46, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -48;
					drawkeybar 6, horizontal, reverse, auto, -12, -45, 0, 6, auto;
				}
			}
			
			// Arms
			InInventory "HXCUS_ArmsBarToken", 1
			{
				DrawImage "HXARMS", -90, -48;

				DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -44;
				DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -44;
				DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -44;
				DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -44;
				DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -44;
				DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -44;
				DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -44;
				DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -44;
				DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -44;
				DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -44;
			}
		}
		/*	Faspons
		*
		*/
		else InInventory "HXMOD_Faspons", 1
		{
		// AMMO TALLIES PANEL - Faspons
			DrawImage "HXAMMTOP", -78, -47;
			DrawImage "HXAMMROW", -78, -37;
			DrawImage "HXAMMROW", -78, -31;
			DrawImage "HXAMMROW", -78, -25;
			DrawImage "HXAMMROW", -78, -19;
			DrawImage "HXAMMBOT", -78, -13;

			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CLIP", -73, -42, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SHEL", -73, -36, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"NATO", -73, -30, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"ROCK", -73, -24, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CELL", -73, -18, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCGold,			"GREN", -73, -12, 0, alignment(left);

			DrawBar "HXAMMON", "HXAMMOFF", ammo RifleAmmo,			horizontal, interpolate(64), -56, -42;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,				horizontal, interpolate(64), -56, -36;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Nato,				horizontal, interpolate(64), -56, -30;
			DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,			horizontal, interpolate(64), -56, -24;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Cell,				horizontal, interpolate(64), -56, -18;
			DrawBar "HXAMMON", "HXAMMOFF", ammo HandGrenadeAmmo,	horizontal, interpolate(64), -56, -12;

			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo RifleAmmo,			-6, -42;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Shell,				-6, -36;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Nato,				-6, -30;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo RocketAmmo,		-6, -24;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Cell,				-6, -18;
			DrawNumber 4, HXINDEXFONTS, HXRTCGold,		ammo HandGrenadeAmmo,	-6, -12;

			// Ammo Tally highlight and Current Ammo equipped by type
			UsesAmmo
			{
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
				DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

				WeaponAmmo RifleAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -42, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RifleAmmo, -6, -42;

					IsSelected "CombatRifle" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo Shell
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -36, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell,  -6, -36;

					IsSelected "Riotgun" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
					else IsSelected "DoubleBarrel" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 1; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo Nato
				{
					DrawString HXGENERALFONTS, untranslated, "NATO", -73, -30, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Nato, -6, -30;

					IsSelected "Minigun" {
						InInventory not "MiniEmpty", 1 { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 50; }
						else DrawNumber 4, HXSTATUSFONT, HXRTCRed, ammo1, interpolate(128), -84, -29, 0;
					}
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo RocketAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -24, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -24;

					IsSelected "RPG" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo Cell
				{
					DrawString HXGENERALFONTS, untranslated, "CELL", -73, -18, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Cell, -6, -18;

					IsSelected "PulseRifle" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 20; }
					else IsSelected "BFG" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 80; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0; }
				}
			}
			else
			{
				// Ammoless
				DrawImage "HXNOAVAI", -134, -33;
			}
		// ARMS & KEYS BARS - Faspons
			// Keys
			InInventory "HXCUS_ArmsBarToken", 1
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -91;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -71, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -73;
					drawkeybar 6, horizontal, reverse, auto, -12, -70, 0, 6, auto;
				}
			}
			else 
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -78;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -58, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -60;
					drawkeybar 6, horizontal, reverse, auto, -12, -57, 0, 6, auto;
				}
			}
			
			// Arms
			InInventory "HXCUS_ArmsBarToken", 1
			{
				DrawImage "HXARMS", -90, -60;

				DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -56;
				DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -56;
				DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -56;
				DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -56;
				DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -56;
				DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -56;
				DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -56;
				DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -56;
				DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -56;
				DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -56;
			}
		}
		/*	Led's Generic Weapon Mod
		*
		*/
		else InInventory "HXMOD_LedsGenericWeaponMod", 1
		{
		// AMMO TALLIES PANEL - Led's Generic Weapon Mod
			DrawImage "HXAMMTOP", -78, -47;
			DrawImage "HXAMMROW", -78, -37;
			DrawImage "HXAMMROW", -78, -31;
			DrawImage "HXAMMROW", -78, -25;
			DrawImage "HXAMMROW", -78, -19;
			DrawImage "HXAMMBOT", -78, -13;

			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "PIST", -73, -42, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CLIP", -73, -36, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "SHEL", -73, -30, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "NATO", -73, -24, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "ROCK", -73, -18, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CELL", -73, -12, 0, alignment(left);

			DrawBar "HXAMMON", "HXAMMOFF", ammo HX_LedsGenWep9mmAmmo,	horizontal, interpolate(64), -56, -42;
			DrawBar "HXAMMON", "HXAMMOFF", ammo RifleAmmo,				horizontal, interpolate(64), -56, -36;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,					horizontal, interpolate(64), -56, -30;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Nato,					horizontal, interpolate(64), -56, -24;
			DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,				horizontal, interpolate(64), -56, -18;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Cell,					horizontal, interpolate(64), -56, -12;

			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo HX_LedsGenWep9mmAmmo,	-6, -42;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo RifleAmmo,				-6, -36;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Shell,					-6, -30;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Nato,					-6, -24;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo RocketAmmo,				-6, -18;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Cell,					-6, -12;

			// Ammo Tally highlight and Current Ammo equipped by type
			UsesAmmo
			{
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
				DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

				IsSelected "Beretta"
				{
					DrawString HXGENERALFONTS, untranslated, "PIST", -73, -42, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo HX_LedsGenWep9mmAmmo, -6, -42;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 4;
				}
				else WeaponAmmo RifleAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -36, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RifleAmmo, -6, -36;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10;
				}
				else WeaponAmmo Shell
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -30, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell, -6, -30;
					IsSelected "DoubleSG" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 1; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
				}
				else WeaponAmmo Nato
				{
					DrawString HXGENERALFONTS, untranslated, "NATO", -73, -24, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Nato,  -6, -24;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 30;
				}
				else WeaponAmmo RocketAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -18, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -18;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
				}
				else WeaponAmmo Cell
				{
					DrawString HXGENERALFONTS, untranslated, "CELL", -73, -12, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Cell, -6, -12;
					IsSelected "BFG9K" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 40; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 15; }
				}
			}
			else
			{
				// Ammoless
				DrawImage "HXNOAVAI", -134, -33;
			}

		// ARMS & KEYS BARS - Led's Generic Weapon Mod
			// Keys
			InInventory "HXCUS_ArmsBarToken", 1
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -91;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -71, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -73;
					drawkeybar 6, horizontal, reverse, auto, -12, -70, 0, 6, auto;
				}
			}
			else 
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -78;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -58, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -60;
					drawkeybar 6, horizontal, reverse, auto, -12, -57, 0, 6, auto;
				}
			}

			// Arms
			InInventory "HXCUS_ArmsBarToken", 1
			{
				DrawImage "HXARMS", -90, -60;

				DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -56;
				DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -56;
				DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -56;
				DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -56;
				DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -56;
				DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -56;
				DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -56;
				DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -56;
				DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -56;
				DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -56;
			}
		}
		/*	Lt. Typhon
		*
		*/
		else InInventory "HXMOD_BadAssBitch", 1
		{
		// AMMO TALLIES PANEL - Lt. Typhon
			DrawImage "HXAMMTOP", -78, -35;
			DrawImage "HXAMMROW", -78, -25;
			DrawImage "HXAMMROW", -78, -19;
			DrawImage "HXAMMBOT", -78, -13;

			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CLIP", -73, -30, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "SHEL", -73, -24, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "ROCK", -73, -18, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CELL", -73, -12, 0, alignment(left);

			DrawBar "HXAMMON", "HXAMMOFF", ammo Clip,		horizontal, interpolate(64), -56, -30;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,		horizontal, interpolate(64), -56, -24;
			DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,	horizontal, interpolate(64), -56, -18;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Cell,		horizontal, interpolate(64), -56, -12;

			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Clip,		-6, -30;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Shell,		-6, -24;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo RocketAmmo,	-6, -18;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Cell,		-6, -12;

			// Ammo Tally highlight and Current Ammo equipped by type
			UsesAmmo
			{
				WeaponAmmo Clip
				{
					DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -30, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip, -6, -30;

					// Frames
					IsSelected "VeteranAutomag"
					{
						DrawImage "HXAMMODW", -154, -33;
						// Highlight "MO" of ammo dual panal
						DrawString HXGENERALFONTM, HXRTCCyan, "MO", -100, -12, 0;
						// Left Ammo
						DrawBar "HXAMDLOK", "HXAMDUNO", ammo1, vertical, interpolate(64), -150, -28;
						// Right Ammo
						DrawBar "HXAMDROK", "HXAMDUNO", ammo2, vertical, interpolate(64), -87, -28;
					}
					else IsSelected "VeteranMinigun", "VeteranDualMinigun"
					{
						DrawImage "HXAMMODW", -154, -33;
						// Left Ammo
						DrawBar "HXAMDLOK", "HXAMDUNO", ammo1, vertical, interpolate(64), -150, -28;
						// Right Ammo
						DrawBar "HXAMDROK", "HXAMDUNO", ammo2, vertical, interpolate(64), -87, -28;
					}
					else
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
					}

					// Data
					IsSelected "VeteranPistol" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 5; }
					else IsSelected "VeteranAutomag"
					{
						// Left Ammo
						DrawNumber 3, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -118, -29, 0, HXRTCRed, 5;
						// Right Ammo
						DrawNumber 3, HXSTATUSFONT, HXRTCCyan, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 25;
					}
					else IsSelected "VeteranMinigun"
					{
						// Left Ammo
						DrawNumber 3, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -118, -29, 0, HXRTCRed, 20;
						// Right Ammo
						DrawNumber 3, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 20;
					}
					else IsSelected "VeteranDualMinigun"
					{
						// Left Ammo
						DrawNumber 3, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -118, -29, 0, HXRTCRed, 40;
						// Right Ammo
						DrawNumber 3, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 40;
					}
					else IsSelected "VeteranChaingun" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 20; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo Shell
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -24, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell,  -6, -24;

					// Frames
					IsSelected "DemonicSuperShotgun"
					{
						DrawImage "HXAMMODW", -154, -33;
						// Highlight "MO" of ammo dual panal
						DrawString HXGENERALFONTM, HXRTCCyan, "MO", -100, -12, 0;
						// Left Ammo
						DrawBar "HXAMDLOK", "HXAMDUNO", ammo1, vertical, interpolate(64), -150, -28;
						// Right Ammo
						DrawBar "HXAMDROK", "HXAMDUNO", ammo2, vertical, interpolate(64), -87, -28;
					}
					else
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
					}

					// Data
					IsSelected "DemonicSuperShotgun"
					{
						// Left Ammo
						DrawNumber 3, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -118, -29, 0, HXRTCRed, 10;
						// Right Ammo
						DrawNumber 3, HXSTATUSFONT, HXRTCCyan, ammo2, interpolate(128), -84, -29, 0, HXRTCRed, 40;
					}
					else IsSelected "VeteranShotgun" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 5; }
					else IsSelected "VeteranSuperShotgun" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo RocketAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -18, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -18;

					DrawImage "HXAMMO", -134, -33;
					DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
					DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

					IsSelected "VeteranRocketLauncher" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo Cell
				{
					DrawString HXGENERALFONTS, untranslated, "CELL", -73, -12, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Cell, -6, -12;

					IsSelected not "VeteranMinigun", "VeteranDualMinigun"
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
					}

					IsSelected "OldBFG9000" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 50; }
					else IsSelected "ArtiRifle" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 30; }
					else IsSelected "VeteranPlasmaRifle" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 40; }
					else IsSelected "VeteranBFG9000" { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 80; }
					else IsSelected not "VeteranMinigun", "VeteranDualMinigun"
						{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo BioAmmo
				{
					IsSelected not "VeteranAutomag", "DemonicSuperShotgun"
					{
						DrawImage "HXAMMO", -134, -33;
						DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
						DrawString HXGENERALFONTM, HXRTCCyan, "AMMO", -90, -12, 0;
					}
					// Highlight Energy text on Health/Ammo panel
					DrawString HXGENERALFONTM, HXRTCCyan, "ENERGY", 44, -13, 0;

					IsSelected "VeteranBioAttack" { DrawNumber 4, HXSTATUSFONT, HXRTCCyan, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 50; }
					else IsSelected "HandOfDiana" { DrawNumber 4, HXSTATUSFONT, HXRTCCyan, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 100; }
					else IsSelected "OutsiderRevolver" { DrawNumber 4, HXSTATUSFONT, HXRTCCyan, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 60; }
					else IsSelected "VeteranDumbbell" { DrawNumber 4, HXSTATUSFONT, HXRTCCyan, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
					else IsSelected not "VeteranAutomag", "DemonicSuperShotgun"
						{ DrawNumber 4, HXSTATUSFONT, HXRTCCyan, ammo1, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo thunderchildammo
				{
					DrawImage "HXAMMO", -134, -33;
					DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
					DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 1;
				}
			}
			else IsSelected "Revenantgrenadechucker"
			{
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", Revenantgrenadechucker, vertical, interpolate(64), -130, -29;
				DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
				DrawNumber 4, HXSTATUSFONT, untranslated, Revenantgrenadechucker, interpolate(128), -84, -29, 0, HXRTCRed, 0;
			}
			else IsSelected "Eyeballgrenadechucker"
			{
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", Eyeballgrenadechucker, vertical, interpolate(64), -130, -29;
				DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
				DrawNumber 4, HXSTATUSFONT, untranslated, Eyeballgrenadechucker, interpolate(128), -84, -29, 0, HXRTCRed, 0;
			}
			else IsSelected "Missilegrenadechucker"
			{
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", Missilegrenadechucker, vertical, interpolate(64), -130, -29;
				DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
				DrawNumber 4, HXSTATUSFONT, untranslated, Missilegrenadechucker, interpolate(128), -84, -29, 0, HXRTCRed, 0;
			}
			else IsSelected "MunchyHeld"
			{
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", MunchyHeld, vertical, interpolate(64), -130, -29;
				DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;
				DrawNumber 4, HXSTATUSFONT, untranslated, MunchyHeld, interpolate(128), -84, -29, 0, HXRTCRed, 0;
			}
			else
			{
				// Ammoless
				DrawImage "HXNOAVAI", -134, -33;
			}
		// ARMS & KEYS BARS - Lt. Typhon
			// Keys
			InInventory "HXCUS_ArmsBarToken", 1
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -79;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -59, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -61;
					drawkeybar 6, horizontal, reverse, auto, -12, -58, 0, 6, auto;
				}
			}
			else 
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -66;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -46, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -48;
					drawkeybar 6, horizontal, reverse, auto, -12, -45, 0, 6, auto;
				}
			}
			
			// Arms
			InInventory "HXCUS_ArmsBarToken", 1
			{
				DrawImage "HXARMS", -90, -48;

				DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -44;
				DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -44;
				DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -44;
				DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -44;
				DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -44;
				DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -44;
				DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -44;
				DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -44;
				DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -44;
				DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -44;
			}
		}
		/*	NAZIS V2
		*
		*/
		else InInventory "HXMOD_NazisV2", 1
		{
		// FIREBRAND PANEL - NAZIS V2
			InInventory "Firebrand", 1
			{
				InInventory "HXCUS_WeaponIconToken", 1
				{
					DrawImage "HXNZFBNO", -98, -73;
					InInventory "PowerWeaponLevel2", 1 { DrawImage "HXNZFBOK", -98, -73; }
				}
				else
				{
					DrawImage "HXNZFBNO", -98, -53;
					InInventory "PowerWeaponLevel2", 1 { DrawImage "HXNZFBOK", -98, -53; }
				}
			}
		// AMMO TALLIES PANEL - NAZIS V2
			DrawImage "HXAMMTOP", -78, -89;
			DrawImage "HXAMMROW", -78, -79;
			DrawImage "HXAMMROW", -78, -73;
			DrawImage "HXAMMROW", -78, -67;
			DrawImage "HXAMMROW", -78, -61;
			DrawImage "HXAMMROW", -78, -55;
			DrawImage "HXAMMROW", -78, -49;
			DrawImage "HXAMMROW", -78, -43;
			DrawImage "HXAMMROW", -78, -37;
			DrawImage "HXAMMROW", -78, -31;
			DrawImage "HXAMMROW", -78, -25;
			DrawImage "HXAMMROW", -78, -19;
			DrawImage "HXAMMBOT", -78, -13;

			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"9x19", -73, -84, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	".357", -73, -78, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	" .45", -73, -72, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SHEL", -73, -66, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"TKRV", -73, -60, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"MAUS", -73, -54, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	".303", -73, -48, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"3006", -73, -42, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"KURZ", -73, -36, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"FLAM", -73, -30, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"MINI", -73, -24, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"ROCK", -73, -18, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCGold,			"GREN", -73, -12, 0, alignment(left);

			DrawBar "HXAMMON", "HXAMMOFF", ammo HX_NazisV2_9mmAmmo,		horizontal, interpolate(64), -56, -84;
			DrawBar "HXAMMON", "HXAMMOFF", ammo HX_NazisV2_357Ammo,		horizontal, interpolate(64), -56, -78;
			DrawBar "HXAMMON", "HXAMMOFF", ammo HX_NazisV2_45ACPAmmo,	horizontal, interpolate(64), -56, -72;
			DrawBar "HXAMMON", "HXAMMOFF", ammo HX_NazisV2_12GaugeAmmo,	horizontal, interpolate(64), -56, -66;
			DrawBar "HXAMMON", "HXAMMOFF", ammo TokarevAmmo,			horizontal, interpolate(64), -56, -60;
			DrawBar "HXAMMON", "HXAMMOFF", ammo MauserAmmo,				horizontal, interpolate(64), -56, -54;
			DrawBar "HXAMMON", "HXAMMOFF", ammo HX_NazisV2_303Ammo,		horizontal, interpolate(64), -56, -48;
			DrawBar "HXAMMON", "HXAMMOFF", ammo HX_NazisV2_3006Ammo,	horizontal, interpolate(64), -56, -42;
			DrawBar "HXAMMON", "HXAMMOFF", ammo HX_NazisV2_792KurzAmmo,	horizontal, interpolate(64), -56, -36;
			DrawBar "HXAMMON", "HXAMMOFF", ammo FlameAmmo,				horizontal, interpolate(64), -56, -30;
			DrawBar "HXAMMON", "HXAMMOFF", ammo NebAmmo,				horizontal, interpolate(64), -56, -24;
			DrawBar "HXAMMON", "HXAMMOFF", ammo PanzerAmmo,				horizontal, interpolate(64), -56, -18;
			DrawBar "HXAMMON", "HXAMMOFF", GrenadePickup,				horizontal, interpolate(64), -56, -12;

			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo HX_NazisV2_9mmAmmo,		-6, -84;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo HX_NazisV2_357Ammo,		-6, -78;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo HX_NazisV2_45ACPAmmo,		-6, -72;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo HX_NazisV2_12GaugeAmmo,	-6, -66;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo TokarevAmmo,				-6, -60;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo MauserAmmo,				-6, -54;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo HX_NazisV2_303Ammo,		-6, -48;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo HX_NazisV2_3006Ammo,		-6, -42;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo HX_NazisV2_792KurzAmmo,	-6, -36;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo FlameAmmo,					-6, -30;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo NebAmmo,					-6, -24;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo PanzerAmmo,				-6, -18;
			DrawNumber 4, HXINDEXFONTS, HXRTCGold,		GrenadePickup,					-6, -12;

			// Weapon Slot 2
			InInventory "Luger9mm"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "9x19", -73, -84, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo HX_NazisV2_9mmAmmo, -6, -84;
			}
			InInventory "Walther9mm"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "9x19", -73, -84, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo HX_NazisV2_9mmAmmo, -6, -84;
			}
			InInventory "WeaselsRevolver"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, ".357", -73, -78, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS, HXRTCLightGrey, ammo HX_NazisV2_357Ammo, -6, -78;
			}
			InInventory "M1911"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, " .45", -73, -72, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo HX_NazisV2_45ACPAmmo, -6, -72;
			}
			// Weapon Slot 3
			InInventory "TrenchShotgun"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "SHEL", -73, -66, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo HX_NazisV2_12GaugeAmmo, -6, -66;
			}
			InInventory "Browning5"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "SHEL", -73, -66, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo HX_NazisV2_12GaugeAmmo, -6, -66;
			}
			InInventory "MP40"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "9x19", -73, -84, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo HX_NazisV2_9mmAmmo, -6, -84;
			}
			InInventory "PPSH41"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "TKRV", -73, -60, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo TokarevAmmo, -6, -60;
			}
			InInventory "Thompson"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, " .45", -73, -72, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo HX_NazisV2_45ACPAmmo, -6, -72;
			}
			InInventory "Sten"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "9x19", -73, -84, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo HX_NazisV2_9mmAmmo, -6, -84;
			}
			// Weapon Slot 4
			InInventory "Kar98k"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "MAUS", -73, -54, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo MauserAmmo, -6, -54;
			}
			InInventory "G43"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "MAUS", -73, -54, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo MauserAmmo, -6, -54;
			}
			InInventory "Enfield"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, ".303", -73, -48, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo HX_NazisV2_303Ammo, -6, -48;
			}
			InInventory "Garand"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "3006", -73, -42, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo HX_NazisV2_3006Ammo, -6, -42;
			}
			InInventory "STG44"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "KURZ", -73, -36, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo HX_NazisV2_792KurzAmmo, -6, -36;
			}
			InInventory "FG42"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "MAUS", -73, -54, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo MauserAmmo, -6, -54;
			}
			// Weapon Slot 5
			InInventory "Pyrolight"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "FLAM", -73, -30, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo FlameAmmo, -6, -30;
			}
			InInventory "Nebelwerfer"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "MINI", -73, -24, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo NebAmmo, -6, -24;
			}
			InInventory "Panzerschreck"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "ROCK", -73, -18, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo PanzerAmmo, -6, -18;
			}
			InInventory "UMG43"
			{
				DrawString HXGENERALFONTS, HXRTCLightGrey, "9x19", -73, -84, 0, alignment(left);
				DrawNumber 4, HXINDEXFONTS,	HXRTCLightGrey, ammo HX_NazisV2_9mmAmmo, -6, -84;
			}

			// Ammo Tally highlight and Current Ammo equipped by type
			UsesAmmo
			{
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
				DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

				// Weapon Slot 2
				IsSelected "Luger9mm"
				{
					DrawString HXGENERALFONTS, untranslated, "9x19", -73, -84, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo HX_NazisV2_9mmAmmo, -6, -84;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
				}
				else IsSelected "Walther9mm"
				{
					DrawString HXGENERALFONTS, untranslated, "9x19", -73, -84, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo HX_NazisV2_9mmAmmo, -6, -84;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
				}
				else IsSelected "WeaselsRevolver"
				{
					DrawString HXGENERALFONTS, untranslated, ".357", -73, -78, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo HX_NazisV2_357Ammo, -6, -78;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
				}
				else IsSelected "M1911"
				{
					DrawString HXGENERALFONTS, untranslated, " .45", -73, -72, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo HX_NazisV2_45ACPAmmo, -6, -72;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
				}
				// Weapon Slot 3
				else IsSelected "TrenchShotgun"
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -66, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo HX_NazisV2_12GaugeAmmo, -6, -66;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
				}
				else IsSelected "Browning5"
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -66, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo HX_NazisV2_12GaugeAmmo, -6, -66;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 1;
				}
				else IsSelected "MP40"
				{
					DrawString HXGENERALFONTS, untranslated, "9x19", -73, -84, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo HX_NazisV2_9mmAmmo, -6, -84;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 8;
				}
				else IsSelected "PPSH41"
				{
					DrawString HXGENERALFONTS, untranslated, "TKRV", -73, -60, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo TokarevAmmo, -6, -60;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 18;
				}
				else IsSelected "Thompson"
				{
					DrawString HXGENERALFONTS, untranslated, " .45", -73, -72, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo HX_NazisV2_45ACPAmmo, -6, -72;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 5;
				}
				else IsSelected "Sten"
				{
					DrawString HXGENERALFONTS, untranslated, "9x19", -73, -84, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo HX_NazisV2_9mmAmmo, -6, -84;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 8;
				}
				// Weapon Slot 4
				else IsSelected "Kar98k"
				{
					DrawString HXGENERALFONTS, untranslated, "MAUS", -73, -54, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo MauserAmmo, -6, -54;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
				}
				else IsSelected "G43"
				{
					DrawString HXGENERALFONTS, untranslated, "MAUS", -73, -54, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo MauserAmmo, -6, -54;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 3;
				}
				else IsSelected "Enfield"
				{
					DrawString HXGENERALFONTS, untranslated, ".303", -73, -48, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo HX_NazisV2_303Ammo, -6, -48;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 3;
				}
				else IsSelected "Garand"
				{
					DrawString HXGENERALFONTS, untranslated, "3006", -73, -42, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo HX_NazisV2_3006Ammo, -6, -42;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
				}
				else IsSelected "STG44"
				{
					DrawString HXGENERALFONTS, untranslated, "KURZ", -73, -36, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo HX_NazisV2_792KurzAmmo, -6, -36;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 8;
				}
				else IsSelected "FG42"
				{
					DrawString HXGENERALFONTS, untranslated, "MAUS", -73, -54, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo MauserAmmo, -6, -54;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 5;
				}
				// Weapon Slot 5
				else IsSelected "Pyrolight"
				{
					DrawString HXGENERALFONTS, untranslated, "FLAM", -73, -30, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo FlameAmmo, -6, -30;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 15;
				}
				else IsSelected "Nebelwerfer"
				{
					DrawString HXGENERALFONTS, untranslated, "MINI", -73, -24, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo NebAmmo, -6, -24;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 30;
				}
				else IsSelected "Panzerschreck"
				{
					DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -18, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo PanzerAmmo, -6, -18;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 0;
				}
				else IsSelected "UMG43"
				{
					DrawString HXGENERALFONTS, untranslated, "9x19", -73, -84, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS,	untranslated, ammo HX_NazisV2_9mmAmmo, -6, -84;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 50;
				}
				else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
			}
			else
			{
				// Ammoless
				DrawImage "HXNOAVAI", -134, -33;
			}
		// ARMS & KEYS BARS - NAZIS V2
			// Keys
			InInventory "HXCUS_ArmsBarToken", 1
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -133;
					drawkeybar 12, horizontal, reverse, reverserows, auto, -13, -120, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -115;
					drawkeybar 6, horizontal, reverse, auto, -12, -119, 0, 6, auto;
				}
			}
			else 
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -120;
					drawkeybar 12, horizontal, reverse, reverserows, auto, -13, -107, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -102;
					drawkeybar 6, horizontal, reverse, auto, -12, -106, 0, 6, auto;
				}
			}
			// Arms
			InInventory "HXCUS_ArmsBarToken", 1
			{
				DrawImage "HXARMS", -90, -102;
				DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -98;
				DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -98;
				DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -98;
				DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -98;
				DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -98;
				DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -98;
				DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -98;
				DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -98;
				DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -98;
				DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -98;
			}
		}
		/*	Supercharge 2.8
		*
		*/
		else InInventory "HXMOD_Supercharge", 1
		{
		// AMMO TALLIES PANEL - Supercharge
			DrawImage "HXAMMTOP", -78, -47;
			DrawImage "HXAMMROW", -78, -37;
			DrawImage "HXAMMROW", -78, -31;
			DrawImage "HXAMMROW", -78, -25;
			DrawImage "HXAMMROW", -78, -19;
			DrawImage "HXAMMBOT", -78, -13;

			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CLIP", -73, -42, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SHEL", -73, -36, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SCRP", -73, -30, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"STMP", -73, -24, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"ROCK", -73, -18, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CELL", -73, -12, 0, alignment(left);

			DrawBar "HXAMMON", "HXAMMOFF", ammo Clip,				horizontal, interpolate(64), -56, -42;
			DrawBar "HXAMMON", "HXAMMOFF", ammo TangoShell,			horizontal, interpolate(64), -56, -36;
			DrawBar "HXAMMON", "HXAMMOFF", ammo TangoScrapDrum,		horizontal, interpolate(64), -56, -30;
			DrawBar "HXAMMON", "HXAMMOFF", ammo TangoStomperAmmo,	horizontal, interpolate(64), -56, -24;
			DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,			horizontal, interpolate(64), -56, -18;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Cell,				horizontal, interpolate(64), -56, -12;

			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Clip,				-6, -42;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo TangoShell,		-6, -36;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo TangoScrapDrum,	-6, -30;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo TangoStomperAmmo,	-6, -24;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo RocketAmmo,		-6, -18;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	ammo Cell,				-6, -12;

			// Ammo Tally highlight and Current Ammo equipped by type
			UsesAmmo
			{
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
				DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

				WeaponAmmo Clip
				{
					DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -42, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip, -6, -42;

					IsSelected "TangoPistol"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
					else IsSelected "TangoAssaultRifle"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
					else IsSelected "TangoChaingun"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 50; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo TangoShell
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -36, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo TangoShell,  -6, -36;

					IsSelected "TangoShotgun"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
					else IsSelected "TangoSuperShotgun"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo TangoScrapDrum
				{
					DrawString HXGENERALFONTS, untranslated, "SCRP", -73, -30, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo TangoScrapDrum, -6, -30;
					
					IsSelected "TangoScrapgun"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo TangoStomperAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "STMP", -73, -24, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo TangoStomperAmmo, -6, -24;

					IsSelected "TangoStomper"			{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 15; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo RocketAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -18, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -18;

					IsSelected "TangoRocketLauncher"	{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 15; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
				}
				WeaponAmmo Cell
				{
					DrawString HXGENERALFONTS, untranslated, "CELL", -73, -12, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Cell, -6, -12;

					IsSelected "TangoPlasmaRifle"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10; }
					else IsSelected "TangoBFG9000"		{ DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 80; }
					else { DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0; }
				}
			}
			else
			{
				// Ammoless
				DrawImage "HXNOAVAI", -134, -33;
			}
		// ARMS & KEYS BARS - Supercharge
			// Keys
			InInventory "HXCUS_ArmsBarToken", 1
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -91;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -71, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -73;
					drawkeybar 6, horizontal, reverse, auto, -12, -70, 0, 6, auto;
				}
			}
			else 
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -78;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -58, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -60;
					drawkeybar 6, horizontal, reverse, auto, -12, -57, 0, 6, auto;
				}
			}

			// Arms
			InInventory "HXCUS_ArmsBarToken", 1
			{
				DrawImage "HXARMS", -90, -60;

				DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -56;
				DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -56;
				DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -56;
				DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -56;
				DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -56;
				DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -56;
				DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -56;
				DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -56;
				DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -56;
				DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -56;
			}
		}
		/*	Vanilla
		*
		*	Anything that doesn't change the default ammos should "Just Work"
		*/
		else
		{
		// AMMO TALLIES PANEL - Vanilla
			DrawImage "HXAMMTOP", -78, -35;
			DrawImage "HXAMMROW", -78, -25;
			DrawImage "HXAMMROW", -78, -19;
			DrawImage "HXAMMBOT", -78, -13;

			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CLIP", -73, -30, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "SHEL", -73, -24, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "ROCK", -73, -18, 0, alignment(left);
			DrawString HXGENERALFONTS, HXRTCVeryDarkGrey, "CELL", -73, -12, 0, alignment(left);

			DrawBar "HXAMMON", "HXAMMOFF", ammo Clip,		horizontal, interpolate(64), -56, -30;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Shell,		horizontal, interpolate(64), -56, -24;
			DrawBar "HXAMMON", "HXAMMOFF", ammo RocketAmmo,	horizontal, interpolate(64), -56, -18;
			DrawBar "HXAMMON", "HXAMMOFF", ammo Cell,		horizontal, interpolate(64), -56, -12;

			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Clip,		-6, -30;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Shell,		-6, -24;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo RocketAmmo,	-6, -18;
			DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey, ammo Cell,		-6, -12;

			// Ammo Tally highlight and Current Ammo equipped by type
			UsesAmmo
			{
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -130, -29;
				DrawString HXGENERALFONTM, untranslated, "AMMO", -90, -12, 0;

				WeaponAmmo Clip
				{
					DrawString HXGENERALFONTS, untranslated, "CLIP", -73, -30, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Clip, -6, -30;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 10;
				}
				WeaponAmmo Shell
				{
					DrawString HXGENERALFONTS, untranslated, "SHEL", -73, -24, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Shell,  -6, -24;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 1;
				}
				WeaponAmmo RocketAmmo
				{
					DrawString HXGENERALFONTS, untranslated, "ROCK", -73, -18, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo RocketAmmo, -6, -18;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 2;
				}
				WeaponAmmo Cell
				{
					DrawString HXGENERALFONTS, untranslated, "CELL", -73, -12, 0, alignment(left);
					DrawNumber 4, HXINDEXFONTS, untranslated, ammo Cell, -6, -12;
					DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -84, -29, 0, HXRTCRed, 15;
				}
			}
			else
			{
				// Ammoless
				DrawImage "HXNOAVAI", -134, -33;
			}
		// ARMS & KEYS BARS - Vanilla
			// Keys
			InInventory "HXCUS_ArmsBarToken", 1
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -79;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -59, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -61;
					drawkeybar 6, horizontal, reverse, auto, -12, -58, 0, 6, auto;
				}
			}
			else 
			{
				InInventory "HXCUS_KeysExtendedToken", 1
				{
					DrawImage "HXKEYSE", -90, -66;
					drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -46, 0, 8, 8;
				}
				else
				{
					DrawImage "HXKEYS", -90, -48;
					drawkeybar 6, horizontal, reverse, auto, -12, -45, 0, 6, auto;
				}
			}
			
			// Arms
			InInventory "HXCUS_ArmsBarToken", 1
			{
				DrawImage "HXARMS", -90, -48;

				DrawSwitchableImage weaponslot 1, "HXGNUM1", "HXYSNUM1", -58, -44;
				DrawSwitchableImage weaponslot 2, "HXGNUM2", "HXYSNUM2", -53, -44;
				DrawSwitchableImage weaponslot 3, "HXGNUM3", "HXYSNUM3", -48, -44;
				DrawSwitchableImage weaponslot 4, "HXGNUM4", "HXYSNUM4", -43, -44;
				DrawSwitchableImage weaponslot 5, "HXGNUM5", "HXYSNUM5", -38, -44;
				DrawSwitchableImage weaponslot 6, "HXGNUM6", "HXYSNUM6", -33, -44;
				DrawSwitchableImage weaponslot 7, "HXGNUM7", "HXYSNUM7", -28, -44;
				DrawSwitchableImage weaponslot 8, "HXGNUM8", "HXYSNUM8", -23, -44;
				DrawSwitchableImage weaponslot 9, "HXGNUM9", "HXYSNUM9", -18, -44;
				DrawSwitchableImage weaponslot 0, "HXGNUM0", "HXYSNUM0", -13, -44;
			}
		}


	// CURRENT WEAPON ICON PANEL
		InInventory "HXCUS_WeaponIconToken", 1
		{
			/*	Brutal Doom Platinum
			*
			*	ACTOR HXMOD_BrutalDoomPlatinum: mod token
			*
			*	ACTOR MeatAmmo
			*/
			InInventory "HXMOD_BrutalDoomPlatinum", 1
			{
				DrawImage "HXWEAPON", -122, -53;

				InInventory "HX_BrutalDoom_meatshield" { DrawImage "PISTG0", -100, -43, center, 36, 12; }
				else IsSelected "DualRevolver" { DrawImage "REVOT0", -100, -43, center, 36, 12; }
				else IsSelected "HandGrenades"
				{
					InInventory "HX_BrutalDoomPlat_grenadetype", 3 { DrawImage "BDPGRNV", -100, -43, center, 36, 12; }
					else InInventory "HX_BrutalDoomPlat_grenadetype", 2 { DrawImage "BDPGRNP", -100, -43, center, 36, 12; }
					else InInventory "HX_BrutalDoomPlat_grenadetype", 1 { DrawImage "BDPGRNF", -100, -43, center, 36, 12; }
					else InInventory not "HX_BrutalDoomPlat_grenadetype" { DrawImage "BDPGRNC", -100, -43, center, 36, 12; }
				}
				else { DrawImage weaponicon, -100, -43, center, 36, 12, alticonfirst; }
			}
			/*	Brutal Doom
			*
			*	ACTOR HXMOD_BrutalDoom: mod token
			*/
			else InInventory "HXMOD_BrutalDoom", 1
			{
				DrawImage "HXWEAPON", -122, -53;
				DrawImage weaponicon, -100, -43, center, 36, 12, alticonfirst;
			}
			/*	Doom 4 Vanilla
			*
			*	ACTOR HXMOD_Doom4Vanilla: mod token
			*
			*	Both pistols currently use the same image, otherwise swap based on CVAR
			*/
			else InInventory "HXMOD_Doom4Vanilla", 1
			{
				DrawImage "HXWEAPON", -134, -53;

				IsSelected "DH_Chainsaw" 
				{
					InInventory "HX_D4V_swtoggletoken", 1 { DrawImage "VORTA0", -112, -43, center, 36, 12; }
					else { DrawImage weaponicon, -112, -43, center, 36, 12; }
				}
				else IsSelected "DH_Shotgun" 
				{
					InInventory "HX_D4V_sgtoggletoken", 1 { DrawImage "HELSA0", -112, -43, center, 36, 12; }
					else { DrawImage weaponicon, -112, -43, center, 36, 12; }
				}
				else IsSelected "DH_SuperShotgun" 
				{
					InInventory "HX_D4V_sstoggletoken", 1 { DrawImage "REPIA0", -112, -43, center, 36, 12; }
					else { DrawImage weaponicon, -112, -43, center, 36, 12; }
				}
				else IsSelected "DH_Chaingun" 
				{
					InInventory "HX_D4V_chtoggletoken", 1 { DrawImage "MGUNB0", -112, -43, center, 36, 12; }
					else { DrawImage weaponicon, -112, -43, center, 36, 12; }
				}
				else IsSelected "DH_RocketLauncher" 
				{
					InInventory "HX_D4V_rotoggletoken", 1 { DrawImage "GRAPA0", -112, -43, center, 36, 12; }
					else { DrawImage weaponicon, -112, -43, center, 36, 12; }
				}
				else IsSelected "DH_PlasmaRifle" 
				{
					InInventory "HX_D4V_putoggletoken", 1 { DrawImage "LTGSA0", -112, -43, center, 36, 12; }
					else { DrawImage weaponicon, -112, -43, center, 36, 12; }
				}
				else IsSelected "DH_BFG9000" 
				{
					InInventory "HX_D4V_catoggletoken", 1 { DrawImage "BFUGA0", -112, -43, center, 36, 12; }
					else { DrawImage weaponicon, -112, -43, center, 36, 12; }
				}
				else { DrawImage weaponicon, -112, -43, center, 36, 12, alticonfirst; }
			}
			/*	Faspons
			*
			*/
			else InInventory "HXMOD_Faspons", 1
			{
				DrawImage "HXWEAPON", -134, -53;

				IsSelected "Knuckles" {DrawImage "PKFSG0", -112, -43, center, 36, 12;}
				else { DrawImage weaponicon, -112, -43, center, 36, 12, alticonfirst; }
			}
			/*	NAZIS V2
			*
			*/
			else InInventory "HXMOD_NazisV2", 1
			{
				DrawImage "HXWEAPON", -122, -53;
				DrawImage weaponicon, -100, -43, center, 36, 12, alticonfirst;
			}
			/*	PerK's Smoother Weapon Animations Enhanced 3.2.1
			*
			*	ACTOR HXMOD_PerkSmootherWeaponsEnh: mod token
			*
			*	ACTOR HX_PerkSmooth_glovedfist
			*	ACTOR HX_PerkSmooth_blackgloves: only display if "HX_PerkSmooth_glovedfist" is also found
			*/
			else InInventory "HXMOD_PerkSmootherWeaponsEnh", 1
			{
				DrawImage "HXWEAPON", -134, -53;

				IsSelected "ZPerkFist"
				{
					InInventory "HX_PerkSmooth_glovedfist", 1
					{
						InInventory "HX_PerkSmooth_blackgloves", 1 { DrawImage "BKFSE0", -112, -43, center, 36, 12; }
						else { DrawImage "PKFSE0", -112, -43, center, 36, 12; }
					}
					else { DrawImage "PKF2E0", -112, -43, center, 36, 12; }
				}
				else
				{	// Everything not a fist, at the moment
					DrawImage weaponicon, -112, -43, center, 36, 12, alticonfirst;
				}
			}

			/*	SmoothDoom 2.0 WIP
			*
			*	ACTOR HXMOD_SmoothDoom2: mod token
			*
			*	ACTOR HX_SmoothDoom2_blackgloves
			*	ACTOR HX_SmoothDoom2_doom64
			*/
			else InInventory "HXMOD_SmoothDoom2", 1
			{
				DrawImage "HXWEAPON", -134, -53;

				IsSelected "PerkFist"
				{
					InInventory "HX_SmoothDoom2_doom64" { DrawImage "PUNFE0", -112, -43, center, 36, 12; }
					else { DrawImage "PKFSE0", -112, -43, center, 36, 12; }
				}
				else IsSelected "Z86Chainsaw"
				{
					InInventory "HX_SmoothDoom2_doom64" { DrawImage "SW64G0", -112, -43, center, 36, 12; }
					else { DrawImage "CSAWA0", -112, -43, center, 36, 12; }
				}
				else IsSelected "PerkShotgun"
				{
					InInventory "HX_SmoothDoom2_doom64" { DrawImage "64SGB0", -112, -43, center, 36, 12; }
					else { DrawImage "SHOTA0", -112, -43, center, 36, 12; }
				}
				else IsSelected "PerkSuperShotgun"
				{
					InInventory "HX_SmoothDoom2_doom64" { DrawImage "64S2A0", -112, -43, center, 36, 12; }
					else { DrawImage "SGN2A0", -112, -43, center, 36, 12; }
				}
				else IsSelected "Z86Chaingun"
				{
					InInventory "HX_SmoothDoom2_doom64" { DrawImage "64CGB0", -112, -43, center, 36, 12; }
					else { DrawImage "MGUNA0", -112, -43, center, 36, 12; }
				}
				else IsSelected "PerkRocketLauncher"
				{
					InInventory "HX_SmoothDoom2_doom64" { DrawImage "64LAA0", -112, -43, center, 36, 12; }
					else { DrawImage "LAUNA0", -112, -43, center, 36, 12; }
				}
				else IsSelected "BloxPlasmaRifle"
				{
					InInventory "HX_SmoothDoom2_doom64" { DrawImage "PL64A0", -112, -43, center, 36, 12; }
					else { DrawImage "PLRLA0", -112, -43, center, 36, 12; }
				}
				else IsSelected "Z86BFG9000"
				{
					InInventory "HX_SmoothDoom2_doom64" { DrawImage "BFUGA0", -112, -43, center, 36, 12; }
					else { DrawImage "BFG9A0", -112, -43, center, 36, 12; }
				}
				else
				{	// PerkPistol, Rifle
					DrawImage weaponicon, -112, -43, center, 36, 12, alticonfirst;
				}
			}
			else 
			{
				DrawImage "HXWEAPON", -134, -53;

				DrawImage weaponicon, -112, -43, center, 36, 12, alticonfirst, alternateonfail
				{
					DrawString HXGENERALFONTS, untranslated, weapontag, -131, -50, 0, alignment(left), linebreaks(38);
				}
			}
		}
	}



/***************************************
*
* BOTTOM CENTER PANELS
*
***************************************/

	InInventory not "HXSYS_VehicleHUDToken", 1 || "HXSYS_NormalHUDKillerToken", 1
	{
	// Stamina Bar
		InInventory "HXSYS_StaminaStickyToken", 1
		{
			DrawImage "HXSTAMFR", -76 + center, -15;

			InInventory "HXMOD_BrutalDoom", 1
				{ DrawBar "HXSTAMOK", "HXSTAMNO", HX_BrutalDoom_staminatoken, horizontal, interpolate(8), -72 + center, -11; }
			InInventory "HXMOD_BrutalDoom64", 1
				{ DrawBar "HXSTAMOK", "HXSTAMNO", Stamina, horizontal, interpolate(8), -72 + center, -11; }
		}
	}



/***************************************
*
* VEHICLE HUD PANELS
*
***************************************/

	InInventory "HXSYS_TransformationHUDToken", 1
	{
	/*	Brutal Doom / Platinum */
		InInventory "HXMOD_BrutalDoom", 1
		{
			// Demon Forms
			InInventory not "UnmakerPhaserWeapon", 1
			{
				// DOOMGUY'S MUGSHOT
				DrawImage "HXMGSHT", -23 + center, -47;

				// Mugshot reactive border - Invulnerability
				InInventory "HX_InvulnerabilityPowerUpToken" { DrawImage "HXMGBFY", -23 + center, -47; }
				else { DrawImage "HXMGBFG", -23 + center, -47; }
				// Mugshot reactive corners - Berserk
				InInventory "HX_BerserkPowerUpToken" { DrawImage "HXMGCGR", -23 + center, -47; }
				else { DrawImage "HXMGCGW", -23 + center, -47; }

				// Bars
				DrawImage "HXTRBARL", -127 + center, -21;
				DrawImage "HXTRBARR", 23 + center, -21;
				// Timer
				DrawImage "HXTRT", -61 + center, -34;
				DrawImage "HXTRT", 23 + center, -34;
			}
			InInventory "PowerTransformBaron", 1
			{
				DrawImage "HXTRBLBG", -123 + center, -17;
				DrawImage "HXTRBRBG", 23 + center, -17;

				InInventory not "HXMOD_BrutalDoomPlatinum", 1
				{
					DrawMugShot "STF", 5, -15 + center, -41;

					DrawNumber 4, CONFONT, yellow, health, interpolate(128), -26 + center, -32, 0, red, 249, green, 501;
					DrawBar "HXTRBLOK", "HXTRNO", health (1000), horizontal, reverse, interpolate(64), -123 + center, -17;
					DrawNumber 4, CONFONT, yellow, HX_BrutalDoom_transformationduration, interpolate(128), 58 + center, -32, 0, red, 15;
					DrawBar "HXTRBROK", "HXTRNO", HX_BrutalDoom_transformationduration, horizontal, interpolate(64), 23 + center, -17;
				}
				else InInventory "HXMOD_BrutalDoomPlatinum", 1
				{
					DrawMugShot "STF", 5, -18 + center, -41;

					DrawNumber 4, CONFONT, yellow, health, interpolate(128), -26 + center, -32, 0, red, 174, green, 351;
					DrawBar "HXTRBLOK", "HXTRNO", health (700), horizontal, reverse, interpolate(64), -123 + center, -17;
					DrawNumber 4, CONFONT, yellow, health, interpolate(128), 58 + center, -32, 0, red, 174, green, 351;
					DrawBar "HXTRBROK", "HXTRNO", health (700), horizontal, interpolate(64), 23 + center, -17;
				}
			}
			InInventory "PowerTransformMancubus", 1
			{
				DrawMugShot "STF", 5, -18 + center, -39;
				DrawNumber 4, CONFONT, yellow, health, interpolate(128), -26 + center, -32, 0, red, 174, green, 351;
				DrawImage "HXTRMLBG", -123 + center, -17;
				DrawBar "HXTRMLOK", "HXTRNO", health (700), horizontal, reverse, interpolate(64), -123 + center, -17;
				DrawNumber 4, CONFONT, untranslated, HXSYS_AltitudeMetersToken, interpolate(128), 58 + center, -32, 0;
				DrawImage "HXTRMRBG", 23 + center, -17;
				DrawBar "HXTRMROK", "HXTRNO", HXSYS_AltitudeMetersToken, horizontal, interpolate(64), 23 + center, -17;
			}
			InInventory "PowerTransformRevenant", 1
			{
				DrawImage "HXTRRLBG", -123 + center, -17;
				DrawImage "HXTRRRBG", 23 + center, -17;

				InInventory not "HXMOD_BrutalDoomPlatinum", 1
				{
					DrawMugShot "STF", 5, -15 + center, -41;

					DrawNumber 4, CONFONT, yellow, health, interpolate(128), -26 + center, -32, 0, red, 74, green, 151;
					DrawBar "HXTRRLOK", "HXTRNO", health (300), horizontal, reverse, interpolate(64), -123 + center, -17;
					DrawNumber 4, CONFONT, untranslated, HX_BrutalDoom_transformationduration, interpolate(128), 58 + center, -32, 0;
					DrawBar "HXTRRROK", "HXTRNO", HX_BrutalDoom_transformationduration, horizontal, interpolate(64), 23 + center, -17;
				}
				else InInventory "HXMOD_BrutalDoomPlatinum", 1
				{
					DrawMugShot "STF", 5, -17 + center, -41;

					DrawNumber 4, CONFONT, yellow, health, interpolate(128), -26 + center, -32, 0, red, 174, green, 351;
					DrawBar "HXTRRLOK", "HXTRNO", health (700), horizontal, reverse, interpolate(64), -123 + center, -17;
					DrawNumber 4, CONFONT, untranslated, HXSYS_AltitudeMetersToken, interpolate(128), 58 + center, -32, 0;
					DrawBar "HXTRRROK", "HXTRNO", HXSYS_AltitudeMetersToken, horizontal, interpolate(64), 23 + center, -17;
					// Laser Guidance Notice
					DrawImage "HXTRN", -61 + center, -47;
					InInventory "HX_BrutalDoomPlat_helllaserguiderockets", 1 { DrawString HXGENERALFONTM, HXRTCRED, "LASER", -26 + center, -43, 0; }
					else { DrawString HXGENERALFONTM, HXRTCVeryDarkGrey, "LASER", -26 + center, -43, 0; }
				}
			}

			// Unmaker Rush
			InInventory "UnmakerPhaserWeapon", 1
			{
				// LEVEL STATS (TIME, KILLS, ITEMS & SECRETS)
				InInventory "HXCUS_KISToken"
				{
					InInventory "HXCUS_PTToken"
					{
						DrawImage "HXPT", 2, 2;
						DrawNumber 2, CONFONT, white, HX_BDP_UTime1, fillzeros, 25, 6;
						DrawString CONFONT, white, ":", 33, 6;
						DrawNumber 2, CONFONT, white, HX_BDP_UTime2, fillzeros, 49, 6;
						DrawString CONFONT, white, ":", 57, 6;
						DrawNumber 2, CONFONT, white, HX_BDP_UTime3, fillzeros, 73, 6;

						InInventory not "HXCUS_KISExtendedToken"
						{
							DrawImage "HXKIS", 2, 19;
							DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UKills, fillzeros, 49, 24;
							DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UItems, fillzeros, 49, 30;
							DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_USecrets, fillzeros, 49, 36;
							DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UTotalMonsters, fillzeros, 74, 24;
							DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UTotalItems, fillzeros, 74, 30;
							DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UTotalSecrets, fillzeros, 74, 36;
						}
						else
						{
							DrawImage "HXKISE", 2, 19;
							DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UKills, fillzeros, 44, 24;
							DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UItems, fillzeros, 44, 30;
							DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_USecrets, fillzeros, 44, 36;
							DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UTotalMonsters, fillzeros, 74, 24;
							DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UTotalItems, fillzeros, 74, 30;
							DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UTotalSecrets, fillzeros, 74, 36;
						}
					}
					else
					{
						InInventory not "HXCUS_KISExtendedToken"
						{
							DrawImage "HXKIS", 2, 2;
							DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UKills, fillzeros, 49, 7;
							DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UItems, fillzeros, 49, 13;
							DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_USecrets, fillzeros, 49, 19;
							DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UTotalMonsters, fillzeros, 74, 7;
							DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UTotalItems, fillzeros, 74, 13;
							DrawNumber 4, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UTotalSecrets, fillzeros, 74, 19;
						}
						else
						{
							DrawImage "HXKISE", 2, 2;
							DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UKills, fillzeros, 44, 7;
							DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UItems, fillzeros, 44, 13;
							DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_USecrets, fillzeros, 44, 19;
							DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UTotalMonsters, fillzeros, 74, 7;
							DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UTotalItems, fillzeros, 74, 13;
							DrawNumber 5, HXINDEXFONTS, HXRTCLightWhite, HX_BDP_UTotalSecrets, fillzeros, 74, 19;
						}
					}
				}
				else InInventory "HXCUS_PTToken"
				{
					DrawImage "HXPT", 2, 2;
					DrawNumber 2, CONFONT, white, HX_BDP_UTime1, fillzeros, 25, 6;
					DrawString CONFONT, white, ":", 33, 6;
					DrawNumber 2, CONFONT, white, HX_BDP_UTime2, fillzeros, 49, 6;
					DrawString CONFONT, white, ":", 57, 6;
					DrawNumber 2, CONFONT, white, HX_BDP_UTime3, fillzeros, 73, 6;
				}

				// POWERUP PANELS
				InInventory "HXCUS_PowerupBoxToken", 1
				{
					// Background panels + inactive icons
					DrawImage "HXBDSHNO", -146, 2;	DrawImage "HXQUADNO", -122, 2;	DrawImage "HXINVUNO", -98, 2;
					DrawImage "HXBLURNO", -74, 2;	DrawImage "HXRADSNO", -50, 2;	DrawImage "HXLGHTNO", -26, 2;		
					// Active icon + border
					DrawBar "HXBDSHOK", "HXINVOFF", HX_BDP_UBuff1, vertical, interpolate(256), -146, 2;
					DrawBar "HXQUADOK", "HXINVOFF", HX_BDP_UBuff2, vertical, interpolate(256), -122, 2;
					DrawBar "HXINVUOK", "HXINVOFF", HX_BDP_UBuff3, vertical, interpolate(256), -98, 2;
					DrawBar "HXBLUROK", "HXINVOFF", HX_BDP_UBuff4, vertical, interpolate(256), -74, 2;
					DrawBar "HXRADSOK", "HXINVOFF", HX_BDP_UBuff5, vertical, interpolate(256), -50, 2;	
					DrawBar "HXLGHTOK", "HXINVOFF", HX_BDP_UBuff6, vertical, interpolate(256), -26, 2;
				}

				// POWERUP TIME INDICATORS
				InInventory "HXCUS_PowerupTimerToken", 1
				{
					// Background timer panels
					DrawImage "HXBUFFT", -146, 25;	DrawImage "HXBUFFT", -122, 25;	DrawImage "HXBUFFT", -98, 25;
					DrawImage "HXBUFFT", -74, 25;	DrawImage "HXBUFFT", -50, 25;	DrawImage "HXBUFFT", -26, 25;
					// Active timers
					DrawImage "HXBDSHT", -146, 25;	DrawImage "HXQUADT", -122, 25;	DrawImage "HXINVUT", -98, 25;
					DrawImage "HXBLURT", -74, 25;	DrawImage "HXRADST", -50, 25;	DrawImage "HXLGHTT", -26, 25;
					DrawImage "HXSML058", -143, 29;	DrawImage "HXSML058", -119, 29;	DrawImage "HXSML058", -95, 29;
					DrawImage "HXSML058", -71, 29;	DrawImage "HXSML058", -47, 29;	DrawImage "HXSML058", -23, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_BDP_UBuff1, fillzeros, -125, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_BDP_UBuff2, fillzeros, -101, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_BDP_UBuff3, fillzeros, -77, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_BDP_UBuff4, fillzeros, -53, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_BDP_UBuff5, fillzeros, -29, 29;
					DrawNumber 3, HXINDEXFONTS, untranslated, HX_BDP_UBuff6, fillzeros, -5, 29;
				}

				// DOOMGUY'S MUGSHOT
				DrawImage "HXMGSHT", 2, -71;

				// Mugshot reactive border - Invulnerability
				InInventory "HX_InvulnerabilityPowerUpToken" { DrawImage "HXMGBFY", 2, -71; }
				else { DrawImage "HXMGBFG", 2, -71; }
				// Mugshot reactive corners - Berserk
				InInventory "HX_BerserkPowerUpToken" { DrawImage "HXMGCGR", 2, -71; }
				else { DrawImage "HXMGCGW", 2, -71; }

				// Air Supply and Rage Meter (HXRTC Gold default)
				InInventory "HXCUS_AirMeterToken", 1 { DrawBar "HXARBROK", "HXARRGNO", HX_BDP_UAir, vertical, interpolate(256), 6, -67; }
				InInventory "HXRTCPlayerRagePoints", 1 { DrawBar "HXRGBROK", "HXARRGNO", HX_BDP_URage, vertical, interpolate(256), 41, -67; }

				// Vanilla mugshot
				/* DrawMugShot "STF", 5, 8, -65; */
				DrawImage "STFOUCH0", 8, -65;

				// INVENTORY ARTIFACTS
				InInventory "HXCUS_ArtifactToken"
				{
					DrawImage "HXINVSEL", 2, -106;
					DrawSelectedInventory alwaysshowcounter, centerbottom, HXINDEXFONTS, 25, -75, 44, -81, untranslated;
				}

				// BERSERK
				InInventory "HX_BerserkPowerUpToken", 1
				{
					DrawImage "HXARMTYP", 72, -49;
					DrawImage "HXARMTFG", 72, -49;
					InInventory not "NoFatality" { DrawImage "HXBERSRK", 72, -49; }
					else { DrawImage "HXHEALTH", 72, -49; }
				}

				// ARMOR SAVE PERCENTAGE FRAME
				InInventory "HXCUS_ArmorSaveToken", 1
				{
					DrawImage "HXARMSV", 48, -62;
					DrawImage "HXARMSVR", 48, -62;
					DrawNumber 3, HXGENERALFONTS, untranslated, 666, interpolate(256), 64, -58, 0;
					DrawImage "HXSML037", 65, -58;
				}

				// ARMOR FRAME
				DrawImage "HXARMTYP", 48, -49;
				DrawImage "HXARMTFR", 48, -49;
				DrawImage "HXBDSIGU", 48, -49;

				// HEALTH, ARMOR
				DrawImage "HXHPTOP", 2, -26;
				DrawImage "HXHPBOTS", 2, -14;
				
				// Health, Overhealth
				DrawString HXGENERALFONTM, HXRTCDarkRed, "HELLTH", 44, -20, 0;
				DrawImage "HXBDUHOK", 46, -20;
				DrawImage "HXBDUHHI", 46, -20;
				DrawNumber 4, CONFONT, red, health, interpolate(256), 122, -22, 0;

				// Armor, Overarmor
				DrawString HXGENERALFONTM, HXRTCDarkRed, "ERROR", 43, -13, 1;
				DrawBar "HXHABROK", "HXHABRBG", HX_BDP_UArmor, horizontal, interpolate(256), 46, -13;
				DrawBar "HXHEBRHI", "HXHABRNO", HX_BDP_UArmor, horizontal, interpolate(256), 46, -13;
				DrawNumber 4, CONFONT, red, HX_BDP_UArmor, interpolate(256), 122, -15, 0;

				// AMMO TALLIES PANEL - General Types
				DrawImage "HXAMMTOP", -78, -53;
				DrawImage "HXAMMROW", -78, -43;
				DrawImage "HXAMMROW", -78, -37;
				DrawImage "HXAMMROW", -78, -31;
				DrawImage "HXAMMROW", -78, -25;
				DrawImage "HXAMMBOT", -78, -13;
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"PIST", -73, -48, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"SHEL", -73, -42, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CLIP", -73, -36, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"ROCK", -73, -30, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"CELL", -73, -24, 0, alignment(left);
				DrawString HXGENERALFONTS, HXRTCVeryDarkGrey,	"FLAM", -73, -12, 0, alignment(left);
				DrawBar "HXAMMON", "HXAMMOFF", HX_BDP_UClip1,	horizontal, interpolate(256), -56, -48;
				DrawBar "HXAMMON", "HXAMMOFF", HX_BDP_UShell,	horizontal, interpolate(256), -56, -42;
				DrawBar "HXAMMON", "HXAMMOFF", HX_BDP_UClip2,	horizontal, interpolate(256), -56, -36;
				DrawBar "HXAMMON", "HXAMMOFF", HX_BDP_URocket,	horizontal, interpolate(256), -56, -30;
				DrawBar "HXAMMON", "HXAMMOFF", HX_BDP_UCell,	horizontal, interpolate(256), -56, -24;
				DrawBar "HXAMMON", "HXAMMOFF", HX_BDP_UGas,		horizontal, interpolate(256), -56, -12;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	HX_BDP_UClip1,	fillzeros, -6, -48;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	HX_BDP_UShell,	fillzeros, -6, -42;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	HX_BDP_UClip2,	fillzeros, -6, -36;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	HX_BDP_URocket,	fillzeros, -6, -30;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	HX_BDP_UCell,	fillzeros, -6, -24;
				DrawNumber 4, HXINDEXFONTS, HXRTCDarkGrey,	HX_BDP_UGas,	fillzeros, -6, -12;

				// AMMO TALLIES PANEL - Soul
				DrawImage "HXAMMROW", -78, -19;
				DrawString HXGENERALFONTS, HXRTCRed, "SOUL", -73, -18, 0, alignment(left);
				DrawBar "HXAMMON", "HXAMMOFF", ammo SoulAmmo,	horizontal, interpolate(64), -56, -18;
				DrawNumber 4, HXINDEXFONTS, HXRTCRed, ammo SoulAmmo, -6, -18;

				// CURRENT AMMO
				DrawImage "HXAMMO", -134, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo SoulAmmo, vertical, interpolate(64), -130, -29;
				DrawString HXGENERALFONTM, untranslated, "SOUL", -90, -12, 0;
				DrawNumber 4, HXSTATUSFONT, untranslated, ammo SoulAmmo, interpolate(128), -84, -29, 0, HXRTCRed, 66;

				// GRENADE PANEL
				DrawImage "HXGREN", -78, -73;
				// Void Grenades
				DrawString HXGENERALFONTS, HXRTCBDPPlasma,						"VOID", -10, -62, 0;
				DrawNumber 1, HXINDEXFONTS, HXRTCBDPPlasma, HX_BDP_UGrenade1,			-5,  -62, 0;
				// Pipebombs
				DrawString HXGENERALFONTS, HXRTCYellow,							"PIPE", -33, -62, 0;
				DrawNumber 1, HXINDEXFONTS, HXRTCYellow, HX_BDP_UGrenade2,				-28, -62, 0;
				// Freeze Grenades
				DrawString HXGENERALFONTS, HXRTCBDPStickyGrenades,				"FREZ", -10, -69, 0;
				DrawNumber 1, HXINDEXFONTS, HXRTCBDPStickyGrenades, HX_BDP_UGrenade3,	-5,  -69, 0;
				// Cluster Grenades
				DrawString HXGENERALFONTS, HXRTCGold,							"CLST", -33, -69, 0;
				DrawNumber 4, HXINDEXFONTS, HXRTCGold, HX_BDP_UGrenade4,				-28, -69, 0;
				InInventory "HX_BDP_UGrenadeR", 3		{ DrawImage "BDPGRNV", -63, -63, center, 22, 12; }
				else InInventory "HX_BDP_UGrenadeR", 2	{ DrawImage "BDPGRNP", -63, -63, center, 22, 12; }
				else InInventory "HX_BDP_UGrenadeR", 1	{ DrawImage "BDPGRNF", -63, -63, center, 22, 12; }
				else InInventory not "HX_BDP_UGrenadeR"	{ DrawImage "BDPGRNC", -63, -63, center, 22, 12; }

				// NUKE PANEL
				InInventory "HXCUS_WeaponIconToken", 1
				{
					DrawImage "HXBDNKNO", -98, -73;
					InInventory "Nuke", 1 { DrawImage "HXBDNKOK", -98, -73; }
				}
				else
				{
					DrawImage "HXBDNKNO", -98, -53;
					InInventory "Nuke", 1 { DrawImage "HXBDNKOK", -98, -53; }
				}

				// KEYS BAR
				InInventory "HXCUS_ArmsBarToken", 1
				{
					InInventory "HXCUS_KeysExtendedToken", 1
					{
						DrawImage "HXKEYSE", -90, -117;
						drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -97, 0, 8, 8;
					}
					else
					{
						DrawImage "HXKEYS", -90, -99;
						drawkeybar 6, horizontal, reverse, auto, -12, -96, 0, 6, auto;
					}
				}
				else 
				{
					InInventory "HXCUS_KeysExtendedToken", 1
					{
						DrawImage "HXKEYSE", -90, -104;
						drawkeybar 24, horizontal, reverse, reverserows, auto, -13, -84, 0, 8, 8;
					}
					else
					{
						DrawImage "HXKEYS", -90, -86;
						drawkeybar 6, horizontal, reverse, auto, -12, -83, 0, 6, auto;
					}
				}

				// ARMS BAR
				InInventory "HXCUS_ArmsBarToken", 1
				{
					DrawImage "HXARMS", -90, -86;
					DrawNumber 4, HXINDEXFONTS, untranslated, HX_BDP_UWeaponslot1, -53, -82, 0;
					DrawNumber 4, HXINDEXFONTS, untranslated, HX_BDP_UWeaponslot2, -48, -82, 0;
					DrawNumber 4, HXINDEXFONTS, untranslated, HX_BDP_UWeaponslot3, -43, -82, 0;
					DrawNumber 4, HXINDEXFONTS, untranslated, HX_BDP_UWeaponslot4, -38, -82, 0;
					DrawNumber 4, HXINDEXFONTS, untranslated, HX_BDP_UWeaponslot5, -33, -82, 0;
					DrawNumber 4, HXINDEXFONTS, untranslated, HX_BDP_UWeaponslot6, -28, -82, 0;
					DrawNumber 4, HXINDEXFONTS, untranslated, HX_BDP_UWeaponslot7, -23, -82, 0;
					DrawNumber 4, HXINDEXFONTS, untranslated, HX_BDP_UWeaponslot8, -18, -82, 0;
					DrawNumber 4, HXINDEXFONTS, untranslated, HX_BDP_UWeaponslot9, -13, -82, 0;
					DrawNumber 4, HXINDEXFONTS, untranslated, HX_BDP_UWeaponslot0,  -8, -82, 0;
				}

				// CURRENT WEAPON ICON PANEL
				InInventory "HXCUS_WeaponIconToken", 1
				{
					DrawImage "HXWEAPON", -122, -53;
					DrawImage "UNHWA0", -100, -43, center, 36, 12, alticonfirst;
				}

			}
		}
	}
	InInventory "HXSYS_VehicleHUDToken", 1
	{
	/*	Brutal Doom / Platinum */
		InInventory "HXMOD_BrutalDoom", 1
		{
			InInventory "PowerArtilleryTankSwitch", 1
			{
				// INVENTORY ARTIFACTS
				InInventory "HXCUS_ArtifactToken"
				{
					DrawImage "HXINVSEL", 2, -61;
					DrawSelectedInventory alwaysshowcounter, centerbottom, HXINDEXFONTS, 25, -30, 44, -36, untranslated;
				}
				
				// ITEM PANELS (BERSERK, ARMOR SAVE, ARMOR TYPE)
				InInventory "HX_BerserkPowerUpToken", 1
				{
					DrawImage "HXARMTYP", 72, -49;
					DrawImage "HXBERSRK", 72, -49;
				}
				
				// ARMOR SAVE PERCENTAGE FRAME
				InInventory "HXCUS_ArmorSaveToken", 1
				{
					InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
						{ DrawSwitchableImage BasicArmor > 0, "HXARMSVG", "HXARMSVC", 48, -62; }
					// Standard
					else { DrawImage "HXARMSVG", 48, -62; }

					DrawImage "HXARMSV", 48, -62;
					DrawNumber 3, HXGENERALFONTS, untranslated, savepercent, interpolate(128), whennotzero, 64, -58, 0;
					DrawSwitchableImage BasicArmor > 0, "HXSML010", "HXSML037", 65, -58;
				}

				// ARMOR FRAME
				DrawImage "HXARMTYP", 48, -49;
				// Brutal Doom Platinum - Demon Protection Sigil
				InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
				{
					DrawSwitchableImage BasicArmor > 0, "HXARMTFG", "HXARMTFC", 48, -49;
					DrawSwitchableImage BasicArmor > 0, "HXARMTNO", "HXBDSIGP", 48, -49;
				}
				// Standard
				else
				{
					DrawImage "HXARMTFG", 48, -49;
					DrawImage armoricon, 60, -38, center, 16, 15;
				}

				// HEALTH, ARMOR
				DrawImage "HXHPTOP", 2, -26;
				DrawImage "HXHPBOTS", 2, -14;
				
				// Health, Overhealth
				DrawString HXGENERALFONTM, untranslated, "HEALTH", 44, -20, 0;
				DrawBar "HXHABROK", "HXHABRBG", health (1200), horizontal, interpolate(64), 46, -20;
				DrawNumber 4, CONFONT, yellow, health, interpolate(128), 122, -22, 0, red, 24, green, 51;

				// Armor, Overarmor
				DrawString HXGENERALFONTM, untranslated, "ARMOR", 43, -13, 1;
				DrawBar "HXHABROK", "HXHABRBG", armor (1200), horizontal, interpolate(64), 46, -13;
				DrawNumber 4, CONFONT, yellow, armor, interpolate(128), 122, -15, 0, red, 24, green, 51;

				// AMMO
				DrawImage "HXAMMO", -114, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -110, -29;
				DrawString HXGENERALFONTM, untranslated, "MCHN", -70, -12, 0;
				DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -64, -29, 0, HXRTCRed, 100;
				
				DrawImage "HXAMMO", -58, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -54, -29;
				DrawString HXGENERALFONTM, untranslated, "ARTL", -14, -12, 0;
				DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -8, -29, 0, HXRTCRed, 5;
			}
			InInventory "PowerBikeSwitch", 1
			{
				// INVENTORY ARTIFACTS
				InInventory "HXCUS_ArtifactToken"
				{
					DrawImage "HXINVSEL", 2, -61;
					DrawSelectedInventory alwaysshowcounter, centerbottom, HXINDEXFONTS, 25, -30, 44, -36, untranslated;
				}

				// ITEM PANELS (BERSERK, ARMOR SAVE, ARMOR TYPE)
				InInventory "HX_BerserkPowerUpToken", 1
				{
					DrawImage "HXARMTYP", 72, -49;
					DrawImage "HXBERSRK", 72, -49;
				}

				// ARMOR SAVE PERCENTAGE FRAME
				InInventory "HXCUS_ArmorSaveToken", 1
				{
					InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
						{ DrawSwitchableImage BasicArmor > 0, "HXARMSVG", "HXARMSVC", 48, -62; }
					// Standard
					else { DrawImage "HXARMSVG", 48, -62; }

					DrawImage "HXARMSV", 48, -62;
					DrawNumber 3, HXGENERALFONTS, untranslated, savepercent, interpolate(128), whennotzero, 64, -58, 0;
					DrawSwitchableImage BasicArmor > 0, "HXSML010", "HXSML037", 65, -58;
				}

				// ARMOR FRAME
				DrawImage "HXARMTYP", 48, -49;
				// Brutal Doom Platinum - Demon Protection Sigil
				InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
				{
					DrawSwitchableImage BasicArmor > 0, "HXARMTFG", "HXARMTFC", 48, -49;
					DrawSwitchableImage BasicArmor > 0, "HXARMTNO", "HXBDSIGP", 48, -49;
				}
				// Standard
				else
				{
					DrawImage "HXARMTFG", 48, -49;
					DrawImage armoricon, 60, -38, center, 16, 15;
				}

				// HEALTH, ARMOR
				DrawImage "HXHPTOP", 2, -26;
				DrawImage "HXHPBOTS", 2, -14;
				
				// Health, Overhealth
				DrawString HXGENERALFONTM, untranslated, "HEALTH", 44, -20, 0;
				DrawBar "HXHABROK", "HXHABRBG", health (100), horizontal, interpolate(64), 46, -20;
				InInventory "HXSYS_HealthOverMaxToken", 1 { DrawBar "HXHEBRHI", "HXHABRNO", HXSYS_HealthOverMaxToken, horizontal, interpolate(64), 46, -20; }
				DrawNumber 4, CONFONT, yellow, health, interpolate(128), 122, -22, 0, red, 24, green, 51;

				// Armor, Overarmor
				DrawString HXGENERALFONTM, untranslated, "ARMOR", 43, -13, 1;
				DrawBar "HXHABROK", "HXHABRBG", armor (100), horizontal, interpolate(64), 46, -13;
				InInventory "HXSYS_ArmorOverMaxToken", 1 { DrawBar "HXHEBRHI", "HXHABRNO", HXSYS_ArmorOverMaxToken, horizontal, interpolate(64), 46, -13; }
				DrawNumber 4, CONFONT, yellow, armor, interpolate(128), 122, -15, 0, red, 24, green, 51;

				// SPEED! (AMMO)
				DrawImage "HXAMMO", -58, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -54, -29;
				DrawString HXGENERALFONTM, untranslated, "KMPH", -14, -12, 0;
				DrawNumber 4, HXSTATUSFONT, HXRTCLightRed, ammo1, interpolate(128), -8, -29, 0, untranslated, 101, HXRTCRed, 151;
			}
			InInventory "PowerHeavyMachinegunSwitch", 1
			{
				// INVENTORY ARTIFACTS
				InInventory "HXCUS_ArtifactToken"
				{
					DrawImage "HXINVSEL", 2, -61;
					DrawSelectedInventory alwaysshowcounter, centerbottom, HXINDEXFONTS, 25, -30, 44, -36, untranslated;
				}
				
				// ITEM PANELS (BERSERK, ARMOR SAVE, ARMOR TYPE)
				InInventory "HX_BerserkPowerUpToken", 1
				{
					DrawImage "HXARMTYP", 72, -49;
					DrawImage "HXBERSRK", 72, -49;
				}
				
				// ARMOR SAVE PERCENTAGE FRAME
				InInventory "HXCUS_ArmorSaveToken", 1
				{
					InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
						{ DrawSwitchableImage BasicArmor > 0, "HXARMSVG", "HXARMSVC", 48, -62; }
					// Standard
					else { DrawImage "HXARMSVG", 48, -62; }

					DrawImage "HXARMSV", 48, -62;
					DrawNumber 3, HXGENERALFONTS, untranslated, savepercent, interpolate(128), whennotzero, 64, -58, 0;
					DrawSwitchableImage BasicArmor > 0, "HXSML010", "HXSML037", 65, -58;
				}

				// ARMOR FRAME
				DrawImage "HXARMTYP", 48, -49;
				// Brutal Doom Platinum - Demon Protection Sigil
				InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
				{
					DrawSwitchableImage BasicArmor > 0, "HXARMTFG", "HXARMTFC", 48, -49;
					DrawSwitchableImage BasicArmor > 0, "HXARMTNO", "HXBDSIGP", 48, -49;
				}
				// Standard
				else
				{
					DrawImage "HXARMTFG", 48, -49;
					DrawImage armoricon, 60, -38, center, 16, 15;
				}

				// HEALTH, ARMOR
				DrawImage "HXHPTOP", 2, -26;
				DrawImage "HXHPBOTS", 2, -14;
				
				// Health, Overhealth
				DrawString HXGENERALFONTM, untranslated, "HEALTH", 44, -20, 0;
				DrawBar "HXHABROK", "HXHABRBG", health (100), horizontal, interpolate(64), 46, -20;
				InInventory "HXSYS_HealthOverMaxToken", 1 { DrawBar "HXHEBRHI", "HXHABRNO", HXSYS_HealthOverMaxToken, horizontal, interpolate(64), 46, -20; }
				DrawNumber 4, CONFONT, yellow, health, interpolate(128), 122, -22, 0, red, 24, green, 51;

				// Armor, Overarmor
				DrawString HXGENERALFONTM, untranslated, "ARMOR", 43, -13, 1;
				DrawBar "HXHABROK", "HXHABRBG", armor (100), horizontal, interpolate(64), 46, -13;
				InInventory "HXSYS_ArmorOverMaxToken", 1 { DrawBar "HXHEBRHI", "HXHABRNO", HXSYS_ArmorOverMaxToken, horizontal, interpolate(64), 46, -13; }
				DrawNumber 4, CONFONT, yellow, armor, interpolate(128), 122, -15, 0, red, 24, green, 51;

				// AMMO
				DrawImage "HXAMMO", -58, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -54, -29;
				DrawString HXGENERALFONTM, untranslated, "AMMO", -14, -12, 0;
				DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -8, -29, 0, HXRTCRed, 50;
			}
			InInventory "PowerattackhelicopterSwitch", 1
			{
				// INVENTORY ARTIFACTS
				InInventory "HXCUS_ArtifactToken"
				{
					DrawImage "HXINVSEL", 2, -61;
					DrawSelectedInventory alwaysshowcounter, centerbottom, HXINDEXFONTS, 25, -30, 44, -36, untranslated;
				}
				
				// ITEM PANELS (BERSERK, ARMOR SAVE, ARMOR TYPE)
				InInventory "HX_BerserkPowerUpToken", 1
				{
					DrawImage "HXARMTYP", 72, -49;
					DrawImage "HXBERSRK", 72, -49;
				}
				
				// ARMOR SAVE PERCENTAGE FRAME
				InInventory "HXCUS_ArmorSaveToken", 1
				{
					InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
						{ DrawSwitchableImage BasicArmor > 0, "HXARMSVG", "HXARMSVC", 48, -62; }
					// Standard
					else { DrawImage "HXARMSVG", 48, -62; }

					DrawImage "HXARMSV", 48, -62;
					DrawNumber 3, HXGENERALFONTS, untranslated, savepercent, interpolate(128), whennotzero, 64, -58, 0;
					DrawSwitchableImage BasicArmor > 0, "HXSML010", "HXSML037", 65, -58;
				}

				// ARMOR FRAME
				DrawImage "HXARMTYP", 48, -49;
				// Brutal Doom Platinum - Demon Protection Sigil
				InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
				{
					DrawSwitchableImage BasicArmor > 0, "HXARMTFG", "HXARMTFC", 48, -49;
					DrawSwitchableImage BasicArmor > 0, "HXARMTNO", "HXBDSIGP", 48, -49;
				}
				// Standard
				else
				{
					DrawImage "HXARMTFG", 48, -49;
					DrawImage armoricon, 60, -38, center, 16, 15;
				}

				// HEALTH, ARMOR
				DrawImage "HXHPTOP", 2, -26;
				DrawImage "HXHPBOTS", 2, -14;
				
				// Health, Overhealth
				DrawString HXGENERALFONTM, untranslated, "HEALTH", 44, -20, 0;
				DrawBar "HXHABROK", "HXHABRBG", health (400), horizontal, interpolate(64), 46, -20;
				DrawNumber 4, CONFONT, yellow, health, interpolate(128), 122, -22, 0, red, 24, green, 51;

				// Armor, Overarmor
				DrawString HXGENERALFONTM, untranslated, "ARMOR", 43, -13, 1;
				DrawBar "HXHABROK", "HXHABRBG", armor (400), horizontal, interpolate(64), 46, -13;
				DrawNumber 4, CONFONT, yellow, armor, interpolate(128), 122, -15, 0, red, 24, green, 51;

				// AMMO
				DrawImage "HXAMMO", -114, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -110, -29;
				DrawString HXGENERALFONTM, untranslated, "MCHN", -70, -12, 0;
				DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -64, -29, 0, HXRTCRed, 10;
				
				DrawImage "HXAMMO", -58, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo2, vertical, interpolate(64), -54, -29;
				DrawString HXGENERALFONTM, untranslated, "ROCK", -14, -12, 0;
				DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -8, -29, 0, HXRTCRed, 50;
			}
			InInventory "PowerMechSwitch", 1
			{
				// INVENTORY ARTIFACTS
				InInventory "HXCUS_ArtifactToken"
				{
					DrawImage "HXINVSEL", 2, -37;
					DrawSelectedInventory alwaysshowcounter, centerbottom, HXINDEXFONTS, 25, -30, 44, -12, untranslated;
				}
				
				// ITEM PANELS (BERSERK, ARMOR SAVE, ARMOR TYPE)
				InInventory "HX_BerserkPowerUpToken", 1
				{
					DrawImage "HXARMTYP", 72, -25;
					DrawImage "HXBERSRK", 72, -25;
				}
				
				// ARMOR SAVE PERCENTAGE FRAME
				InInventory "HXCUS_ArmorSaveToken", 1
				{
					InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
						{ DrawSwitchableImage BasicArmor > 0, "HXARMSVG", "HXARMSVC", 48, -38; }
					// Standard
					else { DrawImage "HXARMSVG", 48, -38; }

					DrawImage "HXARMSV", 48, -38;
					DrawNumber 3, HXGENERALFONTS, untranslated, savepercent, interpolate(128), whennotzero, 64, -34, 0;
					DrawSwitchableImage BasicArmor > 0, "HXSML010", "HXSML037", 65, -34;
				}

				// ARMOR FRAME
				DrawImage "HXARMTYP", 48, -25;
				// Brutal Doom Platinum - Demon Protection Sigil
				InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
				{
					DrawSwitchableImage BasicArmor > 0, "HXARMTFG", "HXARMTFC", 48, -25;
					DrawSwitchableImage BasicArmor > 0, "HXARMTNO", "HXBDSIGP", 48, -25;
				}
				// Standard
				else
				{
					DrawImage "HXARMTFG", 48, -25;
					DrawImage armoricon, 60, -14, center, 16, 15;
				}
			}
			InInventory "PowerTankSwitch", 1
			{
				// INVENTORY ARTIFACTS
				InInventory "HXCUS_ArtifactToken"
				{
					DrawImage "HXINVSEL", 2, -61;
					DrawSelectedInventory alwaysshowcounter, centerbottom, HXINDEXFONTS, 25, -30, 44, -36, untranslated;
				}
				
				// ITEM PANELS (BERSERK, ARMOR SAVE, ARMOR TYPE)
				InInventory "HX_BerserkPowerUpToken", 1
				{
					DrawImage "HXARMTYP", 72, -49;
					DrawImage "HXBERSRK", 72, -49;
				}
				
				// ARMOR SAVE PERCENTAGE FRAME
				InInventory "HXCUS_ArmorSaveToken", 1
				{
					InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
						{ DrawSwitchableImage BasicArmor > 0, "HXARMSVG", "HXARMSVC", 48, -62; }
					// Standard
					else { DrawImage "HXARMSVG", 48, -62; }

					DrawImage "HXARMSV", 48, -62;
					DrawNumber 3, HXGENERALFONTS, untranslated, savepercent, interpolate(128), whennotzero, 64, -58, 0;
					DrawSwitchableImage BasicArmor > 0, "HXSML010", "HXSML037", 65, -58;
				}

				// ARMOR FRAME
				DrawImage "HXARMTYP", 48, -49;
				// Brutal Doom Platinum - Demon Protection Sigil
				InInventory "HX_ShieldPowerUpToken", 1 && "HXMOD_BrutalDoomPlatinum", 1
				{
					DrawSwitchableImage BasicArmor > 0, "HXARMTFG", "HXARMTFC", 48, -49;
					DrawSwitchableImage BasicArmor > 0, "HXARMTNO", "HXBDSIGP", 48, -49;
				}
				// Standard
				else
				{
					DrawImage "HXARMTFG", 48, -49;
					DrawImage armoricon, 60, -38, center, 16, 15;
				}

				// HEALTH, ARMOR
				DrawImage "HXHPTOP", 2, -26;
				DrawImage "HXHPBOTS", 2, -14;
				
				// Health, Overhealth
				DrawString HXGENERALFONTM, untranslated, "HEALTH", 44, -20, 0;
				DrawBar "HXHABROK", "HXHABRBG", health (2000), horizontal, interpolate(64), 46, -20;
				DrawNumber 4, CONFONT, yellow, health, interpolate(128), 122, -22, 0, red, 24, green, 51;

				// Armor, Overarmor
				DrawString HXGENERALFONTM, untranslated, "ARMOR", 43, -13, 1;
				DrawBar "HXHABROK", "HXHABRBG", armor (2000), horizontal, interpolate(64), 46, -13;
				DrawNumber 4, CONFONT, yellow, armor, interpolate(128), 122, -15, 0, red, 24, green, 51;

				// AMMO
				DrawImage "HXAMMO", -114, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", TankReady, vertical, interpolate(64), -110, -29;
				DrawString HXGENERALFONTM, untranslated, "SHEL", -70, -12, 0;
				DrawNumber 4, HXSTATUSFONT, untranslated, ammo2, interpolate(128), -64, -29, 0, HXRTCRed, 10;
				
				DrawImage "HXAMMO", -58, -33;
				DrawBar "HXAMCLOK", "HXAMCLNO", ammo1, vertical, interpolate(64), -54, -29;
				DrawString HXGENERALFONTM, untranslated, "MCHN", -14, -12, 0;
				DrawNumber 4, HXSTATUSFONT, untranslated, ammo1, interpolate(128), -8, -29, 0, HXRTCRed, 50;
			}
		}
	}



/***************************************
*
* DEV STUFF DON'T LOOK AT THIS IT'S SPOOKY
*
***************************************/
	InInventory "HXSYS_DebugTagToken", 1
	{
		// Bruh, what's your class?
		DrawString HXGENERALFONTM, HXRTCGold, playerclass, 2, 54, 0, alignment(left), drawshadow(1,1);
		// What's that badass boomstick you got?
		DrawString HXGENERALFONTM, HXRTCGold, weapontag, 2, 62, 0, alignment(left), drawshadow(1,1);
		// How bout dat ammo, yo?!
		DrawString HXGENERALFONTM, HXRTCGold, ammo1tag, 2, 70, 0, alignment(left), drawshadow(1,1);
		DrawString HXGENERALFONTM, HXRTCGold, ammo2tag, 2, 78, 0, alignment(left), drawshadow(1,1);
		DrawKeyBar 3, horizontal, auto, 2, 86;
		DrawKeyBar 3, horizontal, auto, 2, 94, 3;
	}


}



/***************************************
*
* INVENTORY BAR
*
***************************************/


StatusBar InventoryFullscreen, FullscreenOffsets
{
	InInventory "HXSYS_StaminaStickyToken", 1
	{
		DrawInventoryBar Doom, alwaysshowcounter, 5, HXINDEXFONTS, -76 + center, -45, -50 + center, -25, untranslated;
	}
	else
	{
		DrawInventoryBar Doom, alwaysshowcounter, 5, HXINDEXFONTS, -76 + center, -32, -50 + center, -12, untranslated;
	}
}



/***************************************
*
* HUD & INVENTORY BAR DISABLED FOR NORMAL AND AUTOMAP SCREEN MODES
*
***************************************/


StatusBar Normal {}

StatusBar Automap {}

StatusBar Inventory {}