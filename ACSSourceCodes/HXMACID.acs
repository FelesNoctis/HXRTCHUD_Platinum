#library "HXMACID"
#include "zcommon.acs"
#import "HXAMODCM.acs"
#import "HXACVAR.acs"

str eri_buddha = "PowerEriBuddha";
str hx_eri_buddha = "HX_Acid_BuddhaPowerUpToken";
str hx_eri_buddhalong = "HX_Acid_BuddhaPowerUpLongTimerToken";
str eri_haste = "EriPowerSpeed";
str eri_infrared = "PowerEriInfrared";
str eri_invisibility = "PowerEriBlurSphere";
str eri_invulnerability = "PowerEriInvulnerabilitySphere";
str eri_quaddamage = "PowerEriQuadDamage";
str eri_radsuit = "PowerEriRadSuit";
str hx_eri_pins = "HX_Acid_Eri_PINS";
str hx_eri_pinv = "HX_Acid_Eri_PINV";
str hx_eri_pstr = "HX_Acid_Eri_PSTR";

script "HXS_AcidEriguns35ticHandler" enter
{
	// Wait 35 tics (1sec) before engaging, to make sure the token has been given
	delay(35);

	if (CheckInventory(hxmod_acideriguns)) {
		while (true)
		{
/* 		// Key Management Tokens
			// Blue Keys
			HXS_ItemSync(vanillabluecard, hxgen_bluecard);
			HXS_ItemSync(vanillablueskull, hxgen_blueskull);
			// Red Keys
			HXS_ItemSync(vanillaredcard, hxgen_redcard);
			HXS_ItemSync(vanillaredskull, hxgen_redskull);
			// Yellow Keys
			HXS_ItemSync(vanillayellowcard, hxgen_yellowcard);
			HXS_ItemSync(vanillayellowskull, hxgen_yellowskull); */

		// Powerup Management Tokens
			// Berserk
			HXS_ItemSync(vanillaberserk, hxgen_berserk);

		// Timer
			// Wait 35 tics (~1sec) before repeating, since we want this to be a clock
			delay(35);
		}
	}
}

script "HXS_AcidEriguns7ticHandler" enter
{
	// Wait 35 tics (1sec) before engaging, to make sure the token has been given
	delay(35);
	
	if (CheckInventory(hxmod_acideriguns)) {
		while (true)
		{
		// Powerup Management Tokens
			// Buddha
			HXS_PowerupTimer(eri_buddha, hx_eri_buddha);
			HXS_PowerupTimer(eri_buddha, hx_eri_buddhalong);
			// Haste
			HXS_PowerupTimer(eri_haste, hxgen_haste);
			HXS_PowerupTimer(eri_haste, hxgen_hastelong);
			// Infrared
			HXS_PowerupTimer(eri_infrared, hxgen_infrared);
			HXS_PowerupTimer(eri_infrared, hxgen_infraredlong);
			// Invisibility
			HXS_PowerupTimer(eri_invisibility, hxgen_invisibility);
			HXS_PowerupTimer(eri_invisibility, hxgen_invisibilitylong);
			// Invulnerability
			HXS_PowerupTimer(eri_invulnerability, hxgen_invulnerability);
			HXS_PowerupTimer(eri_invulnerability, hxgen_invulnerabilitylong);
			// Quad Damage
			HXS_PowerupTimer(eri_quaddamage, hxgen_quaddamage);
			HXS_PowerupTimer(eri_quaddamage, hxgen_quaddamagelong);
			// Radsuit
			HXS_PowerupTimer(eri_radsuit, hxgen_radsuit);
			HXS_PowerupTimer(eri_radsuit, hxgen_radsuitlong);

		// Powerup Display Toggles
			// Berserk & Quad Damage
			HXF_CVARConvert_Generic("Eri_PSTR", hx_eri_pstr);
			// Invisibility & Haste
			HXF_CVARConvert_Generic("Eri_PINS", hx_eri_pins);
			// Invulnerability & Buddha
			HXF_CVARConvert_Generic("Eri_PINV", hx_eri_pinv);

		// Timer
			// Wait 7 tics (1/5sec) before repeating, since we want this to be reasonably responsive
			delay(7);
		}
	}
}