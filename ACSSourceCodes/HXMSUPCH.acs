#library "HXMSUPCH"
#include "zcommon.acs"
#import "HXATOKEN.acs"
#import "HXAMODCM.acs"
#import "HXACVAR.acs"

// Supercharge
	#define superchangeskinshotguncvar "sv_tango_shotgun_skin"
	#define superchangeskinssgcvar "sv_tango_super_shotgun_skin"
	#define superchangeskinshotguntoken "HX_Supercharge_shotgun_skin"
	#define superchangeskinssgtoken "HX_Supercharge_ssg_skin"
	#define superchargeammotangobullet "TangoBulletClip"
	#define superchargeberserk "TangoPowerStrength"

script "HXS_Supercharge35ticHandler" enter
{
	// Wait 35 tics (1sec) before engaging, to make sure the token has been given
	delay(35);

	if (CheckInventory(HXS_GetTokenString(HXMOD_SUPERCHARGE))) {
		while (true)
		{
		// v2.8/v2.9 Detector
		if (CheckInventory(superchargeammotangobullet)
			&& !CheckInventory(HXS_GetTokenString(SUPERCHANGEVERSION29)))
		{ GiveInventory(HXS_GetTokenString(SUPERCHANGEVERSION29), 1); }

		// Skin Swap
		HXF_CVARConvert_Generic(superchangeskinshotguncvar, superchangeskinshotguntoken);
		HXF_CVARConvert_Generic(superchangeskinssgcvar, superchangeskinssgtoken);

/* 		// Key Management Tokens
			// Blue Keys
			HXS_ItemSync(vanillabluecard, hxgen_bluecard);
			HXS_ItemSync(vanillablueskull, hxgen_blueskull);
			// Red Keys
			HXS_ItemSync(vanillaredcard, hxgen_redcard);
			HXS_ItemSync(vanillaredskull, hxgen_redskull);
			// Yellow Keys
			HXS_ItemSync(vanillayellowcard, hxgen_yellowcard);
			HXS_ItemSync(vanillayellowskull, hxgen_yellowskull); */

		// Powerup Management Tokens
			// Berserk
			HXS_ItemSync(superchargeberserk, HXS_GetTokenString(HXGEN_BERSERK));

		// Timer
			// Wait 35 tics (~1sec) before repeating, since we want this to be a clock
			delay(35);
		}
	}
}

script "HXS_Supercharge7ticHandler" enter
{
	// Wait 35 tics (1sec) before engaging, to make sure the token has been given
	delay(35);
	
	if (CheckInventory(HXS_GetTokenString(HXMOD_SUPERCHARGE))) {
		while (true)
		{
		// Powerup Management Tokens
			// Infrared
			HXS_PowerupTimer(HXS_GetTokenString(VANILLAINFRARED), HXS_GetTokenString(HXGEN_INFRARED));
			// Invisibility
			HXS_PowerupTimer(HXS_GetTokenString(VANILLAINVISIBILITY), HXS_GetTokenString(HXGEN_INVISIBILITY));
			// Invulnerability
			HXS_PowerupTimer(HXS_GetTokenString(VANILLAINVULNERABILITY), HXS_GetTokenString(HXGEN_INVULNERABILITY));
			// Radsuit
			HXS_PowerupTimer(HXS_GetTokenString(VANILLARADSUIT), HXS_GetTokenString(HXGEN_RADSUIT));

		// Timer
			// Wait 7 tics (1/5sec) before repeating, since we want this to be reasonably responsive
			delay(7);
		}
	}
}