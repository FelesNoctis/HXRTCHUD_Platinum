#library "HXMBDBLK"
#include "zcommon.acs"
#import "HXATOKEN.acs"
#import "HXAMODCM.acs"
#import "HXACVAR.acs"
#import "HXASTATS.acs"

// Brutal Doom Black Edition
	#define bdbegunnergameplaymodecvar "begunnergameplaymode"
	#define hx_bdbegunnergameplaymodetoken "HX_BDBLK_begunnergameplaymodetoken"
	#define bdbestamina "Stamina"

script "HXS_BrutalDoomBlackEdition35ticHandler" enter
{
	// Wait 35 tics (1sec) before engaging, to make sure the token has been given
	delay(35);

	if (CheckInventory(HXS_GetTokenString(HXMOD_BRUTALDOOMBLACK))) {
		while (true)
		{
		// Powerup Management Tokens
			// Berserk
			HXS_ItemSync(HXS_GetTokenString(VANILLABERSERK), HXS_GetTokenString(HXGEN_BERSERK));

		// Weapon Icon Management Tokens
			HXF_CVARConvert_Generic(bdbegunnergameplaymodecvar, hx_bdbegunnergameplaymodetoken);

		// Timer
			// Wait 35 tics (~1sec) before repeating, since we want this to be a clock
			delay(35);
		}
	}
}

script "HXS_BrutalDoomBlackEdition7ticHandler" enter
{
	// Wait 35 tics (1sec) before engaging, to make sure the token has been given
	delay(35);
	
	if (CheckInventory(HXS_GetTokenString(HXMOD_BRUTALDOOMBLACK))) {
		while (true)
		{
		// Stamina Control
			HXS_StamNormal(bdbestamina, GetAmmoCapacity(bdbestamina));
		// Powerup Management Tokens
			// Infrared
			HXS_PowerupTimer(HXS_GetTokenString(VANILLAINFRARED), HXS_GetTokenString(HXGEN_INFRARED));
			// Invisibility
			HXS_PowerupTimer(HXS_GetTokenString(VANILLAINVISIBILITY), HXS_GetTokenString(HXGEN_INVISIBILITY));
			// Invulnerability
			HXS_PowerupTimer(HXS_GetTokenString(VANILLAINVULNERABILITY), HXS_GetTokenString(HXGEN_INVULNERABILITY));
			// Radsuit
			HXS_PowerupTimer(HXS_GetTokenString(VANILLARADSUIT), HXS_GetTokenString(HXGEN_RADSUIT));

		// Timer
			// Wait 7 tics (1/5sec) before repeating, since we want this to be reasonably responsive
			delay(7);
		}
	}
}