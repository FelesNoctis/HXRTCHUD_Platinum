#library "HXMKRG2"
#include "zcommon.acs"
#import "HXAMODCM.acs"

str kriegsland2_berserk = "SpeedBoost";
str kriegsland2_infrared = "UberLightAmp";
str kriegsland2_invul = "K2GodPower";
str kriegsland2_radsuit = "K2BioPower";
str hx_kriegsland2_infraredtoken = "HX_Kriegsland2_InfraredToken";
str hx_kriegsland2_speedtoken = "HX_Kriegsland2_SpeedToken";

/* script "HXS_Kriegsland2_35ticHandler" enter
{
	// Wait 35 tics (1sec) before engaging, to make sure the token has been given
	delay(35);

	if (CheckInventory(hxmod_kriegsland2)) {
		while (true)
		{
 		// Key Management Tokens
			// Blue Keys
			HXS_ItemSync(vanillabluecard, hxgen_bluecard);
			HXS_ItemSync(vanillablueskull, hxgen_blueskull);
			// Red Keys
			HXS_ItemSync(vanillaredcard, hxgen_redcard);
			HXS_ItemSync(vanillaredskull, hxgen_redskull);
			// Yellow Keys
			HXS_ItemSync(vanillayellowcard, hxgen_yellowcard);
			HXS_ItemSync(vanillayellowskull, hxgen_yellowskull);

		// Timer
			// Wait 35 tics (~1sec) before repeating, since we want this to be a clock
			delay(35);
		}
	}
} */

script "HXS_Kriegsland2_7ticHandler" enter
{
	// Wait 35 tics (1sec) before engaging, to make sure the token has been given
	delay(35);
	
	if (CheckInventory(hxmod_kriegsland2)) {
		while (true)
		{
		// Powerup Management Tokens - Permanent
			// Infrared
			HXS_ItemSync(kriegsland2_infrared, hx_kriegsland2_infraredtoken);
		// Powerup Management Tokens - Temporary
			// Berserk
			HXS_PowerupTimer(kriegsland2_berserk, hx_kriegsland2_speedtoken);
			// Invisibility
			/* HXS_PowerupTimer(vanillainvisibility, hxgen_invisibility); */
			// Invulnerability
			HXS_PowerupTimer(kriegsland2_invul, hxgen_invulnerability);
			// Radsuit
			HXS_PowerupTimer(kriegsland2_radsuit, hxgen_radsuit);

		// Timer
			// Wait 7 tics (1/5sec) before repeating, since we want this to be reasonably responsive
			delay(7);
		}
	}
}